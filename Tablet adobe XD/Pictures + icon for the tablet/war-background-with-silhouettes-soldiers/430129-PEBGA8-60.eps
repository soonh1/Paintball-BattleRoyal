%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Silhouette Soldier Background-2 B.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 31/08/18
%%BoundingBox: 0 0 1315 501
%%HiResBoundingBox: 0 0 1314.9471 500.0029
%%CropBox: 0 0 1314.9471 500.0029
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Silhouette Soldier Background-2</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-08-31T15:13:08+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-08-31T15:13:08+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-08-31T15:13:08+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8An0Qzjy90UXGMrLUUTGMi&#xA;WsoqMZEtRRCDIFgVaNanIsCUXGuBokVdVwNRK8LixtxXFbU2XFkCoSJhbollWkCmm2/+r/HOz0H9&#xA;zH3Om1P94Ur89f8AKN3H+tH/AMTGR7Q/uj8HK7K/vx8fueaJnNl6kohMiWsqy5FgVdMDAqyZEsCr&#xA;IMiWKqowMCqKMCCrxrgapFXVcDUSqquBgSuC4otdxxRbXHFbaK4ptTZMWQKi6YWwFQdMLaCxKLMw&#xA;u1kio8gWooqPIlrKJjyBayiEyJayiIRkS1yRkYwOPJWUYGsr8WLjilYwxSEPIMLbFlGlf8c6D/Vz&#xA;stB/cR9zqNR/eFKvPX/KN3H+tH/xMYO0P7o/By+yv78fH7nmiZzZepKuhyJayrpkWBV0wMCrJkSw&#xA;KsmRLBVXAxKovXAxKJjyLVJXTA1FVXFgV4xYt4odTFWiMUrGGLIKTjCzBUJFxbYlhsWZpdxJFR5A&#xA;tRRUeRLWUTHkC1lEJkS1lE24LMFUVYmgHzwCJJoNUzQtMvqN1H9pNhuSCD0y+ejyx5hw/GierYR+&#xA;HPieNaV98o8OVXWyki6brkFcTiqxjiyCHkOFsiyjSv8AjnQf6udloP7iPudRqP7wpV56/wCUbuP9&#xA;aP8A4mMHaH90fg5fZX9+Pj9zzKOp+jrnOF6kohDkSwKuhyJYFWQ5FgVdDkSwKshwFgVVTkWJVFOB&#xA;iUbZW8twxWOlQKknYZbhwSyGouPlmICyjBp94CB6fX3FP15M6HLdU45zQ72ljk58OJ51pTKPClxc&#xA;NbpMhVrirKxVhRh1ByMoGJo7FANurkVdXFDRxStOKQpNizCi+FtinUunadJC8LW6COQAOFAUkLSm&#xA;60O1M6EmJFU66OaYINmwwjVbBbC/e2Ri6ABlY9aEe2azLDhNB32nzeJDiKS+YvNOjeWtLOpavMYb&#xA;bmI14qXZnYEhVUd6KTkceKUzUU5ZiIsojyn5p0fzPpQ1TSJWltRI0LllKMsigEowPfiwPyORzYZQ&#xA;NSao5BIWE/jBYgKKk7ADKaWWySfnXY6ra/lLrkmmK5vxHGbiSEnmlsJUM5FD0EYPI/y1zcaPDGBF&#xA;/U6rLnM5f0Xn/wDziBf6y0fmKzdnfR4vq7xBnqsU7GTkEQ9PUXdiP5RmdmnTRkD6PLAih3GUHLbC&#xA;nyp+bf52fmLof5kalpmmXC6fp2nSokNm9vGwlUKG5u0iepSTltxIFKU8cjHQ4pC65uRGRp9E6Ddy&#xA;6rpVhemIwteW8U7xHf0zKgcqSNtq0zRjCTMxHe2GVC0dPZyojPUMF3IHWmWT0koi7RDKCaS+TkaU&#xA;B32HucxwC5UWV6UGXT4AwowWhB+edloRWGPudNqD6y7UY4pIVWVA6cwSrCoqKkbH3yWrPoRhJB2Q&#xA;S21oqSIsKKsoIlCqByr1rTr1zWcYcgzkaNnZinmHy7aWVu13allTkqmE7gA7VqST1zCzY4gWHb6P&#xA;WSmeGXzSFDmIXYlWQ4GBREQZiAoLE7AAVNcFNctkg83fmH5Y8oyQQ61O8VxcAmOCONnfipoWYDoK&#xA;+OW4tNPJdDk0ZMsY82Q6ZqNnqNhb39lKJrS6jWWCVejI4qDvuPlmPOJiaPNkDYsMi0vSi9Jrlf3Z&#xA;Hwoagn55lafTgm5cnB1GoraPN43/AM5aLqcHljQ4rFJU0lrmX9INHtH6gRfQEvc1/eca/wBM2+mE&#xA;RsBThiRkbLMP+cbb/Wrv8qdPk1RnkVJp4tPlkf1Ge2jfivuoWQOgB7L4UyWXJRphMbvTbi4MUEko&#xA;QyGNWYIoJZqCtABU1OV+Kx4Xyn5M/wCcgPzN1D8ydOsdWljnsNQv47OfR/q8UaxCaX06I3FZQ0fL&#xA;9tzWnxZflxRlHcW28NDZ9OSwyLIVCkjqtB2zmsuGQkQA3RkCFPllDOlaK1kkBJ+CnSvfMnFpZSFn&#xA;ZrlkAbaxlCk8gSBsB3yZ0cgOajMEC1SaAEnwzEALkBTEcsjFY1LMOoGSjAnkz4gOaa/XVzaW4Xhp&#xA;fqdlZ355v8MwUqkgP0io70yEo25GDLLHsOTwz/nI2DTIPJdva3OpQx6qLyK4t9OHxyyqEeNjsfgC&#xA;iQnkRTanU5kaDGRK/Js1WcTFBh3/ADj557udL1eDyokC3Frrl5zu2mPFYFji+GSEgj42oQ3LwUDf&#xA;MvV4RKNno4sJEGw+qoIrKELwjHJOjn7X35q4wAZzlOXMvm/8/wD87Nel1rUfJ+h3AttJhT6tqU0Y&#xA;HqzSMP3sfPqqCvBgKEkGpptmz0+EVxFp4aeKaN5j8waHM0+jaldabK9BI9rNJCWANQG4FeQ9jmWY&#xA;g81fSX5e/wDORKt+XOqX3mOVbjX9DAVE2ja8Eu0B2FOXOquVGw+LMHJpzxgDkUcL5887+eNe8565&#xA;JrGsyq8xHCCJFCpFEGJWNaCpC16tU+OZkICIoJAZf+Uv54a95Lv4rTUJptQ8tNSOSyZuTQCo/eQF&#xA;q04/yVCn2O+VZcAly2KkW+w7fVLe5t4riBxJBMiyRSLuGRhVWHsQc1hJT4a8XcYFABQb0wLwFOLB&#xA;udpG3jX/AIkc6DR/3Q/HVwswqRWapJ6dureDD9RyGv8A7tOAXJK/rq5o7czw1OeaCeJoZVDxuKMp&#xA;7jASyjExNjmkd/oFoYlNl+7kXZgxJDe+/Q5XLH3Ofi1cr9fJfpmjRW0yzTyCR0NVVfs1964I46Y5&#xA;9SZCgKTwXUYJIABO5Pv0y23A4C+WP+cqb3RL3zXpsllfQz30Fq0F/aRfE0RWQshdlqvI8iCp+IUH&#xA;jmx0gNHZeWzLv+ccPPTapbf4UmtI3stIsxJFfSbTvLJJyMZAJHFeTBe9F360yjV4I3xdSzjOXQvd&#xA;5dRiiieWRgkcalnc7AKBUk5jWw8N8Y/mv+cvmLzzezWfq/V/LkM7PZWMY48lU0SSY9Wam9Ogrtm1&#xA;xYREeaAGNeW/P3nPy00f6E1m7s4Y39QWqSsbctWp5QkmNq96rk5Y4y5hafRXmD/nJG3g/LHT9Z05&#xA;Yn8y6nztWtf2be4iQevKVPKqqWUopO/IV75hR0546PJHC+YdT1fUtT1S41W+nabULqQzz3FArNIx&#xA;qW+EKBv4ZngACmT3n8h/z51b9J2/lXzVcvexXjiLTNSmblLHK2ywysfidXbZWJqG26H4cTUYNuKK&#xA;OF9H/WYuRbiOR6nNdwi7ZcBXfXVyVo8N311cbXw2vrcfLlQcvHvg814C762la0FfHG18MsKt/NXI&#xA;hZ4yhO3JTUfccqGR3k9BXIqfm3zlbeXPLd/rVxV47OPkqAE8pHISNdv5nZRXL8ceKQDhThwi3xdq&#xA;uqX2q6lc6lfzNPeXcjSzyt1LMa/QPAds3MQAKDgEoQGm464Ve2fk9+bvmAzJ5c1TUWePhx02WUKz&#xA;VWrNG8jAsdvs18KeGa7WYaHFH4uw0JhKXDMe55b5z1mLW/NWqarEAIru4eRCFC8hWnMgdC1OR9zm&#xA;bhiYwAPNw8xiZEx5JLljW2CRWh69cVaxV2KvpL8kPzGv7zyvHpc0iyzaQBbiJtmNvT901R/KPg+j&#xA;NRrImE76F2ujxQywo7SD1OLzPbshMgaNh+z1r8iMxhkDZLQyB23Z95buRc6JazgEB1YgHr9ojOi0&#xA;JvFH8dXntbDhyyCE86XslnojTxgMwkQUPTf5ZX2lKsXxbuzMQnlo9xYPF5rB/vYWX/VIb9fHNAMj&#xA;vpaDuKYxaoksYdGqrdMmC40sBBor/wBIe+Fj4SGn1+1hPFn5N3C70yJmA2x0kpPPfzh/NGTRfKs1&#xA;vp/qQ6jqQNvaz9Cg29VxStCEPw79TXtl+ljxy8g16nB4UbJ3L5WJrueubh1qtaXd1Z3MdzaTPb3M&#xA;LcopomKOrDurLQg4CLV755O/O/Ub3yhqcuuXC3N9psLNPC8aBZ4mARNlC/aY8W+fvmrzaeQmOHkX&#xA;Z4DiljJkPVF8+5tXWOxVvk3ELU8QSQvappX9WKtYqqW881vPHcQOY5oXWSJx1VlNVI+RGJCvq/yx&#xA;581DzLoNpqiXJR5UpPFH8ISVdnXbfr0r2zn88ZQkQ9DpceKUBKk4j13WEFBcsR/lBW/Eg5VxluOl&#xA;xHorxeZdVRquyyD+UrT9VMIyFhLRYzy2R0PmsHaWFl91PL9dMmMjjy0HcVeTzLaIKqWkPgo/rTCc&#xA;ga46KRY3wyqnaWlPnnSr3X/J1/okDhJZkUwsduTROJFRjXoxWmX4MvBIEuJqNOJxNc3yrNDLBNJD&#xA;MhSWJikiNsVZTQg/I5vQbeeIpZhVl2labZXlvoepQSLFeC6/R08P2K3ABe1mqOzVVWP+TXvmPORB&#xA;kOlX+tyoRBESOd1+pickbxu0cilXQlWUihBGxBGZDikLcVXRqrSKrtwUmjOQTQeNBioW4q7FXsP5&#xA;I30FjqN9o1xEYri+ihu7V6VDL6Qdl5eyyBl+mu+a3XRsCQ6O27OmIkxPXd7FwzWU7a3rPk4U8tWI&#xA;/wAlv+JtnTaD+5j+Orx/aX9/L8dEJ+YAr5dcf8Wx/rOV9p/3XxbeyP774F5jwznaertWtp5bckpu&#xA;D1U9MkDTXOAlzbmuriUUZqKf2V2GJJKxxxChwyNNlvPfzp8s3uqeW4720JZtKZ55oB+1EVHNvmgW&#xA;vyrmbosgjKj1cDtDGZwsfwvn7Nw6JtWZWDLsymoPuMVZdqWj2lL240yjRalpianFbrsIk+tD14QA&#xA;d/SaJqV/ZHjmNGZ2B6GvscqcBuY9Y39u/wAmIZkuK7FV6KjK5ZwpVaqpBPI8gKCnsa/RiqzFVW0i&#xA;9a6hiC8zI6pxrxryNKVPTATsmIsvoH8m9St5/K36I4GO+0iRo7tCKV9aR3Rx8xUfRmn1sDx8XQu9&#xA;0GQcHD1iz3hmHTnW7hjS27hjS27hjS2rhARUdDllNZLC/P3n0aHJFoulwm98x34C2tuAeKeoSqu3&#xA;jv0X76ZkYNPxbnaIcTUang9I3kXhvn3ytJ5a1qPT5p2uLh7eO4uJmNeUslefHvTkO++bPDk4426j&#xA;UYuCVMby5pZJr0SaYugvDaIkM1nb3khBk43EoZuTMeXUfZ+GlMphvfvb8np4dugKD813kupazcay&#xA;1t9Vg1R3uLeMkGqcildv8pT9OSxDhjw9zHNLilxVzSfLGpP/ACTpVjquuGyvATG9rdsnHYh47d3V&#xA;v9iVrlWaRjGx5N2CAlKj3H7kr1KzFpcJECSGgt5qnfeeBJT2H8+Tiba5CihQCSABUnYAZJi+tNG8&#xA;u6Vp9rp6LaxLdWdusEU3Eeoo4qHAbc7lfHNFORJL0mPGABtyTb08rpnb1LyiKeXLIf5Lf8TbOj0P&#xA;9zH8dXk+0f7+X46ITz6VGgGu1ZUH68r7R/uvi3dkj998C844ZoKemt3p40tu9PGlt3p40tvNfN/m&#xA;WbzPq8nkLy9UvKSms6jRgsEMbD1VUbVP7Jrsa8e9RmYsXAPEl8HBzZjkPhx+JeGa9p6abrmo6chL&#xA;JZ3M1urNTkRFIUBNNq7Zs4SuILqMkeGRHcUPaRiS6hjNKPIqnlXjuQN6b0+WE8kDmyqXVI/LX5gX&#xA;kh05Vt7GW6tYLElqJFIHjBBYsWqsnLeoNdu2UcPHjG/OnI4/DyHblbFLq1uLWd7e4QxzJTmhpUVF&#xA;e3zy8G3HII2KlhQyjyp5dsdX0rUHmLJNBdadFHIvUC6naF+oI6GvzHzynLkMSPi34sYkDfePtYvl&#xA;zQn3kTTo9S846RZyoJIpLlDLGa0KIebDb2XKs0qgS26ePFMDzfU0Gm2VvNNPBbxxTXJBuJEUKzld&#xA;l5EdaV75pCSXoQANwr+ngpNrSFBoTQ48KRZXenjSLdwxpbQ0N2E2Iqv8csLfPHaw2mk3eo2+oTW0&#xA;bX9mrrazsKuiyCjhT7jDZAro0TwUQXgv57yc/PVNvgtIV2+bHf782Wj+h0mv/vPgwC5tJ7YQmVeP&#xA;rxiaP3RiQD+GZINuIRT6V8oWPl2/8naHFc21rqdtBbRiN5oklCycQJOIcGh5VBzU5ZETPR6LFgjP&#xA;FHkdnlv5l+XtQt/MF+Jrw3kCaak1pNKI0KwpcIoiAiCj4dwNhmZgmDEbdXVarFKMjfd+l5wVIQP2&#xA;JI+6n9cy3Bet/k15a0+80qXVXQJeRT3NqZ9yWimtkUBRXiOBdjWm9cwdVkINO17P03GOL3j7GDef&#xA;tD/QXmaSwWT144orf0pGAqVWJVHIdP2cycM+KNuHq8Ph5OH3KGv6dbW3nG6s1rFam7+CnVIpWDKB&#xA;/qq2GErhbHLjEchj0t9RGercid/HNO9Twt/WTyDVqRijgFU9b8mOX8s2TnqQ/wDycbN/ov7ofjq8&#xA;Z2mKzyHu+4IL8xDTy6T/AMXR/wAcr7Q/u/i5HY39/wDAvM4rvhsd1zRkPUyxWqfX0r9nbxrjTHwS&#xA;iElRxVSCMFNRiQs+tQcuJbf8MaZeHKlC30zS7e/udRgtkjvb0ILmdR8UgjBCV+VckZEiujUMYBJ6&#xA;vlXzrIZfOOuPRatf3P8Ad7qf3zbg965uMX0D3OgzfWfeUPY2kVr5jt7TUWEMUF4kV456IqShZDt4&#xA;UOEm42O5RGp0e99S6homiatyuVhhj1IpS31RYYXuIiPssjyK/TNPGZG3Tud/kwXv173zd5v0O+s7&#xA;zVZrucTzQapNBLMwCvK0oMglKrsOQWpHic22KYIFdzo82Mgm/wCcxqh+/plrQ9+8k+RNNm8mwTBh&#xA;ZLqcOn3M3phmkM1pK8vMl2YfvOS7KBTNblzHj91u40+l4obda+x4/oejBvN36FmpITJcWZYDbnwe&#xA;MOB7N8QzNnP0267FivJwHzCY/lIE/wCVgaUXNOJmZfdlgcgHI6n6C2aGIOUD8cn0sl+n7a/SM1NP&#xA;QHD3Ny3qUpH1PfwxpY4j1Q3qjDbdwrvrLUpyNMdmPAG0uilad/HErLHaWev75G3J4XJd0IZGrQ7E&#xA;eIxRwW8K/OT1D5zaR/8AdlvEynxHxL+sZtNIfQ812rGsvwCZ/mDpekSeUND1BZkg1O1sraAWnJeb&#xA;xMoNCteVUZia++QwTPGR0tu1uCHhRlylQ2Zt+V91bL5J02COVWdFl5oGBZS0zsQQOn2sxtT9Zdl2&#xA;cB4Ma/G7vNccsi+YLhQssJ0WS3dQwLCQF5RVQajYgjHFL6R/SY6rFfGe6H27vBUVTp8zEVZZYwre&#xA;AZZOQ+niPuza9XmQPSff+t7L+Ss3peU7kOwA+uSOKnopijFfvU5rdZ9fweh7IH7o/wBb9TBvzbvI&#xA;LrzhI8BDKkESGRWDBiATUUJ6Vp9GZWlFQdZ2nIHNt3Jd5lns7nzHbXsN0syXEVq87Kr1SRI0SQHm&#xA;By+JCdvHJ4wRGq72rUGJyAg3dPWV/Nzy0YwxS5VjX4OCkin+zpvmB+Vk7v8AlLF5tj82/LJWtLkH&#xA;+UxrX/iVMfys0/yji830h+WGpW+p+RNJv7fl6NxG7JzFGp6rjcCvhm50kaxge/73lO0piWeRHI19&#xA;wWfma3Hywx/4vj/jlXaP938XK7DH+EfAvI/X980VvZcLX1leXHkOVK8e9MUcKol46AhWpy642g4w&#xA;Vnr++NsuFqTVFtU5yzrFGOrOwVfx2wjdhKMRuXzlJNbjz+00rRy236VLu/IGJo/rFSeXTiR38M3G&#xA;/h/B5PYZ/Lj/AEp1+a+l6TDq0OrabcpPHqpkeZY2V1WSPhyIK/z86/PKtLMkUejldp4oiQnE3xPb&#xA;kvLe1ghBmVEAVImLBa7bAfQM1nN6LhADzf8AM22uovKV/wDWEFJtZ+tQsKE8Hh4BjTp0pmbppAzH&#xA;9V0/aGDhxEn+e8ouipgtKAAiE8iO59WTrmeOrpJch7v0l9EeT7kW3k/RxcssX+iw7k0FClVqT/k5&#xA;p828zXe9ZpRWGN9weMR3Zj/M8XT/ALgHWS8nqUHBWufi5dhQHfNlX7r/ADf0PPA1qb5ev9KY+S7K&#xA;30v8yXMt7bx2+mtO7XDMqRurKYgFJNKn1RtkM0uLHy5t2kxiGo3IqN/j7Xqc35i+UYWAfUkJP8iS&#xA;OPvRWzBGCfc7k6zCP4kBdfmx5XhLCJp7mnQxx0B/5GFD+GTGmm1S7RxDlZWj82/LPBWpc1I3X01q&#xA;Pn8VPux/KzX+UcXm0v5ueWSTVLld6VMa/fs5x/KyR/KWLzXN+bXlgEgC4YeIjFPxbH8rNP8AKOLz&#xA;eaa3+Yuv6vbNbTNFBC4KyJAGXkpINCWZz+zmZj00Ym3VZ+0cmQUaA8kqsPMms6evCyvpoI619NHI&#xA;Sp78emWSxRPMOPj1M4fSSEv1fV9Q1W6FxfTPPMiCNXc1PEEkD72OShARFBqzZpZDcjZWSsXQJWg7&#xA;4QGJNr4pjEqhWIK9CNjiQkGlZNSuo2Z45nV3BVirEEgilCQemDhDIZCORQAeVbd4q0jdlYr4lQwB&#xA;+jkclTXZqle3nKwha7VrTAQyidlK5YMwI+144QxkVZJAFUECqjbBTIFd6/vjSeJ3r++NLxPuj8hT&#xA;X8ovLZ8YJP8Ak/JmVg+n5/e4Gq/vD7h9wQf/ADkLrl1on5bz6harG8yXVuoWUErRmIP2Sp/HKtXA&#xA;SiAe9yOzcxxZDIcwP1PkvUvzN8y30Zj9SO1VlZG+rqykqwoRVmc/SN8wo6WIdtl7TyzHd7mOW+pX&#xA;VtMJ7eZ4Zh0ljYq33g1y8xB5uFHIYmwaKZx+d/NEYIXVLg1NTyct/wASrlZwQ7m8a7KP4ih7zzRr&#xA;t5/vTqE8gpTiZGC/8CDTJRxRHIMJ6rJLnIpebg0J65OmniQqvWcP0qa4WsHdVm/estW2HbEMjuiG&#xA;vZnHFpGYeBJIyPCzMyuuNV1CWza1a5leBqEwl2KEg1Hwk0xEBd0sssiKs0gJHkMcaMahK8R4VNck&#xA;1E7JrNr+rXFrFbT3k0lvEFEcLOxRQootFrTam2QGMA3TkHUTIAJNJXI3O4LdSTVie56k5NoO5RHr&#xA;Ctdqnvgplbfr++NJ4nev740vE71/fGl4nev740vE71/fGl4ku9f3ydNNu9f3xpbd6wxpbd6/vjS2&#xA;n2j/AOCH0/lrF3qEWo85KR20UTw+mFX06u7hgS9anidu2SACDI9Ezmh/KiOWVU1PV5kDMsZW3gUc&#xA;QVCvVnBavxHiVXtvjQY8Ul8dz+U0dulrKuqXE63VyJdRjMcfK29JhbskTBqH1QrFTvTlVumGgtyW&#xA;XSflTHo161pqGrXGrMsn6PSa3hhiVldeHq8ZJah05fZOxwUF4pWw71/fI0zt3r++NLbvX98aW3ev&#xA;740tvvX/AJx+Nfyd8snxt5P+T8mX4fp+f3uLqfr+A+4JF/zlU3H8ors/8vlr/wATwZuQ9/6GWm5n&#xA;3fpD4n9f3ymnIt3r++NLbvX98aW3ev740tu9f3xpbd6wxpbd6/vjS2y7S4fyultIP0jqmqW960db&#xA;nhbwtCrheRCMGLtyNUWqjsSeoEgAxMpLFT8smDA3+qqSrlXaCCgYCMotFdiwP7wcvh/Z2G+NBeKS&#xA;InuvylnjjWNNXsnFtEHlBgnrc0b1fgb06rXhuGXvt0w0EXJCeal/LmCwhXyzfaheXwlBme9hjhQw&#xA;tEDQKrPR0kqOtD9xIIHRMZHqxf1/fI0yt3r++NLbvX98aW3ev740tu9f3xpbd6/vjS271/fGlt9Y&#xA;/wDWG3/av/6fsn+78/8AZMP3v9H/AGDv+sNv+1f/ANP2P7vz/wBkv73+j/sHf9Ybf9q//p+x/d+f&#xA;+yX97/R/2Dv+sNv+1f8A9P2P7vz/ANkv73+j/sHf9Ybf9q//AKfsf3fn/sl/e/0f9g7/AKw2/wC1&#xA;f/0/Y/u/P/ZL+9/o/wCwd/1ht/2r/wDp+x/d+f8Asl/e/wBH/YO/6w2/7V//AE/Y/u/P/ZL+9/o/&#xA;7B3/AFht/wBq/wD6fsf3fn/sl/e/0f8AYO/6w2/7V/8A0/Y/u/P/AGS/vf6P+wd/1ht/2r/+n7H9&#xA;35/7Jf3v9H/YO/6w2/7V/wD0/Y/u/P8A2S/vf6P+we1eSP8ACv8AhXTv8J+n/h30z+jvS58OHNq0&#xA;9T4/t165dCq25OLl4uL1c0H+ZP8AgL/C0v8Ajr0v8P8Aqx+r6/qcPU5fu/7r461wZOGt04eK/T+j&#xA;9LyH/rDb/tX/APT9lX7vz/2Tk/vf6P8AsHf9Ybf9q/8A6fsf3fn/ALJf3v8AR/2Dv+sNv+1f/wBP&#xA;2P7vz/2S/vf6P+wd/wBYbf8Aav8A+n7H935/7Jf3v9H/AGDv+sNv+1f/ANP2P7vz/wBkv73+j/sH&#xA;f9Ybf9q//p+x/d+f+yX97/R/2Dv+sNv+1f8A9P2P7vz/ANkv73+j/sHf9Ybf9q//AKfsf3fn/sl/&#xA;e/0f9g7/AKw2/wC1f/0/Y/u/P/ZL+9/o/wCwd/1ht/2r/wDp+x/d+f8Asl/e/wBH/YO/6w2/7V//&#xA;AE/Y/u/P/ZL+9/o/7B3/AFht/wBq/wD6fsf3fn/sl/e/0f8AYO/6w2/7V/8A0/Y/u/P/AGS/vf6P&#xA;+wd/1ht/2r/+n7H935/7Jf3v9H/YO/6w2/7V/wD0/Y/u/P8A2S/vf6P+wd/1ht/2r/8Ap+x/d+f+&#xA;yX97/R/2Dv8ArDb/ALV//T9j+78/9kv73+j/ALB3/WG3/av/AOn7H935/wCyX97/AEf9g//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ee03ce69-5fe5-46e5-8149-d8ca26c3240e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ee03ce69-5fe5-46e5-8149-d8ca26c3240e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5e921c5c-42f4-4567-b58c-dcc0bae88c9b</stRef:instanceID>
            <stRef:documentID>xmp.did:5e921c5c-42f4-4567-b58c-dcc0bae88c9b</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ee03ce69-5fe5-46e5-8149-d8ca26c3240e</stEvt:instanceID>
                  <stEvt:when>2018-08-31T15:13:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>750.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=139 B=101 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>101</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500.003 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500.003 li
1314.95 500.003 li
1314.95 0 li
cp
clp
1314.95 500 mo
564.968 500 li
564.968 0 li
1314.95 0 li
1314.95 500 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[-548.244 -102.986 68.6596 -365.506 1111.69 78.5056 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"Uq7."Uq7."Uq7."Uq7."Uq7."Uq7."Uq7."V%=/"V%=/"V%=/"V%=/"V%=/"V%=/"V%=/"V%=/"V.C0
"V.C0":h:/":h:/":h:/":q@0":q@0":q@0";%F1";%I2";.O3";.O3";.O3";7U4";7U4";@[5";@[5
!u.X5!u.X5!u7^6!u@d7!uIm9!uIm9!uRs:!u\$;!ue*<!un0="!"6>!Ze6?!Zn<@![+HB![+HB![4NC
![F]F!@4ZF!@=`G!@FiI!@XuK!@b&L!@k,M!@t2N!A1>P!&(AQ!&1GR!&CST!&LYU!&UbW!&gnY!'%%[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!'%%[!'%%[!'%%[!'.+\!'.+\!'71]!'@7^!'I=_!'I=_!'RC`!'[Ia!'dOb!'mUc!(![d!(*ae!(<mg
!(F!i!(O'j!(X-k!(a3l!(j<n!(sBo!)'Hp!)9Tr!)B]t!)Kcu!)Kcu!)]p"!)g!#!)p'$!*$-%!*69'
!*??(!*HH*!*QN+!*cZ-!*l`.!*uf/!+)l0!+<#2!+E&2!+N,3!+W24!+i>6!+rD7!,/P9!,A\;!,Jb<
!,Sh=!,\n>!,o%@!-#+A!-,1B!->=D!-PFE!-bRG!-kXH!-t^I!.(dJ!.:sM!.D$N!.V0P!.h<R!.qBS
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS
!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS
!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS
!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS!.qBS
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.410678 .997757 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-548.244 -102.986 68.6596 -365.506 1111.69 78.5056 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9S`.!s8W-!s8W-!s8W-!s8W-!s8W-!s8T+!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~$O[=M$O[=M$O[=N$k*OQ$k*OQ$k*OQ%1NaU%1NaU%LrsY%M''\%hK9`&.fEc&J>]h',)#m'GV>u()@]&
(`4,/)B0V8*??1C+!;[L+sS?Y,paoe-n-Sp.kE8)0/,+91,CaE2E*QR2`E]U3&ilX3B9,]4$,Mc4$5Vg
4[)%n5<hCu5X@\&6UX=177B[87Ros>84cBE8kM`M9MJ5V:/4PZ:Janc;GpCk;cHas<`W:'=BJ[.>$G38
>[1Q??=.&I?t!JQ@U`hXAS#FbB4u!oC2.O"Ci!p)DJsH4E,]f;F*)PIG'A.TG^+LZH@($eI!pHnJ:N3%
~>
<~V5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV5:#bV5:#cVP^5fVP^5fVP^5fVP^5fVP^5gVl-Gj
Vl-GjVl-GkW2QYnW2QYoWMukrWiE)!WiE)!WiE)!WiE)!WiN2$X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
X/i;%X/i;%X/i;%X/rD(XK8M)XK8M*Xf\_-Xf\_-Xfeh0Y-+q1Y-+q1Y-+q1Y-+q1Y-+t3YHP.5YHP.5
YHP.5YHP.5YHG%2Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1Y-+n/Xf\_-Xf\_-Y-+q1Y-+q1Y-+q1
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
690.304 194.578 mo
694.609 194.578 li
694.609 194.578 696.484 190.508 703.804 189.093 cv
711.109 187.69 714.304 190.345 714.304 190.345 cv
714.304 190.345 713.854 185.887 717.364 182.882 cv
720.873 179.889 726.828 182.243 726.828 182.243 cv
726.828 182.243 726.828 179.964 728.838 177.823 cv
730.848 175.694 732.963 175.845 732.963 175.845 cv
732.963 175.845 731.943 167.768 739.638 165.439 cv
747.333 163.122 752.928 169.421 752.928 169.421 cv
752.928 169.421 756.152 164.099 760.982 163.786 cv
765.797 163.473 769.802 167.204 769.802 167.204 cv
769.802 167.204 775.367 159.829 782.162 160.993 cv
788.957 162.158 791.446 170.235 791.446 170.235 cv
791.446 170.235 793.696 169.058 796.891 171.512 cv
800.101 173.979 799.516 177.047 799.516 177.047 cv
799.516 177.047 803.131 175.532 806.611 176.558 cv
810.106 177.598 812.401 181.091 812.401 181.091 cv
812.401 181.091 813.031 178.812 815.101 178.186 cv
817.156 177.56 823.051 180.979 823.051 180.979 cv
823.051 180.979 822.376 172.263 829.875 170.485 cv
837.39 168.694 846.375 173.027 846.375 173.027 cv
846.375 173.027 847.155 170.635 852.15 171.224 cv
857.16 171.812 858.15 174.993 858.15 174.993 cv
861.45 172.676 li
861.45 172.676 859.755 168.557 864.269 163.56 cv
868.784 158.552 873.284 158.877 873.284 158.877 cv
873.344 158.877 li
873.344 158.877 872.639 154.432 875.984 151.301 cv
879.329 148.171 885.419 150.3 885.419 150.3 cv
885.419 150.3 885.284 148.033 887.174 145.817 cv
889.064 143.6 891.179 143.675 891.179 143.675 cv
891.179 143.675 889.724 135.649 897.284 133.032 cv
904.858 130.415 910.783 136.488 910.783 136.488 cv
910.843 136.475 li
910.783 136.075 910.318 131.905 913.498 128.924 cv
916.828 125.794 922.918 127.923 922.918 127.923 cv
922.918 127.923 922.783 125.644 924.673 123.44 cv
926.563 121.223 928.693 121.299 928.693 121.299 cv
928.693 121.299 927.238 113.272 934.798 110.655 cv
942.357 108.038 948.282 114.111 948.282 114.111 cv
948.282 114.111 952.107 111.168 957.117 111.506 cv
962.127 111.844 963.762 117.179 963.762 117.179 cv
963.762 117.179 965.862 115.714 969.117 115.639 cv
972.371 115.563 973.586 117.016 973.586 117.016 cv
973.586 117.016 980.366 111.206 987.431 114.662 cv
994.496 118.118 992.261 125.731 992.261 125.731 cv
993.146 126.232 li
993.146 126.232 994.946 122.801 999.806 121.724 cv
1004.67 120.647 1008.34 125.23 1008.34 125.23 cv
1008.34 125.23 1009.72 123.264 1012.77 122.288 cv
1015.81 121.311 1017.52 122.35 1017.52 122.35 cv
1017.52 122.35 1021.6 114.975 1029.64 116.265 cv
1037.68 117.554 1038.62 125.356 1038.62 125.356 cv
1038.62 125.356 1044.65 122.163 1048.99 123.966 cv
1053.32 125.756 1054.46 130.678 1054.46 130.678 cv
1054.46 130.678 1063.76 126.721 1068.89 130.627 cv
1074.02 134.534 1071.2 142.523 1071.2 142.523 cv
1071.31 142.523 1073.89 142.561 1075.1 145.967 cv
1076.33 149.436 1073.95 151.827 1073.95 151.827 cv
1073.95 151.827 1077.98 152.065 1080.35 154.444 cv
1082.71 156.824 1082.53 160.818 1082.53 160.818 cv
1082.53 160.818 1084.49 159.115 1086.64 159.466 cv
1088.8 159.804 1091.75 165.276 1091.75 165.276 cv
1091.75 165.276 1096.52 157.5 1104.05 159.178 cv
1111.6 160.843 1116.68 168.406 1116.68 168.406 cv
1116.68 168.406 1118.81 166.691 1122.74 169.333 cv
1126.67 171.975 1125.58 175.131 1125.58 175.131 cv
1129.84 174.555 li
1129.84 174.555 1130.9 170.285 1137.86 167.918 cv
1144.81 165.551 1148.47 167.755 1148.47 167.755 cv
1148.47 167.755 1148.81 162.822 1152.82 160.28 cv
1156.82 157.75 1162.3 160.831 1162.3 160.831 cv
1162.3 160.831 1162.7 158.577 1165.07 156.711 cv
1167.43 154.833 1169.5 155.258 1169.5 155.258 cv
1169.5 155.258 1169.93 147.144 1177.96 145.792 cv
1185.98 144.452 1190.39 151.376 1190.39 151.376 cv
1190.39 151.376 1194.52 146.518 1199.35 146.806 cv
1204.18 147.094 1207.46 151.276 1207.46 151.276 cv
1207.46 151.276 1214.28 144.69 1220.79 146.681 cv
1227.3 148.672 1228.32 156.961 1228.32 156.961 cv
1228.32 156.961 1230.75 156.085 1233.48 158.915 cv
1236.21 161.732 1235.09 164.7 1235.09 164.7 cv
1235.09 164.7 1238.94 163.648 1242.2 165.101 cv
1245.47 166.553 1247.1 170.31 1247.1 170.31 cv
1247.1 170.31 1248.15 168.118 1250.3 167.755 cv
1252.44 167.392 1257.66 171.524 1257.66 171.524 cv
1257.66 171.524 1258.55 162.822 1266.29 161.983 cv
1274.03 161.156 1282.16 166.541 1282.16 166.541 cv
1282.16 166.541 1283.36 164.274 1288.19 165.476 cv
1293.02 166.678 1293.44 169.959 1293.44 169.959 cv
1297.13 168.081 li
1297.13 168.081 1296.18 163.786 1301.54 159.403 cv
1306.89 155.02 1314.95 158.577 1314.95 158.577 cv
1314.95 500.003 li
564.968 500.003 li
564.968 131.178 li
564.968 131.178 571.373 125.493 576.367 125.08 cv
581.362 124.667 584.122 129.676 584.122 129.676 cv
584.122 129.676 585.862 127.923 589.057 127.359 cv
592.237 126.796 593.737 128.048 593.737 128.048 cv
593.737 128.048 599.182 121.324 606.862 123.665 cv
614.556 126.019 613.986 133.846 613.986 133.846 cv
613.986 133.846 620.556 131.491 624.486 133.846 cv
628.431 136.187 628.611 141.196 628.611 141.196 cv
628.611 141.196 638.556 138.541 642.861 143.074 cv
647.18 147.62 642.861 155.133 642.861 155.133 cv
642.861 155.133 645.486 155.446 646.055 159.04 cv
646.61 162.646 643.806 164.675 643.806 164.675 cv
643.806 164.675 647.735 165.464 649.61 168.118 cv
651.485 170.786 650.555 174.693 650.555 174.693 cv
650.555 174.693 652.805 173.29 654.86 173.916 cv
656.93 174.542 658.805 180.327 658.805 180.327 cv
658.805 180.327 664.985 173.29 672.11 175.945 cv
679.235 178.612 682.805 186.751 682.805 186.751 cv
682.805 186.751 685.234 185.336 688.609 188.467 cv
691.984 191.597 690.304 194.578 690.304 194.578 cv
cp
level3{
gsave
clp
[1.24425e-11 120.957 -120.957 1.24425e-11 939.957 122 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!sC(R!X("R!X((T!X(+U!X(.V!X(.V!X(1W!X(7Y!X(:Z!X(:Z!X(=[!X(@\!X(C]!X(F^!X(I_!X(L`
!X(Oa!X(Rb!X(Uc!X(Xd!X([e!X(^f!X(ag!X(dh!X(gi!X(jj!X(mk!X(pl!X(sm!X)!n!X)$o!X)'p
!X)*q!sD6s!sD9t!sD@!!sD@!!sDC"!sDF#!s;C#!s;F$!s;I%!s;L&!s;L&!s;R(!s;U)!s;X*!s;[+
!s;^,!s;a-!s;d.!s;g/!s;g/!s;j0!s;m1!s;p2!s;s3!s;s3!s<!4!s<$5!s<*7!s<-8!s<09!s<3:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!s<3:!X*3;!X39<!sWH>!s`Q@!siWA!t&fD!t/oF":T,I":f;L":oAM";#JO";,PP";5VQ";>_S!u5bT
!u>kV!uQ"X!uZ+Z!ul:]!uu@^"!)I`"!;Ub"!D[c"!Mde![Dgf![Mph![W$j![i3m![r9n!\&Bp!\8Nr
!\ATs!\Sd!!\\j"!\es$!]#-'!],6)!]5<*!]GK-!]PT/!]Y]1!]bf3!]tr5"$D/8"$M59!^;5:!^MD=
!^VM?"%.eC"%@tF"%J%G"%\4J"%e=L"&"LO"&+RP"&=aS"&FjU"&OpV"&Y$X"&k3["&t9\"'(B^"':Qa
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.41823 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24425e-11 120.957 -120.957 1.24425e-11 939.957 122 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!WiB'!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiB'!WiE)!WiE)!WiE)!s8W-
!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!<E3%!<N<(!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
!s8W,!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!s8Z/"U,&6"pYA=#RLhF$O[@O
%1WjY%hB3_&J5Wg&ebro'c%Q$(`4,/)]K_9*$$(A+!2UJ+X/*T,:"N\,pjue-n$Mn.P!##/M/S-0/#"6
0etL?1GgpG2E!KQ3&ilX3]fDb4?Pbi5!M7s5X@_(6UX@37Rp!?84cEH91qrQ:/4S\:Jakb;H$Lm<)cju
~>
<~.4Qi!/M/S-/h\k31,:U?1GgpG2)[?O3&ioY3]fDc4?Ykl5<hCu5sdn*6UX@37Rfm=84cBF8kViP9heAY
:Jakb;GpFl;c?[s<``@)=]np3>?kE<>[:WA?XI2K?t!JQ@Uit\AnG[gBP;'mBP;'nBk_9rC2.O"Ci!s*
D/F--DJj?0DJjB2Df9Q5E,]c8EH-#>EcQ2AF)uDDF)uGFFEDVIF`qqPGB\7TG^+IXG^+IYH$O[\H?spb
H[L3gI!pEkIXZcrJ:N0#J:W9&JUrE)K7ef0KS>,7L5(G;LPL\ALl$tFM2@+IMi3LOMi<USNK&pWNfK0]
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
1314.95 229.728 mo
1314.95 231.535 1283.45 238.818 1280.48 239.321 cv
1268.54 229.386 1242.4 227.828 1225.69 222.621 cv
1220.9 221.126 1215.63 218.362 1210.55 217.54 cv
1204.27 216.525 1195.5 217.449 1189.07 217.137 cv
1179.82 216.688 1171.42 216.466 1162.8 214.67 cv
1146.49 211.266 1140.9 210.536 1125.29 215.913 cv
1119.28 217.982 1113.49 219.36 1107.42 221.097 cv
1094.81 224.707 1081.44 230.059 1069.73 234.827 cv
1063.72 237.276 1057.5 241.421 1050.74 242.941 cv
1045.48 244.123 1039.72 243.021 1034.39 244.103 cv
1035.23 249.777 1027.2 253.048 1020.9 255.498 cv
1017.36 256.874 1015.74 257.823 1011.9 257.472 cv
1002.24 256.589 990.566 250.41 981.295 247.845 cv
970.696 244.912 961.285 239.224 949.703 238.503 cv
935.985 237.649 929.569 232.861 919.583 227.774 cv
908.752 222.257 891.129 216.565 877.337 216.5 cv
870.081 216.466 862.821 216.481 855.565 216.499 cv
848.619 216.517 840.307 215.026 833.857 215.951 cv
827.989 216.791 822.962 220.668 817.017 221.536 cv
812.656 222.172 807.463 221.222 803.009 221.434 cv
787.598 222.167 772.724 225.399 758.271 228.85 cv
751.121 230.556 743.889 232.942 736.464 234.005 cv
733.129 234.483 728.03 233.649 725.008 235.038 cv
716.594 238.907 708.179 242.776 699.765 246.645 cv
685.465 253.22 672.402 260.135 655.725 263.744 cv
653.997 264.118 650.399 265.515 648.405 265.024 cv
644.932 264.169 639.959 258.93 638.473 256.378 cv
637.525 254.75 637.653 251.951 636.238 250.539 cv
634.784 249.088 631.291 248.867 629.47 247.469 cv
626.12 244.897 624.781 240.854 621.408 238.021 cv
619.864 236.724 619.019 235.239 617.446 233.999 cv
616.78 233.475 616.757 232.657 615.804 232.269 cv
612.51 230.93 605.876 232.344 602.043 231.237 cv
599.615 230.536 597.92 228.828 595.36 228.244 cv
592.496 227.59 589.478 227.945 586.54 227.68 cv
583.135 227.374 581.871 226.289 579.083 225.347 cv
574.941 223.947 569.467 223.487 564.968 222.63 cv
564.968 500 li
1314.95 500 li
1314.95 500 1314.95 231.439 1314.95 229.728 cv
cp
level3{
gsave
clp
[2.00584e-11 194.992 -194.992 2.00584e-11 939.957 217.406 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!0YJ)!0PA'!0P>&!0G5$!0G2#!0>)!!0>%u!04tt!04qs!0+hq!0"bp!0"_o!/nVm!/nSl!/eMk!/eJj
!/\Ah!/\Ah!/S8f!/S5e!/J,c!/J,c!/A#a!/@u`!/7o_!/.f]!/.c\!/%ZZ!.qTY!.qQX!.hKW!.hHV
!._?T!._<S!.V3Q!.V3Q!.M*O!.D!M!.CsL!.CpK!.:jJ!.:gI!.1aH!.1^G!.(UE!.(RD!-tIB!-tIB
!-k@@!-k=?!-k:>!-b1<!-b1<!-Y(:!-Y(:!-Ot8!-Oq7!-Fh5!-Fh5!-=_3!-4Y2!-4V1!-+P0!-"G.
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!-"G.!-+M/!-4S0!-4S0!-=Y1!-F\1!-F\1!-F\1!-Ob2!-Ob2!-Xh3!-Xh3!-an4!-an4!-jt5!-jt5
!-jt5!-t(7!-t(7!.(.8!.(.8!.(.8!.149!.:::!.:::!.:::!.C@;!.C@;!.LF<!.LF<!.UL=!.^R>
!.^R>!.gX?!.gX?!.p^@!.p^@!/$dA!/$dA!/-jB!/-jB!/6pC!/6pC!/@!D!/@!D!/I'E!/I'E!/I'E
!/R-F!/R-F!/[3G!/d9H!/d9H!/m?I!/m?I!/m?I!0!EJ!0!EJ!0*KK!0*KK!03QL!03QL!0<WM!0<WM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.627746 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.00584e-11 194.992 -194.992 2.00584e-11 939.957 217.406 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~OcbcfOH>QcO,o?_O,f6\NfK*YNK&pVN/W[QMi3LNMMd:KM2@(GM26tDLkphALPLY?L5(G;L4t>8KnY25
K7ef/K7\],JUrB'JUi9$J:N-!It)rsIXZ`pI=6NkI!g<hI!g<gH[C*dH?sm`H?jd]H$OXZG^+IWGB\7T
GB\7SG'8%PF`hhLF`__IFEDSFF)uDCEcQ/>EH,u;E,]c9EH-#?F)uDDFEDVIF`hkNG'A.SGBe@WH$O[\
H$XgaH[C*eI!g?jI=?WpIt*!!J:W9&JqAT,K7ei1KS>,6L5(G;LPLY@Ll$tFMMd:KMi3LPN/WaUNK0$Z
~>
<~aiVZGaN2EB`l?$;`Pf^5_o'C0_ns:,_83t(_8*k$^V@Ls^:q=p]tD"j]Y(kg]=PSb\[f8]\[]/Y\$riU
[^NWP[C!<J['[0GZa7!EZEga?Z*:I9YHP.5Y-+q0XfSV*X/i;%X/`2"WiE%tWMlbnVl-DhVP^5eV50o_
USFTYU8"BVTqS0RTqJ'NT:_^HSt;OESXl=BS=H+>S=?";S"#n:S!oe7R[T\6R[T\6R[T\6R[]e9S"#n:
S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
1314.95 342.162 mo
1314.95 344.001 1304.82 341.363 1304.83 344.809 cv
1304.92 340.511 1298.65 338.759 1293.99 340.998 cv
1293.85 338.554 1294.12 335.469 1288.82 336.285 cv
1292.06 332.232 1286.62 324.319 1280.79 330.434 cv
1281.97 326.216 1273.3 327.403 1274.42 330.73 cv
1269.87 329.362 1265.25 329.824 1265.78 333.723 cv
1260.99 332.93 1262.1 332.855 1259.91 334.799 cv
1258.34 336.205 1253.33 336.665 1253.5 338.68 cv
1251.12 337.047 1247.45 336.22 1245.72 338.454 cv
1245.31 336.211 1241.51 333.358 1238.15 334.979 cv
1237.88 332.801 1237.99 330.004 1233.23 331.241 cv
1234.37 329.239 1236.48 323.718 1232.05 323.23 cv
1229.94 322.996 1227.97 324.423 1226.51 325.166 cv
1226.41 322.834 1225.37 320.316 1221.26 322.247 cv
1221.86 321.966 1220.74 319.444 1219.86 319.211 cv
1219.71 319.171 1214.05 319.236 1213.67 319.328 cv
1211.3 319.9 1209.77 321.667 1211.37 323.206 cv
1206.41 323.507 1206.74 324.556 1206.53 327.462 cv
1203.45 327.19 1200.78 328.746 1201.95 330.773 cv
1197.84 330.098 1194.55 329.465 1192.52 332.041 cv
1190.68 334.38 1190.42 336.145 1192.71 337.962 cv
1189.7 338.091 1186.07 338.803 1186.31 341.211 cv
1184.71 341.235 1183.07 341.351 1181.48 341.514 cv
1181.36 342.691 1181.7 343.934 1182.2 344.956 cv
1177.52 345.116 1171.71 347.129 1175.34 350.756 cv
1171.35 351.204 1168.15 351.936 1171.71 354.711 cv
1168.78 354.487 1164.62 356.365 1168.64 357.973 cv
1164.67 357.718 1160.45 356.776 1161.62 360.445 cv
1160.19 358.82 1154.98 355.24 1152.27 357.674 cv
1152.15 354.452 1146.34 353.427 1142.93 355.229 cv
1141.55 353.44 1138.63 351.019 1135.7 352.905 cv
1133.44 350.351 1129.5 349.297 1125.31 350.247 cv
1121.6 344.871 1114.71 342.55 1106.86 345.933 cv
1106.97 343.507 1105.68 340.905 1101.67 342.485 cv
1098.72 339.273 1099.99 340.28 1095.29 340.748 cv
1093.73 336.567 1087.61 337.007 1083.22 338.766 cv
1084.31 338.329 1081.91 335.588 1081.22 335.303 cv
1078.12 334.026 1078.99 335.857 1077.04 336.609 cv
1074.99 337.403 1071.04 336.996 1070.8 339.225 cv
1066.18 338.477 1060.7 340.339 1064.33 343.73 cv
1062.75 343.033 1060.75 342.839 1058.87 343.038 cv
1059.08 343.697 1058.57 344.557 1058.78 345.211 cv
1056.49 344.845 1054.49 345.736 1055.35 347.274 cv
1052.01 346.89 1046.29 346.339 1043.54 348.021 cv
1041.33 349.369 1041.26 351.976 1040.45 353.759 cv
1035.84 353.124 1033.36 352.88 1033.68 356.175 cv
1031.21 356.142 1025.81 356.685 1029.23 358.981 cv
1027.37 359.016 1025.23 359.072 1023.57 358.844 cv
1023.25 359.544 1022.49 360.175 1022.39 360.962 cv
1016.46 361.219 1016.76 361.246 1016.4 365.211 cv
1012.36 365.157 1009.8 365.4 1012.31 368.231 cv
1010.83 368.162 1008.35 368.167 1007.43 368.99 cv
1006.51 369.808 1008.53 371.846 1006 371.999 cv
1003.98 372.121 1002.22 369.082 998.895 369.485 cv
996.111 369.822 994.47 371.955 994.257 373.756 cv
992.917 370.878 992.141 368.434 987.327 368.767 cv
989.43 366.043 985.115 365.069 981.638 365.23 cv
981.376 361.818 980.95 360.215 974.885 360.468 cv
974.924 360.466 974.894 358.707 974.811 358.54 cv
974.292 357.506 973.721 357.796 972.861 357.174 cv
971.939 356.507 969.475 353.576 968.229 356 cv
964.689 353.281 963.099 356.441 963.201 358.673 cv
961.033 357.9 959.338 358.748 959.428 360.308 cv
958.443 360.353 957.413 360.323 956.415 360.341 cv
955.752 362.075 954.117 363.583 953.423 365.318 cv
949.535 365.497 947.931 364.76 946.454 367.469 cv
945.596 369.043 945.233 370.506 945.184 372.15 cv
941.04 372.314 937.888 371.031 937.92 374.475 cv
935.526 374.124 935.613 375.425 935.96 376.616 cv
931.883 376.974 931.254 376.441 932.966 379.487 cv
929 379.577 925.862 379.511 925.68 382.808 cv
924.536 382.827 923.379 382.655 922.223 382.69 cv
922.296 383.512 922.083 384.34 921.923 385.141 cv
921.247 385.067 920.383 385.27 919.701 385.192 cv
919.699 385.395 919.65 385.624 919.657 385.819 cv
917.554 384.045 917.302 382.38 913.491 383.152 cv
912.94 381.603 912.516 381.116 910.807 380.321 cv
910.455 380.158 909.638 380.498 909.257 380.311 cv
908.569 379.972 908.291 378.858 907.786 378.36 cv
907.179 377.76 906.2 377.289 905.527 376.709 cv
903.804 375.222 903.806 374.753 900.741 375.16 cv
900.838 372.48 899.689 372.825 896.497 372.811 cv
897.037 371.168 895.151 371.095 893.246 371.148 cv
893.259 369.321 891.724 367.015 889.157 366.261 cv
886.385 365.447 885 366.798 882.461 366.998 cv
882.586 365.707 882.68 363.868 880.052 364.319 cv
879.857 362.668 878.732 360.843 876.003 361.823 cv
875.867 360.495 876.35 359.67 874.828 358.749 cv
872.76 357.496 870.543 357.677 868.733 358.813 cv
868.746 356.394 862.857 351.652 858.948 353.532 cv
858.482 352.744 858.224 351.477 856.758 351.312 cv
855.885 349.64 854.97 347.869 851.979 347.823 cv
852.477 343.863 848.341 344.356 844.256 344.145 cv
844.272 344.146 842.603 341.541 841.774 341.258 cv
839.975 340.641 838.848 341.507 836.994 341.474 cv
837.107 340.32 835.988 339.441 834.254 339.307 cv
833.597 337.751 833.064 335.875 830.261 336.987 cv
830.714 335.62 829.025 335.121 827.555 335.911 cv
826.473 336.492 826.67 337.662 825.922 338.471 cv
822.304 338.359 822.146 339.759 822.678 341.638 cv
820.215 341.781 820.947 343.791 821.43 344.804 cv
821.142 344.212 818.761 345.982 818.52 346.229 cv
818.274 346.482 818.906 347.111 818.636 347.297 cv
818.241 347.567 817.753 347.414 817.415 347.597 cv
816.216 348.245 815.161 347.705 814.476 349.133 cv
812.464 348.497 807.94 348.129 806.127 349.365 cv
805.078 350.08 805.503 351.136 804.915 352.177 cv
802.933 351.387 796.99 351.004 795.192 351.99 cv
793.914 352.691 793.015 355.609 795.141 356 cv
791.139 357.474 792.899 358.076 795.24 359.467 cv
792.409 359.83 791.967 361.527 794.191 362.454 cv
789.952 363.933 793.319 364.797 796.118 366.325 cv
793.784 366.7 790.521 366.867 790.699 368.925 cv
790.878 370.991 793.339 369.922 795.015 371.171 cv
793.461 372.364 796.249 374.65 793.743 374.862 cv
793.594 375.743 794.823 375.812 794.917 376.638 cv
793.086 376.849 793.302 378.262 793.679 379.136 cv
793.582 378.913 791.536 379.684 791.351 379.805 cv
790.687 380.238 791.018 380.942 790.516 381.308 cv
789.923 381.742 788.537 381.525 788.034 382.045 cv
787.179 382.927 788.621 383.611 788.932 384.494 cv
786.908 383.297 783.667 381.98 783.411 384.835 cv
782.602 383.446 781.321 382.096 778.805 382.649 cv
778.48 380.956 778.995 379.333 776.267 378.428 cv
772.984 377.338 771.064 378.29 768.525 379.485 cv
767.979 377.104 766.857 375.481 762.993 376.828 cv
763.289 374.201 759.052 375.132 757.214 375.333 cv
756.085 375.457 756.536 375.721 755.48 375.479 cv
754.54 375.263 754.115 374.342 752.658 374.122 cv
751.317 373.919 749.296 374.659 748.263 374.311 cv
747.127 373.928 746.874 371.464 746.942 370.688 cv
746 370.671 745.014 370.707 744.158 370.538 cv
744.377 368.331 744.805 365.472 741.226 364.424 cv
738.226 363.546 736.467 364.509 734.246 365.627 cv
734.197 363.776 733.668 362.118 730.487 362.649 cv
730.479 362.141 730.369 361.183 729.774 360.81 cv
729.344 360.54 728.583 360.872 728.209 360.666 cv
727.046 360.029 720.942 355.347 719.499 358.128 cv
719.5 355.992 714.645 355.482 714.437 357.641 cv
712.702 357.492 710.335 358.108 712.188 359.3 cv
710.902 359.284 708.477 360.048 707.893 360.734 cv
707.114 361.648 707.704 361.768 708.652 362.808 cv
706.029 363.845 704.578 362.642 703.254 364.992 cv
702.366 366.567 702.926 367.539 703.953 368.975 cv
701.686 369.231 699.812 370.296 700.687 371.8 cv
698.576 372.156 697.557 372.975 698.692 374.308 cv
696.337 374.272 692.469 376.556 695.249 377.837 cv
692.822 378.914 691.173 377.402 690.964 379.91 cv
690.89 380.797 691.311 381.604 691.176 382.471 cv
689.153 382.777 689.411 382.587 688.712 383.661 cv
688.656 383.749 686.734 386.96 686.544 386.787 cv
685.18 385.549 686.007 382.145 682.497 382.644 cv
682.32 380.592 682.359 376.054 677.736 376.474 cv
678.337 374.632 678.903 373.581 674.985 373.811 cv
674.91 372.003 677.25 370.313 675.844 368.402 cv
674.657 366.789 672.457 366.973 670.248 367.157 cv
669.87 366.176 669.711 364.923 668.238 364.5 cv
666.963 364.133 665.631 364.907 664.571 364.425 cv
661.928 363.226 663.968 361.229 659.765 361.487 cv
659.122 360.12 659.836 357.557 658.966 356.492 cv
657.76 355.014 654.949 355.8 652.998 356.291 cv
652.936 355.379 653.003 354.436 652.927 353.526 cv
652.578 353.554 652.11 353.448 651.754 353.486 cv
651.724 352.367 652.361 351.004 650.946 350.081 cv
649.632 349.225 647.621 349.217 646.921 350.479 cv
647.301 347.884 641.435 346.464 640.165 349.319 cv
638.296 348.175 635.456 348.612 633.904 349.815 cv
634.571 349.298 627.809 349.308 627.174 349.463 cv
624.864 350.027 622.628 351.129 621.462 352.596 cv
620.04 350.741 615.517 354.594 615.041 355.507 cv
614.664 354.219 613.113 353.352 611.455 354.444 cv
611.648 352.915 612.387 351.142 609.878 350.295 cv
608.588 349.86 606.358 350.15 605.225 350.617 cv
605.331 349.218 605.009 348.045 602.755 347.652 cv
602.589 346.157 603.411 344.149 601.576 342.993 cv
600.218 342.137 596.837 342.005 595.193 342.615 cv
595.359 340.363 592.896 338.568 589.493 338.812 cv
589.462 337.205 589.143 335.29 585.993 335.649 cv
585.964 334.541 587.592 332.254 586.52 331.318 cv
585.317 330.268 581.201 330.281 579.543 330.824 cv
580.224 329.157 579.873 328.256 578.344 327.183 cv
576.678 326.014 576.411 326.261 573.026 326.144 cv
572.795 324.725 573.414 323.057 572.672 321.677 cv
571.598 321.632 570.468 321.65 569.506 321.812 cv
569.717 321.507 569.54 321.009 569.674 320.696 cv
568.774 320.539 568.135 320.238 567.714 319.847 cv
566.727 318.929 567.232 317.544 564.947 318.054 cv
565.138 321.838 564.968 325.691 564.968 329.491 cv
564.968 339.193 564.968 348.896 564.968 358.599 cv
564.968 371.603 564.968 384.608 564.968 397.613 cv
564.968 411.329 564.968 425.045 564.968 438.761 cv
564.968 450.598 564.968 462.436 564.968 474.273 cv
564.968 481.64 564.968 489.008 564.968 496.375 cv
564.968 497.583 564.968 498.792 564.968 500 cv
1314.95 500 li
1314.95 500 1314.95 342.763 1314.95 342.162 cv
cp
level3{
gsave
clp
[7.85427e-12 76.353 -76.353 7.85427e-12 939.947 341.667 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!0<WM!0E]N!0E`O!0NfP!0NiQ!0WoR!0a#T!0j,V!0j/W!0s8Y!1'>Z!10G\!19P^!19S_!1B\a!1Kec
!1Kec!1Tne!1^"g!1^%h!1g+i!1p4k!1p7l!2$=m!2$@n!2-Fo!26Oq!26Rr!2?[t!2Hau!2He!!2Qk"
!2Qn#!2["%!2d+'!2d+'!2m4)!3!:*!3!=+!3*C,!33L.!3<U0!3<U0!3E^2!3E^2!3Ng4!3Ng4!3Wp6
!3a$8!3j*9!3j-:!3s6<!3s6<!4'?>!40E?!49NA!49QB!4BZD!4BZD!4KcF!4KcF!4TlH!4]uJ!4^#K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.85427e-12 76.353 -76.353 7.85427e-12 939.947 341.667 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~NfT6^O,o?_O-#HbOH>QcOHGZfOckljP*;)nPEV2oPE_;rPa.N!Q'R`%QC!r)Q^=&*Q^F/-R$jA1R@0J2
R@0M4R[T_8S"#n:S"#q<S=H.@SXl=BSXl@DSt;OFSt;RHT:_dLTV.sNTV/!PTqS3TU8"BVU8"EXUSFTZ
USFT[Unjf_V5:#bV5:#cVP^5gVl-GjVl-GkW2QYoWMuksWiE)!WiE)"X/i;%X/i;&XK8M)XK8M*Xf\_.
Y-+q1YHP.5YHP.5Yct@9Yct@9Z*CR=ZEgdAZa7!EZa7!E['[3I['[3I[C*EM[C*EM[^NWQ\$riU\$riU
~>
<~S"#n:S"-"=S=H+>S=Q4ASXl=BSXuFEStDXIT:hjMTV8'QTqS0RTq\9UU8+KYUSO]]UnsoaV5C,eVP^5f
VP^8hVl-JlW2Q\pWMukrWMuntWiE,#X/i;%X/i>'XK8M)XK8P+Xf\b/Y-+t3YHP.5YHP17Yct@9YctC;
Z*CR>ZEgdBZa7!EZa7!F['[3I['[3J[C*EM[C*EN[^NWR\$riU\$riV\@B&Y\@B&Z\[f8]\[f8^]"5Jb
]=Y\e]=Y\e]Y(ni]tM+m]tM+m^:q=q^:q=q^V@Ou^qdb$_83t(_83t(_SX1,_SX1,_o'C0`5KU4`Pog8
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
1314.95 397.449 mo
1314.95 397.627 1276.79 398.47 1272.58 398.25 cv
1271.28 398.182 1270.21 398.078 1268.97 397.957 cv
1267.91 397.855 1267.06 397.245 1265.97 397.246 cv
1265.01 397.246 1264.19 398.002 1263.18 398.01 cv
1255.63 398.076 1247.39 396.053 1239.62 396.873 cv
1234.24 397.439 1228.5 397.695 1222.75 397.506 cv
1220.12 397.42 1217.39 396.703 1214.95 397.29 cv
1211.3 398.168 1211.32 399.155 1206.95 399.256 cv
1202.92 399.348 1203.82 399.094 1201.34 398.09 cv
1197.57 396.569 1194.87 394.363 1190.34 395.132 cv
1186.9 395.718 1183.99 397.065 1180.31 397.249 cv
1176.68 397.43 1172.64 396.89 1169.41 397.602 cv
1165.25 398.519 1161.87 400.634 1157.31 401.022 cv
1153.13 401.379 1148.69 400.806 1144.49 400.748 cv
1138.38 400.662 1132.05 401.82 1126.07 402.526 cv
1122.83 402.907 1120.43 404.458 1117.44 404.767 cv
1115.21 404.998 1113.2 404.158 1110.99 404.29 cv
1106.75 408.292 1091.62 407.166 1085.15 407.639 cv
1079.05 408.085 1073.13 408.758 1067.03 408.545 cv
1061.28 408.344 1056.52 410.236 1050.91 410.841 cv
1047.19 411.241 1042.86 411.317 1040.05 411.231 cv
1034.19 411.053 1029.11 413.834 1023.26 413.711 cv
1022.96 411.362 1023.93 409.54 1025.96 407.535 cv
1023.2 408.599 1019.22 409.691 1020.21 412.214 cv
1020.32 409.48 1016.45 405.931 1014.6 403.521 cv
1014.27 407.516 1017.83 410.622 1018.98 414.291 cv
1016.31 413.491 1013.64 412.684 1010.95 411.929 cv
1012.71 413.357 1015.79 413.872 1016.79 415.707 cv
1009.49 417.054 1001.47 418.245 993.803 417.731 cv
992.14 417.62 989.867 416.865 987.963 417.051 cv
980.084 417.817 972.138 419.104 963.949 418.485 cv
960.883 418.253 958.231 417.002 954.931 416.789 cv
947.019 416.278 938.86 418.152 931.013 416.689 cv
926.758 415.895 923.932 414.996 919.321 415 cv
916.596 415.002 907.384 416.487 908.41 413.033 cv
907.747 413.196 905.907 414.13 905.292 413.996 cv
903.446 413.592 902.641 410.722 902.833 409.579 cv
902.841 411.021 902.77 412.377 903.251 413.697 cv
899.261 409.075 897.298 408.455 888.97 407.978 cv
893.586 408.632 897.153 411.287 897.958 414.275 cv
895.976 413.104 894.605 412.064 892.001 411.501 cv
892.188 411.922 891.959 412.5 892.192 412.98 cv
890.916 412.937 889.485 412.408 888.203 412.495 cv
887.434 412.547 886.492 413.197 885.949 413.201 cv
876.925 413.262 866.934 412.555 857.878 412.011 cv
855.065 411.842 852.274 411.067 849.455 410.787 cv
845.153 410.36 840.561 410.861 836.818 409.806 cv
833.666 408.917 830.484 407.207 826.931 406.734 cv
819.099 405.69 810.158 407.946 802.389 406.712 cv
798.474 406.091 795.351 405.017 791.041 405.515 cv
781.659 406.599 772.411 410.102 762.975 410.957 cv
757.095 411.49 751.397 410.693 745.475 411.601 cv
738.84 412.618 732.539 414.341 725.762 414.999 cv
719.024 415.654 713.124 418.367 706.563 419.003 cv
698.535 419.782 689.907 418.694 681.79 418.998 cv
678.851 419.107 675.927 419.607 673.018 419.735 cv
669.296 413.384 662.962 418.93 657.75 418.001 cv
655.437 417.589 653.553 416.153 650.982 415.77 cv
649.696 415.578 647.742 415.757 646.71 415.367 cv
643.81 414.272 643.618 411.486 640.711 410.328 cv
635.666 408.317 626.37 410.588 621.436 411.918 cv
612.279 414.386 610.566 419.458 607.898 425.429 cv
607.001 424.097 606.235 422.703 604.938 421.526 cv
605.297 422.702 606.004 423.814 605.541 424.826 cv
602.39 421.844 601.973 417.02 597.164 414.915 cv
598.058 417.71 601.336 419.626 601.731 422.535 cv
601.832 423.275 601.937 423.819 602.455 424.48 cv
600.984 424.101 599.661 423.578 598.063 423.478 cv
599.26 424.161 600.524 425.059 601.695 425.699 cv
599.63 425.784 564.968 426.576 564.968 427.239 cv
564.968 500 li
1314.95 500 li
1314.95 397.449 li
cp
level3{
gsave
clp
[5.74973e-15 93.9003 -93.9003 5.74973e-15 939.957 394.974 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~C<PP-C<PM-CWkV/CWbP/Cs(V1D9:S0DTUY1DTUV1DogV1DogS1E6-Y2EQH_3EQH_4Elce5F3)n6F2uh6
FN;q8FN;n8FiW":G/r(;GK8.<GK8.=GfS4>GfS4?H,n:@H,n:AHH4@BHH+7@HcF=AI)X=AIDsCBIDj7?
I`0@AJ&KFBJAfLCJ]#OCJ]#ODK#>UEK#5ODK>PUEKYk^GKu(^GL;CgHLVUgHLqgjIM8$jIMS?sJMn[$K
MnQpJN4m$KNP*$KNP*!JNkE*KNkE*LO1`0LO1W*LOLr0MOLr0MOh89OP.J9NPIeBPPIe?OPe"BPQ+=KQ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.74973e-15 93.9003 -93.9003 5.74973e-15 939.957 394.974 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Bk_9qBkhBtC2.KuC27U#CM[g'Ci+$+D/F-,D/O6/DJj?0DJsH3DfBZ7E,]c8E,fl;EH6)?EcQ2@EcZ;C
F)uDDF)uGFFEDYJF`hkNG'8%PG'8(RGB\7TGB\:VG^+IXG^+LZH$O[\H$O^^H?spbH[C-fI!g<hI!g?j
I=6NmIXZ`qIt)ruJ:N0#J:N0$JUrB'JUrB(JqAT,K7ef0KS5#4KnY58L5(G<LPLY@LkpkDM2@(HMMd:K
MMd:KMi3LON/W^SN/W^SNK&pWNK&pWNfK-[NfK-[O,o?_O,o?_OH>QcOcbcgP*1ukP*1ukPEV2oPa%Ds
~>
<~b0%lLb0%lLb0%lLb/qcIaiVZHaiMQEaN2HDaN2HDaN)?Aa2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2Z-=
`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?!:`Pog8`Pod6`5KU4`5KR2
_o'C0_o'C0_o'C0_o'C/_SX1,_SX1,_SX1+_83t(_83t(_83t'^qdb$^qdb#^V@Ot^:q=p]tM+m]tM+m
]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja]"5Ja]"5Ja\[f8]\[f8]\[f8]\@B&Y
~>
<~hr!>Khqm5HhVR,GhVR,GhVI#CgtUT<gY1B8g=b04g"=s0f[na,f@JO(f%&=$e^`4#e^W*ueC<!teC<!t
eC<!teC;sre'ldpe'landaHOjdF$@hdF$=fd*U.dd*U+bcd0q`cd0n^cHa\Zc-=JVbfn8RbKJ&NaiVWF
aN2HDaN2HCa2c6?`l?$<`l?$<`l?$;`Pog8`Pog7`5KU4`5KU3_o'C0_o'C/_SX1,_SX1+_83t(_83t'
^qdb$^V@Ou^V@Ou^:q=q]tM+m]tM+m]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja\[f8]\[f8]
~>
<~StDXIT:hjMTV8'QTq\9VUSO]]UnsoaV5C,eVPg>iVl6PmW2ZbqWN)tuWiN2$X/rD(XK8M)XKAV,Xfeh0
Y-+t3YHP17YctC;Z*CU?ZEggCZa7$G['[6K[C*HO[^NZS\$rlW\@B&Y\@B)[\[f;_]"5Mc]=Y\e]=Y_g
]Y(nj]tM+n^:q=q^:q=r^V@P!^qdb$^qdb%_83t)_SX1-_o'C0_o'C1`5KU5`Pog9`l?$<`l?$=a2c6A
aN2HDaN2HDaiVZHaiVZHaiVZHb0%lLb0%lLbKJ)Pbfn;Tbfn;Tc-=MXc-=MXcHa_\cHa_\cd0q`cd0q`
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
889.047 258.49 mo
889.411 258.226 889.23 258.006 889.445 257.009 cv
889.841 255.182 890.259 253.347 890.412 251.476 cv
890.579 249.444 889.465 249.681 888.923 247.685 cv
886.108 247.232 886.186 243.901 885.499 241.817 cv
884.777 239.627 883.112 237.974 881.847 236.103 cv
881.006 234.86 879.118 232.945 878.655 231.573 cv
878.215 230.268 872.471 224.595 872.471 224.595 cv
875.661 221.554 li
872.968 217.815 li
869.64 220.865 li
869.64 220.865 860.68 211.931 859.168 210.184 cv
857.657 208.437 853.312 206.888 852.057 206.828 cv
850.803 206.767 847.763 204.016 846.26 203.38 cv
844.757 202.744 840.738 202.877 840.738 202.877 cv
840.738 202.877 843.211 199.517 845.347 194.326 cv
846.63 191.21 847.208 186.604 846.089 183.35 cv
843.03 183.231 839.951 181.7 836.871 181.5 cv
835.102 181.385 835.204 182.012 834.328 183.545 cv
833.216 185.494 832.276 187.622 831.58 189.804 cv
830.89 191.971 829.809 191.098 827.718 191.681 cv
825.013 192.436 822.347 193.994 819.527 194.694 cv
816.92 195.342 814.137 194.945 811.482 194.825 cv
808.01 194.667 804.8 194.674 801.377 194.486 cv
800.216 194.422 799.692 194.099 798.917 194.872 cv
798.239 195.547 798.054 196.974 797.75 197.833 cv
797.517 198.493 797.311 199.446 796.88 199.856 cv
795.718 200.957 792.492 201.904 790.954 202.509 cv
787.868 203.722 783.085 205.475 780.934 207.98 cv
778.016 211.38 777.043 216.724 773.201 219.251 cv
771.94 220.081 772.49 223.971 771.154 224.731 cv
769.819 225.492 766.782 234.674 766.631 235.5 cv
766.481 236.326 764.213 235.67 762.623 235.781 cv
761.034 235.893 761.952 239.09 762.332 240.546 cv
762.712 242.002 763.535 250.765 763.535 250.765 cv
763.535 250.765 762.277 252.632 761.466 253.949 cv
760.656 255.266 762.319 258.188 762.319 258.188 cv
762.319 258.188 761.726 259.639 761.83 261.114 cv
761.933 262.589 765.419 265.754 766.229 267.402 cv
767.039 269.05 766.751 269.886 767.908 270.546 cv
769.066 271.206 769.651 273.611 770.266 274.458 cv
770.881 275.304 772.182 276.028 772.329 277.13 cv
772.475 278.231 778.034 284.217 778.034 284.217 cv
778.034 284.217 776.218 286.049 775.781 286.746 cv
775.344 287.444 776.337 290.71 776.337 290.71 cv
776.337 290.71 773.259 293.372 772.576 294.532 cv
771.894 295.692 771.29 299.959 770.472 302.158 cv
769.654 304.356 744.468 322.521 744.448 324.227 cv
744.429 325.933 745.825 327.022 748.15 328.489 cv
750.476 329.957 754.185 338.295 756.2 338.302 cv
758.214 338.309 778.221 305.7 778.221 305.7 cv
778.221 305.7 784.279 300.976 784.848 301.158 cv
785.416 301.341 785.248 305.874 786.581 309.042 cv
786.588 309.058 786.597 309.073 786.603 309.089 cv
787.8 310.292 785.202 312.73 785.202 312.73 cv
786.109 316.388 li
786.774 321.576 li
786.774 321.576 786.396 339.19 787.447 342.184 cv
787.447 342.184 784.638 349.116 785.26 351.991 cv
785.883 354.866 787.53 360.364 787.53 360.364 cv
787.53 360.364 785.475 363.052 785.558 370.231 cv
785.64 377.409 785.263 395.022 786.593 400.991 cv
787.923 406.96 788.255 415.692 788.391 417.628 cv
788.526 419.565 788.967 421.854 788.733 423.516 cv
788.499 425.179 788.457 430.57 788.31 431.479 cv
788.163 432.387 788.397 433.718 786.9 433.374 cv
785.404 433.03 780.72 432.235 779.785 432.9 cv
778.85 433.564 773.083 438.309 774.37 441.661 cv
775.657 445.014 778.904 450.324 783.212 450.77 cv
787.52 451.216 792.27 450.958 792.27 450.958 cv
792.634 454.151 li
792.634 454.151 801.343 457.357 804.462 456.838 cv
807.581 456.32 810.147 455.916 810.372 453.131 cv
810.597 450.346 810.727 444.201 811.218 443.194 cv
811.708 442.186 813.085 437.824 812.913 435.366 cv
812.74 432.909 813.051 430.343 813.051 430.343 cv
813.051 430.343 814.257 428.537 813.736 426.104 cv
813.214 423.671 812.971 419.198 812.971 419.198 cv
812.971 419.198 817.55 404.508 817.589 401.063 cv
817.628 397.617 816.024 380.742 816.024 380.742 cv
816.024 380.742 820.068 370.43 820.73 366.866 cv
821.392 363.303 823.99 346.357 823.99 346.357 cv
823.99 346.357 825.357 360.854 827.852 369.435 cv
830.347 378.016 833.566 383.927 835.789 385.642 cv
838.013 387.357 841.322 388.547 841.653 389.272 cv
841.985 389.997 842.04 391.789 841.846 392.028 cv
841.653 392.266 840.515 395.04 843.136 399.421 cv
845.757 403.802 843.59 405.9 843.59 405.9 cv
843.59 405.9 841.708 408.052 842.609 410.908 cv
843.511 413.763 844.06 415.596 843.542 417.204 cv
843.023 418.811 838.36 424.535 838.285 427.226 cv
838.251 428.422 837.72 433.178 839.517 433.8 cv
841.313 434.423 852.139 433.813 855.158 431.88 cv
858.178 429.947 861.599 425.741 862.021 423.766 cv
862.444 421.79 861.915 415.242 862.314 413.941 cv
862.714 412.641 863.63 410.706 863.419 408.7 cv
863.208 406.694 862.211 403.471 862.047 402.136 cv
861.884 400.8 862.588 397.758 862.519 395.817 cv
862.45 393.876 862.708 391.463 862.122 390.157 cv
861.537 388.851 864.592 382.425 863.748 380.389 cv
862.904 378.353 863.431 374.873 863.717 373.955 cv
864.003 373.037 865.542 370.983 864.606 369.627 cv
863.669 368.271 856.388 359.427 856.125 356.676 cv
855.862 353.926 860.149 346.067 859.94 343.088 cv
859.731 340.109 861.892 329.929 861.317 327.725 cv
860.742 325.52 859.128 316.503 859.711 314.816 cv
860.293 313.128 862.164 311.8 861.944 308.672 cv
861.857 307.432 861.585 305.606 861.289 303.852 cv
860.437 302.044 859.146 300.989 859.146 300.989 cv
859.146 300.989 860.681 299.102 860.995 298.635 cv
861.31 298.169 860.438 295.635 860.438 295.635 cv
860.438 295.635 863.891 296.357 865.465 296.024 cv
867.039 295.691 869.29 297.09 871.294 296.95 cv
873.299 296.809 875.398 294.067 876.06 292.613 cv
876.722 291.158 873.494 286.714 871.623 283.806 cv
869.752 280.898 866.155 269.216 865.366 267.863 cv
864.576 266.51 863.217 262.973 862.131 258.38 cv
861.623 256.232 860.96 254.128 860.383 252 cv
859.982 250.523 858.474 248.409 858.821 246.843 cv
860.512 248.777 863.391 249.627 864.954 251.329 cv
866.28 252.772 867.389 255.139 868.537 256.77 cv
869.524 258.173 869.719 258.832 868.605 260.333 cv
869.369 261.474 871.188 264.903 872.288 265.165 cv
873.191 265.381 874.526 264.226 875.296 263.862 cv
876.897 263.106 878.475 261.987 880.182 261.333 cv
882.736 260.356 885.609 260.082 888.123 258.954 cv
888.603 258.739 888.882 258.61 889.047 258.49 cv
cp
.545037 .739284 .762142 .78439 cmyk
f
805.078 199.364 mo
803.667 190.902 li
803.667 190.902 800.847 185.79 800.494 184.909 cv
800.142 184.027 798.379 184.732 797.497 182.264 cv
796.616 179.796 797.145 173.802 798.731 174.507 cv
798.731 174.507 796.616 162.872 800.671 157.584 cv
804.725 152.295 812.306 151.061 819.71 152.824 cv
827.114 154.587 829.582 165.34 829.23 170.982 cv
829.23 170.982 832.932 172.392 832.755 175.213 cv
832.579 178.033 831.345 183.322 829.758 184.027 cv
828.172 184.732 827.467 185.614 827.467 185.614 cv
827.467 185.614 827.114 194.252 827.996 195.662 cv
828.877 197.073 831.169 197.954 831.169 197.954 cv
805.078 199.364 li
cp
f
874.33 262.788 mo
874.33 262.788 878.434 273.924 879.088 275.358 cv
879.741 276.791 878.725 279.43 879.352 280.121 cv
879.978 280.812 878.929 286.396 878.409 287.788 cv
877.89 289.179 877.625 293.562 877.625 293.562 cv
877.625 293.562 875.222 296.567 874.058 298.297 cv
872.894 300.027 868.58 303.904 867.397 311.237 cv
866.213 318.57 872.734 329.358 880.029 332.601 cv
887.325 335.844 895.901 332.064 898.331 329.801 cv
900.762 327.538 903.916 326.276 906.281 325.33 cv
908.647 324.384 901.013 315.924 896.575 309.602 cv
892.137 303.28 888.079 301.002 888.079 301.002 cv
888.079 301.002 892.694 299.829 893.162 297.839 cv
893.631 295.85 894.332 292.422 893.65 290.247 cv
892.968 288.072 888.799 282.826 888.799 282.826 cv
888.799 282.826 889.676 281.049 889.569 278.967 cv
889.463 276.884 887.223 274.31 887.223 274.31 cv
886.542 258.415 li
886.542 258.415 880.309 256.819 877.753 258.03 cv
875.197 259.24 874.33 262.788 874.33 262.788 cv
cp
f
1017.1 274.434 mo
1016.3 276.812 1012.5 277.129 1011.86 280.617 cv
1011.58 282.154 1011.79 284.594 1012.1 286.845 cv
1011.55 286.871 1011.18 286.864 1011.18 286.864 cv
1011.18 286.864 1008.1 289.395 1006.91 290.896 cv
1006.26 285.032 li
1007.75 284.3 li
1007.75 279.881 li
1005.69 277.591 li
1008.89 274.615 li
1008.89 268.204 li
1008.89 268.204 1005.69 266.487 1006.26 264.77 cv
1006.83 263.053 1008.66 261.908 1008.89 262.022 cv
1009.12 262.137 1013.36 270.265 1016.9 270.265 cv
1016.93 270.265 1016.95 270.266 1016.97 270.266 cv
1017.22 271.821 1017.46 273.333 1017.1 274.434 cv
cp
1003.51 292.244 mo
1004.09 292.246 li
1003.75 292.263 1003.51 292.244 1003.51 292.244 cv
cp
1111.15 275.305 mo
1111.97 273.925 1104.24 263.02 1103.69 261.294 cv
1103.14 259.569 1101.97 254.53 1101.97 254.53 cv
1101.97 254.53 1102.66 253.15 1103.14 253.909 cv
1103.87 255.06 1106.62 254.337 1107.71 254.211 cv
1109.64 253.986 1111.1 253.233 1112.8 252.316 cv
1115.31 250.959 1117.82 249.591 1120.34 248.242 cv
1121.33 247.714 1122.93 246.781 1122.81 245.459 cv
1122.76 244.838 1122.19 244.212 1121.91 243.656 cv
1121.53 242.863 1121.17 242.067 1120.74 241.296 cv
1119.69 239.411 1118.47 237.573 1117.1 235.906 cv
1117.1 235.906 1115.09 233.712 1115.45 230.605 cv
1115.82 227.498 1108.14 218.907 1108.14 216.166 cv
1108.14 213.424 1103.57 204.102 1103.57 202.457 cv
1103.57 200.812 1097.72 194.415 1097.54 190.942 cv
1097.36 187.47 1088.4 183.266 1088.4 183.266 cv
1088.4 183.266 1083.47 180.158 1082.37 175.589 cv
1081.27 171.02 1075.24 171.385 1074.51 171.202 cv
1073.78 171.02 1067.56 169.74 1067.02 167.912 cv
1066.47 166.085 1061.53 163.343 1061.53 163.343 cv
1061.53 163.343 1062.63 158.408 1062.45 156.397 cv
1062.26 154.387 1060.07 154.021 1060.07 154.021 cv
1060.62 146.893 1057.15 133.55 1040.88 136.109 cv
1024.61 138.668 1030.64 158.591 1030.64 158.591 cv
1030.64 158.591 1029.91 160.418 1030.1 162.429 cv
1030.28 164.44 1035.4 166.633 1035.4 166.633 cv
1035.58 172.299 li
1035.58 172.299 1029.18 175.041 1026.99 175.406 cv
1024.79 175.772 1021.5 179.976 1020.77 183.083 cv
1020.04 186.19 1017.85 183.631 1016.02 184.545 cv
1014.19 185.459 1015.29 189.846 1013.28 190.394 cv
1011.27 190.942 1005.24 199.898 1005.24 204.285 cv
1005.24 208.672 1003.23 215.8 1002.86 220.004 cv
1002.5 224.208 1001.22 224.573 1000.85 227.681 cv
1000.49 230.788 999.937 240.11 997.013 244.131 cv
994.088 248.152 993.54 252.539 993.905 257.839 cv
994.271 263.14 991.346 270.634 990.798 272.827 cv
990.25 275.02 992.729 277.813 993.094 279.64 cv
993.328 280.812 998.328 287.728 998.682 292.257 cv
1007.03 292.257 li
1007.06 292.257 li
1013.09 292.257 li
1013.09 300.879 li
1016.36 304.152 li
1016.36 304.152 1016.36 345.245 1016.36 345.802 cv
1016.36 346.359 1023.19 345.802 1023.19 345.802 cv
1023.19 302.759 li
1026.67 302.759 li
1026.67 302.759 1025.55 313.903 1027.92 314.878 cv
1030.29 315.853 1029.04 319.753 1028.62 321.982 cv
1028.2 324.211 1028.76 333.962 1026.81 335.494 cv
1024.86 337.026 1026.67 342.319 1026.81 344.966 cv
1026.95 347.613 1028.28 351.107 1029.95 352.5 cv
1031.63 353.893 1032.18 360.646 1032.45 367.75 cv
1032.73 374.854 1033.21 391.212 1032.8 392.188 cv
1032.38 393.163 1030.01 397.063 1030.01 399.013 cv
1030.01 400.963 1034.05 406.953 1033.94 408.764 cv
1033.83 410.575 1033.21 418.933 1033.94 421.44 cv
1034.66 423.947 1042.83 421.858 1042.83 421.858 cv
1043.1 429.101 li
1043.1 429.101 1041.43 432.444 1038.23 435.37 cv
1035.03 438.295 1033.49 444.284 1034.05 447.906 cv
1034.61 451.528 1039.07 452.364 1040.88 452.921 cv
1042.69 453.478 1053.69 450.274 1054.67 449.578 cv
1055.64 448.881 1058.71 442.474 1062.19 440.245 cv
1065.67 438.016 1064.42 434.394 1064.14 432.862 cv
1063.86 431.33 1064.14 420.743 1064.14 420.743 cv
1064.14 420.743 1066.23 420.743 1066.65 419.49 cv
1067.06 418.236 1065.11 412.525 1065.11 411.132 cv
1065.11 409.739 1062.05 406.257 1062.05 404.167 cv
1062.05 402.078 1062.47 390.237 1062.75 387.869 cv
1063.02 385.501 1061.07 377.144 1061.07 375.472 cv
1061.07 373.8 1058.57 365.303 1059.77 361.403 cv
1060.97 357.503 1058.85 346.638 1058.43 339.533 cv
1058.01 332.429 1059.77 326.022 1059.77 326.022 cv
1059.77 326.022 1062.88 336.33 1063.86 340.509 cv
1064.84 344.687 1065.39 349.006 1067.48 352.767 cv
1069.57 356.528 1069.71 371.293 1069.85 375.054 cv
1069.99 378.815 1069.57 386.894 1070.41 389.541 cv
1071.24 392.188 1077.23 396.784 1077.23 396.784 cv
1077.23 396.784 1076.12 403.61 1075.98 407.232 cv
1075.84 410.853 1079.74 414.893 1083.5 415.729 cv
1087.26 416.564 1093.53 414.754 1093.67 412.664 cv
1093.81 410.575 1093.39 401.799 1093.39 399.988 cv
1093.39 398.177 1098.27 391.352 1099.52 388.427 cv
1100.77 385.501 1099.24 378.815 1098.82 378.119 cv
1098.41 377.422 1099.24 369.204 1099.24 366.418 cv
1099.24 363.632 1097.01 352.627 1096.87 350.12 cv
1096.73 347.613 1099.24 342.877 1100.49 339.951 cv
1101.75 337.026 1099.24 330.618 1099.1 327.136 cv
1098.96 323.654 1099.66 318.36 1101.61 315.017 cv
1103.56 311.674 1102.86 300.112 1102.86 299.137 cv
1102.86 298.559 1104.98 295.575 1107.77 292.257 cv
1107.52 289.859 1107.17 287.658 1106.87 286.694 cv
1106.18 284.485 1106.38 275.374 1106.38 275.374 cv
1106.38 275.374 1110.32 276.686 1111.15 275.305 cv
cp
996.198 296.758 mo
999.301 296.758 li
999.301 311.558 li
1001.63 311.558 li
1001.63 344.275 li
1000.84 344.275 li
1000.84 350.496 li
1005.52 350.496 li
1005.52 344.275 li
1004.72 344.275 li
1004.72 311.558 li
1007.06 311.558 li
1007.06 296.758 li
1010.16 296.758 li
1010.16 292.257 li
1007.06 292.257 li
996.198 292.257 li
996.198 296.758 li
cp
f
1129.26 286 mo
1129.26 287.25 1128.23 291.56 1128.17 291.81 cv
1128.17 291.81 1127.79 292.22 1127.48 291.28 cv
1127.37 291.26 li
1127.03 293.17 1125.98 292.81 1125.98 292.81 cv
1125.41 292.04 li
1125.16 293.14 1124.29 293.31 1123.79 293.06 cv
1123.35 292.84 1123.85 289.61 1123.87 288.75 cv
1123.72 290.8 1122.31 294.13 1121.7 294 cv
1121.08 293.88 1120.5 293.167 1121.03 288.56 cv
1121.12 287.755 1120.1 284.62 1119.41 283.88 cv
1118.94 283.36 1117.4 282.27 1116.49 281.66 cv
1116.45 281.72 li
1116.45 281.72 1116.38 284.47 1116.63 285.16 cv
1116.88 285.84 1118.76 288.94 1118.26 290.09 cv
1117.76 291.25 1115.76 290.25 1114.7 288.94 cv
1113.63 287.62 1111.33 283.83 1110.96 281.75 cv
1110.58 279.67 1112.12 274.79 1112.12 274.79 cv
1105.74 258.44 li
1105.73 258.44 li
1105.73 258.44 1102.48 258.44 1101.29 258.31 cv
1100.1 258.19 1099.29 255.44 1099.29 255.44 cv
1104.48 246.31 li
1114.41 245.06 li
1116.54 245.25 li
1116.54 245.25 1118.73 247.25 1118.6 248.81 cv
1118.48 250.38 1118.85 252.69 1118.54 253.31 cv
1118.23 253.94 1117.45 254.417 1117.45 254.417 cv
1120.7 271.25 li
1120.7 271.25 1126.73 276.75 1127.54 277.56 cv
1128.35 278.38 1129.27 284.75 1129.26 286 cv
cp
f
1026.84 156.519 mo
1026.84 156.519 1022.47 136.678 1042.38 133.803 cv
1061.79 131 1062.61 150.644 1062.61 150.644 cv
1062.61 150.644 1064.44 151.884 1064.76 152.537 cv
1065.09 153.19 1063.92 153.842 1063.07 153.712 cv
1062.22 153.581 1059.87 153.451 1059.87 153.451 cv
1059.87 153.451 1033.5 155.083 1033.24 155.213 cv
1032.98 155.344 1029.97 158.281 1028.15 158.542 cv
1026.32 158.803 1025.67 159.13 1025.6 158.542 cv
1025.53 157.955 1026.84 156.519 1026.84 156.519 cv
cp
f
1017.52 261.658 mo
1021.4 249.724 1016.96 244.59 1015.85 244.728 cv
1014.74 244.867 1013.63 244.312 1011.41 242.925 cv
1009.19 241.537 1012.71 241.44 1012.71 241.44 cv
1012.71 241.44 1009.27 239.775 1011.77 237 cv
1014.26 234.224 1011.21 221.319 1009.68 220.348 cv
1008.16 219.376 1001.91 208.83 1000.94 204.389 cv
999.97 199.949 993.171 191.484 990.812 184.962 cv
988.453 178.44 977.906 172.889 976.657 171.363 cv
975.408 169.836 965.695 169.975 963.921 169.975 cv
962.147 169.975 954.732 165.396 954.732 165.396 cv
954.732 155.266 li
954.732 155.266 957.23 152.907 957.924 152.629 cv
958.618 152.352 959.589 149.993 960.005 147.078 cv
960.422 144.164 957.369 144.164 957.369 144.164 cv
958.34 132.508 951.679 122.1 937.525 124.321 cv
923.371 126.541 926.285 144.997 926.285 144.997 cv
925.175 145.83 925.313 149.854 925.313 152.074 cv
925.313 154.294 932.529 162.065 932.529 162.065 cv
932.529 162.065 933.501 167.616 932.807 169.004 cv
932.113 170.391 924.62 175.387 922.122 176.775 cv
919.624 178.162 914.767 179.134 913.657 180.105 cv
912.547 181.076 910.188 188.57 907.135 191.068 cv
904.082 193.565 902.417 201.336 901.446 205.499 cv
900.474 209.663 905.47 213.27 905.47 215.629 cv
905.47 217.989 902.278 223.678 902.278 228.118 cv
902.278 232.559 898.393 236.861 896.45 239.081 cv
894.507 241.301 894.923 248.24 893.813 251.986 cv
892.703 255.733 891.593 266.141 891.593 269.471 cv
891.593 272.801 894.646 279.185 896.589 280.017 cv
898.531 280.85 899.364 286.956 900.335 288.621 cv
900.632 289.13 901.901 289.417 903.513 289.573 cv
903.513 308.084 li
900.8 308.084 li
900.8 320.764 li
913.818 320.764 li
913.818 323.807 li
910.099 329.217 li
910.099 338.008 li
897.588 338.008 li
897.588 343.249 li
909.254 348.321 li
909.254 357.958 li
912.466 357.958 li
912.466 398.703 li
917.876 398.703 li
917.876 368.102 li
923.624 368.102 li
919.229 357.451 li
922.441 357.451 li
922.441 331.246 li
922.441 331.246 924.639 330.4 925.146 329.893 cv
925.653 329.386 930.387 328.034 932.585 329.217 cv
934.782 330.4 946.021 327.019 946.021 327.019 cv
946.021 327.019 947.711 335.303 948.557 336.487 cv
949.402 337.67 953.967 342.911 952.953 346.8 cv
951.938 350.688 955.488 365.059 957.179 368.947 cv
958.87 372.836 959.884 379.429 960.344 383.825 cv
960.803 388.221 960.899 402.253 960.391 406.142 cv
959.884 410.03 963.604 416.962 963.583 417.638 cv
963.563 418.314 965.294 431.163 964.111 434.206 cv
962.927 437.25 963.942 448.577 965.125 451.113 cv
966.309 453.649 983.384 453.142 987.442 452.296 cv
991.499 451.451 989.132 440.969 988.963 439.278 cv
988.794 437.588 987.611 431.501 987.442 428.289 cv
985.92 420.174 li
985.92 420.174 987.949 417.976 988.963 416.793 cv
989.978 415.609 990.147 409.185 990.147 407.325 cv
990.147 405.465 991.33 395.829 992.852 391.94 cv
994.373 388.052 991.499 371.314 991.499 369.116 cv
991.499 366.918 993.359 357.789 993.359 355.76 cv
993.359 353.731 991.837 336.994 991.837 336.994 cv
991.837 336.994 994.712 339.699 998.431 338.854 cv
1002.15 338.008 1003.33 335.641 1005.87 333.275 cv
1008.41 330.908 1007.39 321.102 1007.39 318.059 cv
1007.39 315.016 998.013 307.577 998.013 307.577 cv
998.013 307.577 1004.61 300.307 1006.13 296.645 cv
1006.45 295.873 1006.71 294.51 1006.94 292.868 cv
1008.84 290.602 1011.06 288.181 1013.15 286.262 cv
1018.29 281.544 1011.97 275.535 1011.97 272.482 cv
1011.97 269.429 1013.63 273.592 1017.52 261.658 cv
cp
f
955.228 326.853 mo
955.228 326.853 956.06 338.451 955.761 345.35 cv
955.463 352.249 953.844 363.635 955.338 368.653 cv
956.832 373.67 957.464 396.784 957.762 401.488 cv
958.061 406.192 956.568 407.76 958.061 411.209 cv
959.555 414.659 956.33 420.522 956.33 420.522 cv
956.33 420.522 958.851 427.516 958.456 431.593 cv
958.061 435.669 954.201 437.865 952.845 440.373 cv
951.489 442.882 949.697 440.687 945.515 442.882 cv
941.333 445.077 932.968 443.823 932.67 441.001 cv
932.371 438.178 934.705 433.935 936.262 431.103 cv
937.82 428.271 937.82 421.871 937.82 421.871 cv
937.82 421.871 936.17 418.871 935.319 417.324 cv
934.468 415.777 931 401.174 931.325 394.903 cv
931.65 388.631 932.083 376.028 929.454 370.697 cv
926.824 365.366 929.981 356.017 929.981 356.017 cv
927.094 354.267 li
927.094 354.267 922.888 347.237 924.991 343.787 cv
927.094 340.338 924.183 313.996 924.991 313.055 cv
925.799 312.114 926.994 300.768 927.89 297.974 cv
928.786 295.18 931.475 303.334 936.254 304.275 cv
941.034 305.215 955.228 326.853 955.228 326.853 cv
cp
f
500.014 500 mo
.0138326 500 li
.0138326 0 li
500.014 0 li
500.014 500 li
cp
level3{
gsave
clp
[-357.961 -100.861 100.861 -357.961 364.507 78.5056 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-357.961 -100.861 100.861 -357.961 364.507 78.5056 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
83.5738 194.578 mo
86.4438 194.578 li
86.4438 194.578 87.6938 190.508 92.5738 189.093 cv
97.4438 187.69 99.5738 190.345 99.5738 190.345 cv
99.5738 190.345 99.2738 185.887 101.614 182.882 cv
103.954 179.889 107.924 182.243 107.924 182.243 cv
107.924 182.243 107.924 179.964 109.264 177.823 cv
110.604 175.694 112.014 175.845 112.014 175.845 cv
112.014 175.845 111.334 167.768 116.464 165.439 cv
121.594 163.122 125.324 169.421 125.324 169.421 cv
125.324 169.421 127.474 164.099 130.694 163.786 cv
133.904 163.473 136.574 167.204 136.574 167.204 cv
136.574 167.204 140.284 159.829 144.814 160.993 cv
149.344 162.158 151.004 170.235 151.004 170.235 cv
151.004 170.235 152.504 169.058 154.634 171.512 cv
156.774 173.979 156.384 177.047 156.384 177.047 cv
156.384 177.047 158.794 175.532 161.114 176.558 cv
163.444 177.598 164.974 181.091 164.974 181.091 cv
164.974 181.091 165.394 178.812 166.774 178.186 cv
168.144 177.56 172.074 180.979 172.074 180.979 cv
172.074 180.979 171.624 172.263 176.624 170.485 cv
181.634 168.694 187.624 173.027 187.624 173.027 cv
187.624 173.027 188.144 170.635 191.474 171.224 cv
194.814 171.812 195.474 174.993 195.474 174.993 cv
197.674 172.676 li
197.674 172.676 196.544 168.557 199.554 163.56 cv
202.564 158.552 205.564 158.877 205.564 158.877 cv
205.604 158.877 li
205.604 158.877 205.134 154.432 207.364 151.301 cv
209.594 148.171 213.654 150.3 213.654 150.3 cv
213.654 150.3 213.564 148.033 214.824 145.817 cv
216.084 143.6 217.494 143.675 217.494 143.675 cv
217.494 143.675 216.524 135.649 221.564 133.032 cv
226.614 130.415 230.564 136.488 230.564 136.488 cv
230.604 136.475 li
230.564 136.075 230.254 131.905 232.374 128.924 cv
234.594 125.794 238.654 127.923 238.654 127.923 cv
238.654 127.923 238.564 125.644 239.824 123.44 cv
241.084 121.223 242.504 121.299 242.504 121.299 cv
242.504 121.299 241.534 113.272 246.574 110.655 cv
251.614 108.038 255.564 114.111 255.564 114.111 cv
255.564 114.111 258.114 111.168 261.454 111.506 cv
264.794 111.844 265.884 117.179 265.884 117.179 cv
265.884 117.179 267.284 115.714 269.454 115.639 cv
271.624 115.563 272.434 117.016 272.434 117.016 cv
272.434 117.016 276.954 111.206 281.664 114.662 cv
286.374 118.118 284.884 125.731 284.884 125.731 cv
285.474 126.232 li
285.474 126.232 286.674 122.801 289.914 121.724 cv
293.154 120.647 295.604 125.23 295.604 125.23 cv
295.604 125.23 296.524 123.264 298.554 122.288 cv
300.584 121.311 301.724 122.35 301.724 122.35 cv
301.724 122.35 304.444 114.975 309.804 116.265 cv
315.164 117.554 315.794 125.356 315.794 125.356 cv
315.794 125.356 319.814 122.163 322.704 123.966 cv
325.594 125.756 326.354 130.678 326.354 130.678 cv
326.354 130.678 332.554 126.721 335.974 130.627 cv
339.394 134.534 337.514 142.523 337.514 142.523 cv
337.584 142.523 339.304 142.561 340.114 145.967 cv
340.934 149.436 339.344 151.827 339.344 151.827 cv
339.344 151.827 342.034 152.065 343.614 154.444 cv
345.184 156.824 345.064 160.818 345.064 160.818 cv
345.064 160.818 346.374 159.115 347.804 159.466 cv
349.244 159.804 351.214 165.276 351.214 165.276 cv
351.214 165.276 354.394 157.5 359.414 159.178 cv
364.444 160.843 367.834 168.406 367.834 168.406 cv
367.834 168.406 369.254 166.691 371.874 169.333 cv
374.494 171.975 373.764 175.131 373.764 175.131 cv
376.604 174.555 li
376.604 174.555 377.314 170.285 381.954 167.918 cv
386.584 165.551 389.024 167.755 389.024 167.755 cv
389.024 167.755 389.254 162.822 391.924 160.28 cv
394.594 157.75 398.244 160.831 398.244 160.831 cv
398.244 160.831 398.514 158.577 400.094 156.711 cv
401.664 154.833 403.044 155.258 403.044 155.258 cv
403.044 155.258 403.334 147.144 408.684 145.792 cv
414.034 144.452 416.974 151.376 416.974 151.376 cv
416.974 151.376 419.724 146.518 422.944 146.806 cv
426.164 147.094 428.354 151.276 428.354 151.276 cv
428.354 151.276 432.904 144.69 437.244 146.681 cv
441.584 148.672 442.264 156.961 442.264 156.961 cv
442.264 156.961 443.884 156.085 445.704 158.915 cv
447.524 161.732 446.774 164.7 446.774 164.7 cv
446.774 164.7 449.344 163.648 451.514 165.101 cv
453.694 166.553 454.784 170.31 454.784 170.31 cv
454.784 170.31 455.484 168.118 456.914 167.755 cv
458.344 167.392 461.824 171.524 461.824 171.524 cv
461.824 171.524 462.414 162.822 467.574 161.983 cv
472.734 161.156 478.154 166.541 478.154 166.541 cv
478.154 166.541 478.954 164.274 482.174 165.476 cv
485.394 166.678 485.674 169.959 485.674 169.959 cv
488.134 168.081 li
488.134 168.081 487.504 163.786 491.074 159.403 cv
494.644 155.02 500.014 158.577 500.014 158.577 cv
500.014 500.003 li
.0138326 500.003 li
.0138326 131.178 li
.0138326 131.178 4.28383 125.493 7.61383 125.08 cv
10.9438 124.667 12.7838 129.676 12.7838 129.676 cv
12.7838 129.676 13.9438 127.923 16.0738 127.359 cv
18.1938 126.796 19.1938 128.048 19.1938 128.048 cv
19.1938 128.048 22.8238 121.324 27.9438 123.665 cv
33.0738 126.019 32.6938 133.846 32.6938 133.846 cv
32.6938 133.846 37.0738 131.491 39.6938 133.846 cv
42.3238 136.187 42.4438 141.196 42.4438 141.196 cv
42.4438 141.196 49.0738 138.541 51.9438 143.074 cv
54.8238 147.62 51.9438 155.133 51.9438 155.133 cv
51.9438 155.133 53.6938 155.446 54.0738 159.04 cv
54.4438 162.646 52.5738 164.675 52.5738 164.675 cv
52.5738 164.675 55.1938 165.464 56.4438 168.118 cv
57.6938 170.786 57.0738 174.693 57.0738 174.693 cv
57.0738 174.693 58.5738 173.29 59.9438 173.916 cv
61.3238 174.542 62.5738 180.327 62.5738 180.327 cv
62.5738 180.327 66.6938 173.29 71.4438 175.945 cv
76.1938 178.612 78.5738 186.751 78.5738 186.751 cv
78.5738 186.751 80.1938 185.336 82.4438 188.467 cv
84.6938 191.597 83.5738 194.578 83.5738 194.578 cv
cp
level3{
gsave
clp
[1.24425e-11 120.957 -120.957 1.24425e-11 250.014 122 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.24425e-11 120.957 -120.957 1.24425e-11 250.014 122 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
500.014 229.728 mo
500.014 231.535 479.013 238.818 477.037 239.321 cv
469.072 229.386 451.648 227.828 440.509 222.621 cv
437.311 221.126 433.8 218.362 430.411 217.54 cv
426.228 216.525 420.383 217.449 416.093 217.137 cv
409.927 216.688 404.323 216.466 398.582 214.67 cv
387.705 211.266 383.982 210.536 373.57 215.913 cv
369.562 217.982 365.706 219.36 361.662 221.097 cv
353.254 224.707 344.338 230.059 336.532 234.827 cv
332.522 237.276 328.379 241.421 323.871 242.941 cv
320.363 244.123 316.527 243.021 312.973 244.103 cv
313.53 249.777 308.179 253.048 303.976 255.498 cv
301.617 256.874 300.536 257.823 297.977 257.472 cv
291.54 256.589 283.754 250.41 277.573 247.845 cv
270.507 244.912 264.233 239.224 256.511 238.503 cv
247.365 237.649 243.088 232.861 236.43 227.774 cv
229.21 222.257 217.461 216.565 208.266 216.5 cv
203.428 216.466 198.588 216.481 193.751 216.499 cv
189.12 216.517 183.579 215.026 179.278 215.951 cv
175.366 216.791 172.015 220.668 168.051 221.536 cv
165.144 222.172 161.682 221.222 158.712 221.434 cv
148.438 222.167 138.522 225.399 128.886 228.85 cv
124.119 230.556 119.298 232.942 114.348 234.005 cv
112.124 234.483 108.725 233.649 106.71 235.038 cv
101.101 238.907 95.4908 242.776 89.881 246.645 cv
80.3474 253.22 71.6385 260.135 60.5205 263.744 cv
59.3683 264.118 56.9695 265.515 55.64 265.024 cv
53.3245 264.169 50.0092 258.93 49.0187 256.378 cv
48.3869 254.75 48.4722 251.951 47.5286 250.539 cv
46.559 249.088 44.2306 248.867 43.0169 247.469 cv
40.7833 244.897 39.8902 240.854 37.6417 238.021 cv
36.6124 236.724 36.0491 235.239 35 233.999 cv
34.5565 233.475 34.5411 232.657 33.9054 232.269 cv
31.7095 230.93 27.2869 232.344 24.7312 231.237 cv
23.1126 230.536 21.9824 228.828 20.2759 228.244 cv
18.3663 227.59 16.3546 227.945 14.3958 227.68 cv
12.1258 227.374 11.2827 226.289 9.424 225.347 cv
6.66309 223.947 3.01347 223.487 .0138326 222.63 cv
.0138326 500 li
500.014 500 li
500.014 500 500.014 231.439 500.014 229.728 cv
cp
level3{
gsave
clp
[2.00584e-11 194.992 -194.992 2.00584e-11 250.014 217.406 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.00584e-11 194.992 -194.992 2.00584e-11 250.014 217.406 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
500.014 342.162 mo
500.014 344.001 493.264 341.363 493.27 344.809 cv
493.329 340.511 489.146 338.759 486.04 340.998 cv
485.949 338.554 486.132 335.469 482.597 336.285 cv
484.755 332.232 481.129 324.319 477.24 330.434 cv
478.031 326.216 472.25 327.403 472.993 330.73 cv
469.961 329.362 466.884 329.824 467.237 333.723 cv
464.044 332.93 464.78 332.855 463.324 334.799 cv
462.272 336.205 458.933 336.665 459.048 338.68 cv
457.461 337.047 455.012 336.22 453.861 338.454 cv
453.587 336.211 451.058 333.358 448.815 334.979 cv
448.637 332.801 448.706 330.004 445.533 331.241 cv
446.294 329.239 447.698 323.718 444.749 323.23 cv
443.339 322.996 442.027 324.423 441.057 325.166 cv
440.99 322.834 440.293 320.316 437.553 322.247 cv
437.952 321.966 437.204 319.444 436.62 319.211 cv
436.52 319.171 432.749 319.236 432.495 319.328 cv
430.915 319.9 429.892 321.667 430.964 323.206 cv
427.656 323.507 427.876 324.556 427.737 327.462 cv
425.682 327.19 423.9 328.746 424.679 330.773 cv
421.94 330.098 419.747 329.465 418.396 332.041 cv
417.17 334.38 416.992 336.145 418.522 337.962 cv
416.514 338.091 414.095 338.803 414.255 341.211 cv
413.188 341.235 412.094 341.351 411.031 341.514 cv
410.954 342.691 411.182 343.934 411.511 344.956 cv
408.395 345.116 404.519 347.129 406.942 350.756 cv
404.278 351.204 402.144 351.936 404.517 354.711 cv
402.568 354.487 399.792 356.365 402.474 357.973 cv
399.828 357.718 397.01 356.776 397.793 360.445 cv
396.839 358.82 393.363 355.24 391.557 357.674 cv
391.482 354.452 387.605 353.427 385.332 355.229 cv
384.412 353.44 382.466 351.019 380.513 352.905 cv
379.006 350.351 376.382 349.297 373.588 350.247 cv
371.114 344.871 366.517 342.55 361.285 345.933 cv
361.358 343.507 360.5 340.905 357.827 342.485 cv
355.857 339.273 356.703 340.28 353.573 340.748 cv
352.535 336.567 348.451 337.007 345.528 338.766 cv
346.254 338.329 344.648 335.588 344.189 335.303 cv
342.125 334.026 342.706 335.857 341.408 336.609 cv
340.037 337.403 337.405 336.996 337.243 339.225 cv
334.167 338.477 330.512 340.339 332.93 343.73 cv
331.881 343.033 330.543 342.839 329.292 343.038 cv
329.429 343.697 329.092 344.557 329.232 345.211 cv
327.706 344.845 326.371 345.736 326.941 347.274 cv
324.719 346.89 320.901 346.339 319.069 348.021 cv
317.601 349.369 317.55 351.976 317.013 353.759 cv
313.937 353.124 312.284 352.88 312.5 356.175 cv
310.848 356.142 307.251 356.685 309.528 358.981 cv
308.294 359.016 306.864 359.072 305.756 358.844 cv
305.544 359.544 305.037 360.175 304.97 360.962 cv
301.018 361.219 301.218 361.246 300.98 365.211 cv
298.281 365.157 296.578 365.4 298.249 368.231 cv
297.262 368.162 295.613 368.167 294.997 368.99 cv
294.384 369.808 295.732 371.846 294.044 371.999 cv
292.698 372.121 291.523 369.082 289.307 369.485 cv
287.451 369.822 286.356 371.955 286.215 373.756 cv
285.321 370.878 284.804 368.434 281.594 368.767 cv
282.997 366.043 280.12 365.069 277.802 365.23 cv
277.627 361.818 277.343 360.215 273.299 360.468 cv
273.326 360.466 273.305 358.707 273.25 358.54 cv
272.904 357.506 272.524 357.796 271.95 357.174 cv
271.335 356.507 269.693 353.576 268.862 356 cv
266.502 353.281 265.442 356.441 265.51 358.673 cv
264.065 357.9 262.934 358.748 262.995 360.308 cv
262.338 360.353 261.651 360.323 260.986 360.341 cv
260.544 362.075 259.454 363.583 258.991 365.318 cv
256.399 365.497 255.33 364.76 254.345 367.469 cv
253.773 369.043 253.531 370.506 253.498 372.15 cv
250.736 372.314 248.634 371.031 248.655 374.475 cv
247.06 374.124 247.117 375.425 247.349 376.616 cv
244.631 376.974 244.211 376.441 245.353 379.487 cv
242.709 379.577 240.617 379.511 240.495 382.808 cv
239.732 382.827 238.962 382.655 238.191 382.69 cv
238.24 383.512 238.097 384.34 237.991 385.141 cv
237.54 385.067 236.964 385.27 236.509 385.192 cv
236.508 385.395 236.475 385.624 236.48 385.819 cv
235.078 384.045 234.91 382.38 232.369 383.152 cv
232.001 381.603 231.719 381.116 230.579 380.321 cv
230.345 380.158 229.801 380.498 229.547 380.311 cv
229.088 379.972 228.902 378.858 228.566 378.36 cv
228.161 377.76 227.508 377.289 227.06 376.709 cv
225.911 375.222 225.912 374.753 223.869 375.16 cv
223.933 372.48 223.167 372.825 221.04 372.811 cv
221.4 371.168 220.142 371.095 218.872 371.148 cv
218.88 369.321 217.857 367.015 216.146 366.261 cv
214.298 365.447 213.375 366.798 211.682 366.998 cv
211.765 365.707 211.828 363.868 210.076 364.319 cv
209.946 362.668 209.196 360.843 207.376 361.823 cv
207.286 360.495 207.608 359.67 206.593 358.749 cv
205.215 357.496 203.736 357.677 202.53 358.813 cv
202.538 356.394 198.612 351.652 196.006 353.532 cv
195.695 352.744 195.523 351.477 194.546 351.312 cv
193.964 349.64 193.354 347.869 191.36 347.823 cv
191.692 343.863 188.934 344.356 186.211 344.145 cv
186.222 344.146 185.109 341.541 184.557 341.258 cv
183.357 340.641 182.606 341.507 181.37 341.474 cv
181.445 340.32 180.699 339.441 179.543 339.307 cv
179.105 337.751 178.749 335.875 176.881 336.987 cv
177.183 335.62 176.057 335.121 175.077 335.911 cv
174.356 336.492 174.487 337.662 173.988 338.471 cv
171.576 338.359 171.471 339.759 171.825 341.638 cv
170.183 341.781 170.672 343.791 170.993 344.804 cv
170.801 344.212 169.214 345.982 169.053 346.229 cv
168.889 346.482 169.311 347.111 169.13 347.297 cv
168.867 347.567 168.542 347.414 168.317 347.597 cv
167.517 348.245 166.814 347.705 166.357 349.133 cv
165.016 348.497 162 348.129 160.791 349.365 cv
160.092 350.08 160.375 351.136 159.983 352.177 cv
158.661 351.387 154.699 351.004 153.501 351.99 cv
152.649 352.691 152.05 355.609 153.467 356 cv
150.799 357.474 151.972 358.076 153.533 359.467 cv
151.645 359.83 151.351 361.527 152.833 362.454 cv
150.007 363.933 152.252 364.797 154.118 366.325 cv
152.562 366.7 150.387 366.867 150.505 368.925 cv
150.625 370.991 152.265 369.922 153.383 371.171 cv
152.347 372.364 154.206 374.65 152.535 374.862 cv
152.435 375.743 153.255 375.812 153.318 376.638 cv
152.097 376.849 152.241 378.262 152.492 379.136 cv
152.428 378.913 151.063 379.684 150.94 379.805 cv
150.497 380.238 150.718 380.942 150.384 381.308 cv
149.988 381.742 149.064 381.525 148.729 382.045 cv
148.159 382.927 149.12 383.611 149.327 384.494 cv
147.978 383.297 145.817 381.98 145.647 384.835 cv
145.107 383.446 144.253 382.096 142.576 382.649 cv
142.359 380.956 142.703 379.333 140.884 378.428 cv
138.695 377.338 137.415 378.29 135.722 379.485 cv
135.358 377.104 134.61 375.481 132.035 376.828 cv
132.231 374.201 129.407 375.132 128.182 375.333 cv
127.429 375.457 127.729 375.721 127.026 375.479 cv
126.399 375.263 126.116 374.342 125.144 374.122 cv
124.25 373.919 122.903 374.659 122.214 374.311 cv
121.457 373.928 121.288 371.464 121.333 370.688 cv
120.705 370.671 120.048 370.707 119.478 370.538 cv
119.623 368.331 119.909 365.472 117.523 364.424 cv
115.523 363.546 114.35 364.509 112.869 365.627 cv
112.836 363.776 112.484 362.118 110.363 362.649 cv
110.358 362.141 110.285 361.183 109.888 360.81 cv
109.601 360.54 109.094 360.872 108.844 360.666 cv
108.069 360.029 104 355.347 103.037 358.128 cv
103.038 355.992 99.8014 355.482 99.663 357.641 cv
98.5062 357.492 96.9279 358.108 98.1633 359.3 cv
97.3061 359.284 95.6896 360.048 95.2997 360.734 cv
94.7806 361.648 95.1741 361.768 95.806 362.808 cv
94.0574 363.845 93.0902 362.642 92.2072 364.992 cv
91.6154 366.567 91.9884 367.539 92.6731 368.975 cv
91.1618 369.231 89.9124 370.296 90.4961 371.8 cv
89.0884 372.156 88.4089 372.975 89.166 374.308 cv
87.5959 374.272 85.017 376.556 86.8703 377.837 cv
85.2523 378.914 84.1533 377.402 84.0138 379.91 cv
83.9645 380.797 84.2447 381.604 84.1553 382.471 cv
82.8065 382.777 82.9785 382.587 82.5126 383.661 cv
82.4748 383.749 81.1938 386.96 81.0667 386.787 cv
80.1577 385.549 80.7086 382.145 78.3685 382.644 cv
78.2509 380.592 78.2769 376.054 75.195 376.474 cv
75.5957 374.632 75.9729 373.581 73.3605 373.811 cv
73.3106 372.003 74.8709 370.313 73.9331 368.402 cv
73.1418 366.789 71.6755 366.973 70.2024 367.157 cv
69.9503 366.176 69.8444 364.923 68.8626 364.5 cv
68.0126 364.133 67.1245 364.907 66.4179 364.425 cv
64.6557 363.226 66.0157 361.229 63.2137 361.487 cv
62.7853 360.12 63.2608 357.557 62.6811 356.492 cv
61.8773 355.014 60.0028 355.8 58.7024 356.291 cv
58.6611 355.379 58.7053 354.436 58.6553 353.526 cv
58.4222 353.554 58.1101 353.448 57.8729 353.486 cv
57.853 352.367 58.2779 351.004 57.3341 350.081 cv
56.4584 349.225 55.1176 349.217 54.6508 350.479 cv
54.9042 347.884 50.9933 346.464 50.1467 349.319 cv
48.9008 348.175 47.0074 348.612 45.9723 349.815 cv
46.4173 349.298 41.9095 349.308 41.4859 349.463 cv
39.946 350.027 38.4553 351.129 37.6779 352.596 cv
36.7294 350.741 33.7146 354.594 33.3967 355.507 cv
33.1458 354.219 32.1116 353.352 31.0064 354.444 cv
31.1347 352.915 31.6278 351.142 29.9545 350.295 cv
29.0949 349.86 27.6083 350.15 26.8525 350.617 cv
26.9237 349.218 26.7087 348.045 25.2057 347.652 cv
25.0953 346.157 25.6437 344.149 24.4203 342.993 cv
23.5149 342.137 21.2604 342.005 20.1648 342.615 cv
20.2753 340.363 18.6329 338.568 16.3643 338.812 cv
16.3437 337.205 16.1308 335.29 14.031 335.649 cv
14.0115 334.541 15.097 332.254 14.3822 331.318 cv
13.5806 330.268 10.8364 330.281 9.73089 330.824 cv
10.1851 329.157 9.95122 328.256 8.93165 327.183 cv
7.82084 326.014 7.64279 326.261 5.38626 326.144 cv
5.23191 324.725 5.64509 323.057 5.14996 321.677 cv
4.43417 321.632 3.68053 321.65 3.03961 321.812 cv
3.18016 321.507 3.0624 321.009 3.15145 320.696 cv
2.5515 320.539 2.12529 320.238 1.84481 319.847 cv
1.18658 318.929 1.52371 317.544 0 318.054 cv
.127362 321.838 .0138326 325.691 .0138326 329.491 cv
.0138326 339.193 .0138326 348.896 .0138326 358.599 cv
.0138326 371.603 .0138326 384.608 .0138326 397.613 cv
.0138326 411.329 .0138326 425.045 .0138326 438.761 cv
.0138326 450.598 .0138326 462.436 .0138326 474.273 cv
.0138326 481.64 .0138326 489.008 .0138326 496.375 cv
.0138326 497.583 .0138326 498.792 .0138326 500 cv
500.014 500 li
500.014 500 500.014 342.763 500.014 342.162 cv
cp
level3{
gsave
clp
[7.85427e-12 76.353 -76.353 7.85427e-12 250.007 341.667 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.85427e-12 76.353 -76.353 7.85427e-12 250.007 341.667 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
500.014 397.449 mo
500.014 397.627 474.573 398.47 471.771 398.25 cv
470.905 398.182 470.191 398.078 469.36 397.957 cv
468.657 397.855 468.09 397.245 467.36 397.246 cv
466.721 397.246 466.175 398.002 465.502 398.01 cv
460.468 398.076 454.973 396.053 449.792 396.873 cv
446.208 397.439 442.381 397.695 438.546 397.506 cv
436.797 397.42 434.974 396.703 433.345 397.29 cv
430.914 398.168 430.929 399.155 428.014 399.256 cv
425.327 399.348 425.929 399.094 424.272 398.09 cv
421.762 396.569 419.962 394.363 416.943 395.132 cv
414.644 395.718 412.704 397.065 410.25 397.249 cv
407.833 397.43 405.141 396.89 402.985 397.602 cv
400.211 398.519 397.961 400.634 394.923 401.022 cv
392.136 401.379 389.175 400.806 386.375 400.748 cv
382.299 400.662 378.081 401.82 374.089 402.526 cv
371.935 402.907 370.329 404.458 368.34 404.767 cv
366.852 404.998 365.512 404.158 364.04 404.29 cv
361.213 408.292 351.123 407.166 346.813 407.639 cv
342.742 408.085 338.8 408.758 334.731 408.545 cv
330.898 408.344 327.726 410.236 323.981 410.841 cv
321.506 411.241 318.617 411.317 316.745 411.231 cv
312.839 411.053 309.451 413.834 305.553 413.711 cv
305.353 411.362 305.995 409.54 307.354 407.535 cv
305.513 408.599 302.855 409.691 303.518 412.214 cv
303.59 409.48 301.01 405.931 299.779 403.521 cv
299.559 407.516 301.927 410.622 302.697 414.291 cv
300.92 413.491 299.137 412.684 297.341 411.929 cv
298.515 413.357 300.569 413.872 301.237 415.707 cv
296.369 417.054 291.021 418.245 285.912 417.731 cv
284.803 417.62 283.288 416.865 282.019 417.051 cv
276.766 417.817 271.468 419.104 266.009 418.485 cv
263.965 418.253 262.197 417.002 259.996 416.789 cv
254.722 416.278 249.282 418.152 244.051 416.689 cv
241.214 415.895 239.33 414.996 236.256 415 cv
234.439 415.002 228.297 416.487 228.982 413.033 cv
228.539 413.196 227.313 414.13 226.903 413.996 cv
225.672 413.592 225.136 410.722 225.264 409.579 cv
225.269 411.021 225.222 412.377 225.542 413.697 cv
222.882 409.075 221.573 408.455 216.021 407.978 cv
219.099 408.632 221.477 411.287 222.013 414.275 cv
220.692 413.104 219.778 412.064 218.042 411.501 cv
218.167 411.922 218.014 412.5 218.17 412.98 cv
217.319 412.937 216.365 412.408 215.51 412.495 cv
214.997 412.547 214.369 413.197 214.007 413.201 cv
207.991 413.262 201.33 412.555 195.292 412.011 cv
193.417 411.842 191.557 411.067 189.677 410.787 cv
186.809 410.36 183.748 410.861 181.253 409.806 cv
179.151 408.917 177.03 407.207 174.661 406.734 cv
169.439 405.69 163.479 407.946 158.299 406.712 cv
155.689 406.091 153.607 405.017 150.734 405.515 cv
144.479 406.599 138.313 410.102 132.022 410.957 cv
128.102 411.49 124.304 410.693 120.355 411.601 cv
115.932 412.618 111.731 414.341 107.213 414.999 cv
102.721 415.654 98.7875 418.367 94.4131 419.003 cv
89.0611 419.782 83.3092 418.694 77.8978 418.998 cv
75.9378 419.107 73.9887 419.607 72.049 419.735 cv
69.5676 413.384 65.3454 418.93 61.8704 418.001 cv
60.3283 417.589 59.0725 416.153 57.3581 415.77 cv
56.5009 415.578 55.198 415.757 54.5102 415.367 cv
52.5767 414.272 52.4485 411.486 50.5107 410.328 cv
47.147 408.317 40.9497 410.588 37.6605 411.918 cv
31.5554 414.386 30.4136 419.458 28.6349 425.429 cv
28.0366 424.097 27.5262 422.703 26.6614 421.526 cv
26.901 422.702 27.3723 423.814 27.0633 424.826 cv
24.9626 421.844 24.6847 417.02 21.4785 414.915 cv
22.0743 417.71 24.2601 419.626 24.5234 422.535 cv
24.5905 423.275 24.6609 423.819 25.0059 424.48 cv
24.0255 424.101 23.1436 423.578 22.0779 423.478 cv
22.8758 424.161 23.7185 425.059 24.4996 425.699 cv
23.1227 425.784 .0138326 426.576 .0138326 427.239 cv
.0138326 500 li
500.014 500 li
500.014 397.449 li
cp
level3{
gsave
clp
[5.74973e-15 93.9003 -93.9003 5.74973e-15 250.014 394.974 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.74973e-15 93.9003 -93.9003 5.74973e-15 250.014 394.974 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
199.107 258.49 mo
199.471 258.226 199.289 258.006 199.505 257.009 cv
199.9 255.182 200.318 253.347 200.472 251.476 cv
200.639 249.444 199.525 249.681 198.983 247.685 cv
196.168 247.232 196.246 243.901 195.559 241.817 cv
194.837 239.627 193.172 237.974 191.907 236.103 cv
191.066 234.86 189.178 232.945 188.715 231.573 cv
188.275 230.268 182.531 224.595 182.531 224.595 cv
185.721 221.554 li
183.028 217.815 li
179.7 220.865 li
179.7 220.865 170.74 211.931 169.228 210.184 cv
167.717 208.437 163.372 206.888 162.117 206.828 cv
160.863 206.767 157.823 204.016 156.32 203.38 cv
154.817 202.744 150.798 202.877 150.798 202.877 cv
150.798 202.877 153.271 199.517 155.407 194.326 cv
156.69 191.21 157.268 186.604 156.149 183.35 cv
153.09 183.231 150.011 181.7 146.931 181.5 cv
145.162 181.385 145.264 182.012 144.388 183.545 cv
143.276 185.494 142.335 187.622 141.64 189.804 cv
140.95 191.971 139.869 191.098 137.778 191.681 cv
135.073 192.436 132.407 193.994 129.587 194.694 cv
126.98 195.342 124.197 194.945 121.542 194.825 cv
118.07 194.667 114.86 194.674 111.437 194.486 cv
110.276 194.422 109.752 194.099 108.977 194.872 cv
108.299 195.547 108.114 196.974 107.81 197.833 cv
107.577 198.493 107.371 199.446 106.939 199.856 cv
105.778 200.957 102.552 201.904 101.014 202.509 cv
97.9282 203.722 93.1447 205.475 90.9939 207.98 cv
88.0758 211.38 87.1033 216.724 83.2608 219.251 cv
81.9994 220.081 82.5501 223.971 81.2144 224.731 cv
79.8787 225.492 76.8418 234.674 76.6914 235.5 cv
76.5409 236.326 74.2725 235.67 72.6831 235.781 cv
71.0935 235.893 72.0121 239.09 72.3921 240.546 cv
72.772 242.002 73.5948 250.765 73.5948 250.765 cv
73.5948 250.765 72.3367 252.632 71.5262 253.949 cv
70.7158 255.266 72.3792 258.188 72.3792 258.188 cv
72.3792 258.188 71.7863 259.639 71.8897 261.114 cv
71.9931 262.589 75.4793 265.754 76.2893 267.402 cv
77.0993 269.05 76.8107 269.886 77.9682 270.546 cv
79.1256 271.206 79.711 273.611 80.3259 274.458 cv
80.9409 275.304 82.2418 276.028 82.3884 277.13 cv
82.5351 278.231 88.0941 284.217 88.0941 284.217 cv
88.0941 284.217 86.278 286.049 85.8407 286.746 cv
85.4035 287.444 86.3965 290.71 86.3965 290.71 cv
86.3965 290.71 83.319 293.372 82.6364 294.532 cv
81.9538 295.692 81.3502 299.959 80.5321 302.158 cv
79.714 304.356 54.5276 322.521 54.5083 324.227 cv
54.4891 325.933 55.8849 327.022 58.2102 328.489 cv
60.5355 329.957 64.2454 338.295 66.2599 338.302 cv
68.2744 338.309 88.281 305.7 88.281 305.7 cv
88.281 305.7 94.339 300.976 94.9074 301.158 cv
95.4758 301.341 95.3076 305.874 96.6408 309.042 cv
96.6476 309.058 96.6566 309.073 96.6634 309.089 cv
97.8597 310.292 95.2622 312.73 95.2622 312.73 cv
96.169 316.388 li
96.8335 321.576 li
96.8335 321.576 96.4559 339.19 97.5073 342.184 cv
97.5073 342.184 94.698 349.116 95.3202 351.991 cv
95.9425 354.866 97.5901 360.364 97.5901 360.364 cv
97.5901 360.364 95.5349 363.052 95.6175 370.231 cv
95.7003 377.409 95.3226 395.022 96.6527 400.991 cv
97.9826 406.96 98.3147 415.692 98.4504 417.628 cv
98.5862 419.565 99.027 421.854 98.7931 423.516 cv
98.5591 425.179 98.5165 430.57 98.3697 431.479 cv
98.2232 432.387 98.4567 433.718 96.9602 433.374 cv
95.4636 433.03 90.7803 432.235 89.8452 432.9 cv
88.9102 433.564 83.1429 438.309 84.4297 441.661 cv
85.7165 445.014 88.9635 450.324 93.2719 450.77 cv
97.5802 451.216 102.33 450.958 102.33 450.958 cv
102.694 454.151 li
102.694 454.151 111.403 457.357 114.522 456.838 cv
117.641 456.32 120.207 455.916 120.432 453.131 cv
120.657 450.346 120.787 444.201 121.278 443.194 cv
121.768 442.186 123.145 437.824 122.972 435.366 cv
122.8 432.909 123.111 430.343 123.111 430.343 cv
123.111 430.343 124.317 428.537 123.796 426.104 cv
123.274 423.671 123.031 419.198 123.031 419.198 cv
123.031 419.198 127.61 404.508 127.649 401.063 cv
127.688 397.617 126.084 380.742 126.084 380.742 cv
126.084 380.742 130.128 370.43 130.79 366.866 cv
131.452 363.303 134.05 346.357 134.05 346.357 cv
134.05 346.357 135.417 360.854 137.912 369.435 cv
140.406 378.016 143.626 383.927 145.849 385.642 cv
148.073 387.357 151.382 388.547 151.713 389.272 cv
152.044 389.997 152.1 391.789 151.906 392.028 cv
151.713 392.266 150.575 395.04 153.196 399.421 cv
155.817 403.802 153.65 405.9 153.65 405.9 cv
153.65 405.9 151.768 408.052 152.669 410.908 cv
153.571 413.763 154.12 415.596 153.602 417.204 cv
153.083 418.811 148.42 424.535 148.345 427.226 cv
148.311 428.422 147.78 433.178 149.577 433.8 cv
151.373 434.423 162.198 433.813 165.218 431.88 cv
168.238 429.947 171.659 425.741 172.081 423.766 cv
172.504 421.79 171.975 415.242 172.374 413.941 cv
172.774 412.641 173.69 410.706 173.479 408.7 cv
173.268 406.694 172.271 403.471 172.107 402.136 cv
171.944 400.8 172.648 397.758 172.579 395.817 cv
172.51 393.876 172.768 391.463 172.182 390.157 cv
171.596 388.851 174.652 382.425 173.808 380.389 cv
172.964 378.353 173.491 374.873 173.777 373.955 cv
174.063 373.037 175.602 370.983 174.666 369.627 cv
173.729 368.271 166.448 359.427 166.185 356.676 cv
165.922 353.926 170.209 346.067 170 343.088 cv
169.791 340.109 171.952 329.929 171.377 327.725 cv
170.802 325.52 169.188 316.503 169.771 314.816 cv
170.353 313.128 172.223 311.8 172.004 308.672 cv
171.917 307.432 171.645 305.606 171.349 303.852 cv
170.497 302.044 169.206 300.989 169.206 300.989 cv
169.206 300.989 170.741 299.102 171.055 298.635 cv
171.37 298.169 170.498 295.635 170.498 295.635 cv
170.498 295.635 173.951 296.357 175.525 296.024 cv
177.099 295.691 179.35 297.09 181.354 296.95 cv
183.358 296.809 185.458 294.067 186.12 292.613 cv
186.782 291.158 183.553 286.714 181.683 283.806 cv
179.812 280.898 176.215 269.216 175.426 267.863 cv
174.636 266.51 173.277 262.973 172.191 258.38 cv
171.683 256.232 171.02 254.128 170.443 252 cv
170.042 250.523 168.534 248.409 168.881 246.843 cv
170.572 248.777 173.45 249.627 175.014 251.329 cv
176.34 252.772 177.449 255.139 178.597 256.77 cv
179.584 258.173 179.778 258.832 178.664 260.333 cv
179.429 261.474 181.248 264.903 182.348 265.165 cv
183.25 265.381 184.586 264.226 185.356 263.862 cv
186.957 263.106 188.534 261.987 190.242 261.333 cv
192.796 260.356 195.669 260.082 198.183 258.954 cv
198.663 258.739 198.942 258.61 199.107 258.49 cv
cp
.545037 .739284 .762142 .78439 cmyk
f
115.138 199.364 mo
113.727 190.902 li
113.727 190.902 110.907 185.79 110.554 184.909 cv
110.202 184.027 108.439 184.732 107.557 182.264 cv
106.676 179.796 107.205 173.802 108.791 174.507 cv
108.791 174.507 106.676 162.872 110.73 157.584 cv
114.785 152.295 122.366 151.061 129.77 152.824 cv
137.174 154.587 139.642 165.34 139.289 170.982 cv
139.289 170.982 142.992 172.392 142.815 175.213 cv
142.639 178.033 141.405 183.322 139.818 184.027 cv
138.232 184.732 137.527 185.614 137.527 185.614 cv
137.527 185.614 137.174 194.252 138.055 195.662 cv
138.937 197.073 141.229 197.954 141.229 197.954 cv
115.138 199.364 li
cp
f
184.39 262.788 mo
184.39 262.788 188.494 273.924 189.147 275.358 cv
189.801 276.791 188.785 279.43 189.411 280.121 cv
190.038 280.812 188.989 286.396 188.469 287.788 cv
187.95 289.179 187.685 293.562 187.685 293.562 cv
187.685 293.562 185.282 296.567 184.118 298.297 cv
182.954 300.027 178.64 303.904 177.457 311.237 cv
176.273 318.57 182.794 329.358 190.089 332.601 cv
197.385 335.844 205.961 332.064 208.391 329.801 cv
210.822 327.538 213.976 326.276 216.341 325.33 cv
218.707 324.384 211.073 315.924 206.635 309.602 cv
202.197 303.28 198.139 301.002 198.139 301.002 cv
198.139 301.002 202.754 299.829 203.222 297.839 cv
203.691 295.85 204.391 292.422 203.71 290.247 cv
203.028 288.072 198.859 282.826 198.859 282.826 cv
198.859 282.826 199.736 281.049 199.629 278.967 cv
199.523 276.884 197.283 274.31 197.283 274.31 cv
196.602 258.415 li
196.602 258.415 190.369 256.819 187.813 258.03 cv
185.257 259.24 184.39 262.788 184.39 262.788 cv
cp
f
327.156 274.434 mo
326.363 276.812 322.558 277.129 321.923 280.617 cv
321.644 282.154 321.848 284.594 322.164 286.845 cv
321.611 286.871 321.24 286.864 321.24 286.864 cv
321.24 286.864 318.163 289.395 316.966 290.896 cv
316.318 285.032 li
317.806 284.3 li
317.806 279.881 li
315.745 277.591 li
318.951 274.615 li
318.951 268.204 li
318.951 268.204 315.745 266.487 316.318 264.77 cv
316.89 263.053 318.722 261.908 318.951 262.022 cv
319.179 262.137 323.415 270.265 326.964 270.265 cv
326.988 270.265 327.01 270.266 327.034 270.266 cv
327.277 271.821 327.523 273.333 327.156 274.434 cv
cp
313.57 292.244 mo
314.148 292.246 li
313.807 292.263 313.57 292.244 313.57 292.244 cv
cp
421.207 275.305 mo
422.035 273.925 414.305 263.02 413.752 261.294 cv
413.2 259.569 412.027 254.53 412.027 254.53 cv
412.027 254.53 412.717 253.15 413.2 253.909 cv
413.933 255.06 416.685 254.337 417.767 254.211 cv
419.695 253.986 421.163 253.233 422.861 252.316 cv
425.375 250.959 427.885 249.591 430.402 248.242 cv
431.388 247.714 432.993 246.781 432.874 245.459 cv
432.819 244.838 432.246 244.212 431.975 243.656 cv
431.589 242.863 431.227 242.067 430.797 241.296 cv
429.747 239.411 428.533 237.573 427.158 235.906 cv
427.158 235.906 425.147 233.712 425.512 230.605 cv
425.878 227.498 418.201 218.907 418.201 216.166 cv
418.201 213.424 413.632 204.102 413.632 202.457 cv
413.632 200.812 407.783 194.415 407.601 190.942 cv
407.418 187.47 398.461 183.266 398.461 183.266 cv
398.461 183.266 393.526 180.158 392.43 175.589 cv
391.333 171.02 385.301 171.385 384.57 171.202 cv
383.839 171.02 377.625 169.74 377.076 167.912 cv
376.528 166.085 371.593 163.343 371.593 163.343 cv
371.593 163.343 372.69 158.408 372.507 156.397 cv
372.324 154.387 370.131 154.021 370.131 154.021 cv
370.679 146.893 367.206 133.55 350.939 136.109 cv
334.672 138.668 340.704 158.591 340.704 158.591 cv
340.704 158.591 339.973 160.418 340.155 162.429 cv
340.338 164.44 345.456 166.633 345.456 166.633 cv
345.639 172.299 li
345.639 172.299 339.241 175.041 337.048 175.406 cv
334.855 175.772 331.565 179.976 330.834 183.083 cv
330.103 186.19 327.909 183.631 326.081 184.545 cv
324.254 185.459 325.35 189.846 323.34 190.394 cv
321.329 190.942 315.298 199.898 315.298 204.285 cv
315.298 208.672 313.287 215.8 312.921 220.004 cv
312.556 224.208 311.276 224.573 310.911 227.681 cv
310.545 230.788 309.997 240.11 307.072 244.131 cv
304.148 248.152 303.6 252.539 303.965 257.839 cv
304.331 263.14 301.406 270.634 300.858 272.827 cv
300.31 275.02 302.789 277.813 303.154 279.64 cv
303.388 280.812 308.388 287.728 308.742 292.257 cv
317.088 292.257 li
317.117 292.257 li
323.146 292.257 li
323.146 300.879 li
326.42 304.152 li
326.42 304.152 326.42 345.245 326.42 345.802 cv
326.42 346.359 333.245 345.802 333.245 345.802 cv
333.245 302.759 li
336.728 302.759 li
336.728 302.759 335.613 313.903 337.981 314.878 cv
340.349 315.853 339.096 319.753 338.678 321.982 cv
338.26 324.211 338.817 333.962 336.867 335.494 cv
334.917 337.026 336.728 342.319 336.867 344.966 cv
337.006 347.613 338.342 351.107 340.014 352.5 cv
341.685 353.893 342.235 360.646 342.514 367.75 cv
342.792 374.854 343.275 391.212 342.857 392.188 cv
342.439 393.163 340.071 397.063 340.071 399.013 cv
340.071 400.963 344.11 406.953 343.998 408.764 cv
343.886 410.575 343.275 418.933 343.998 421.44 cv
344.721 423.947 352.886 421.858 352.886 421.858 cv
353.165 429.101 li
353.165 429.101 351.493 432.444 348.289 435.37 cv
345.086 438.295 343.553 444.284 344.11 447.906 cv
344.668 451.528 349.125 452.364 350.936 452.921 cv
352.747 453.478 363.751 450.274 364.726 449.578 cv
365.701 448.881 368.766 442.474 372.248 440.245 cv
375.731 438.016 374.477 434.394 374.198 432.862 cv
373.92 431.33 374.198 420.743 374.198 420.743 cv
374.198 420.743 376.288 420.743 376.706 419.49 cv
377.124 418.236 375.174 412.525 375.174 411.132 cv
375.174 409.739 372.109 406.257 372.109 404.167 cv
372.109 402.078 372.527 390.237 372.805 387.869 cv
373.084 385.501 371.134 377.144 371.134 375.472 cv
371.134 373.8 368.627 365.303 369.83 361.403 cv
371.033 357.503 368.905 346.638 368.487 339.533 cv
368.069 332.429 369.83 326.022 369.83 326.022 cv
369.83 326.022 372.945 336.33 373.92 340.509 cv
374.895 344.687 375.452 349.006 377.542 352.767 cv
379.631 356.528 379.77 371.293 379.91 375.054 cv
380.049 378.815 379.631 386.894 380.467 389.541 cv
381.303 392.188 387.292 396.784 387.292 396.784 cv
387.292 396.784 386.178 403.61 386.039 407.232 cv
385.899 410.853 389.8 414.893 393.561 415.729 cv
397.322 416.564 403.59 414.754 403.729 412.664 cv
403.869 410.575 403.451 401.799 403.451 399.988 cv
403.451 398.177 408.326 391.352 409.58 388.427 cv
410.833 385.501 409.301 378.815 408.883 378.119 cv
408.466 377.422 409.301 369.204 409.301 366.418 cv
409.301 363.632 407.072 352.627 406.933 350.12 cv
406.794 347.613 409.301 342.877 410.555 339.951 cv
411.809 337.026 409.301 330.618 409.162 327.136 cv
409.023 323.654 409.719 318.36 411.669 315.017 cv
413.619 311.674 412.923 300.112 412.923 299.137 cv
412.923 298.559 415.037 295.575 417.828 292.257 cv
417.583 289.859 417.229 287.658 416.928 286.694 cv
416.237 284.485 416.444 275.374 416.444 275.374 cv
416.444 275.374 420.379 276.686 421.207 275.305 cv
cp
306.258 296.758 mo
309.361 296.758 li
309.361 311.558 li
311.694 311.558 li
311.694 344.275 li
310.896 344.275 li
310.896 350.496 li
315.582 350.496 li
315.582 344.275 li
314.783 344.275 li
314.783 311.558 li
317.117 311.558 li
317.117 296.758 li
320.219 296.758 li
320.219 292.257 li
317.117 292.257 li
306.258 292.257 li
306.258 296.758 li
cp
f
439.317 286 mo
439.317 287.25 438.287 291.56 438.227 291.81 cv
438.227 291.81 437.847 292.22 437.537 291.28 cv
437.427 291.26 li
437.087 293.17 436.037 292.81 436.037 292.81 cv
435.467 292.04 li
435.217 293.14 434.347 293.31 433.847 293.06 cv
433.407 292.84 433.91 289.61 433.931 288.75 cv
433.78 290.8 432.374 294.13 431.764 294 cv
431.144 293.88 430.556 293.167 431.087 288.56 cv
431.18 287.755 430.157 284.62 429.467 283.88 cv
428.997 283.36 427.457 282.27 426.547 281.66 cv
426.507 281.72 li
426.507 281.72 426.437 284.47 426.687 285.16 cv
426.937 285.84 428.817 288.94 428.317 290.09 cv
427.817 291.25 425.817 290.25 424.757 288.94 cv
423.687 287.62 421.387 283.83 421.017 281.75 cv
420.637 279.67 422.177 274.79 422.177 274.79 cv
415.797 258.44 li
415.787 258.44 li
415.787 258.44 412.537 258.44 411.347 258.31 cv
410.157 258.19 409.347 255.44 409.347 255.44 cv
414.537 246.31 li
424.467 245.06 li
426.597 245.25 li
426.597 245.25 428.787 247.25 428.657 248.81 cv
428.537 250.38 428.907 252.69 428.597 253.31 cv
428.287 253.94 427.514 254.417 427.514 254.417 cv
430.764 271.25 li
430.764 271.25 436.787 276.75 437.597 277.56 cv
438.407 278.38 439.327 284.75 439.317 286 cv
cp
f
336.9 156.519 mo
336.9 156.519 332.533 136.678 352.435 133.803 cv
371.847 131 372.67 150.644 372.67 150.644 cv
372.67 150.644 374.498 151.884 374.824 152.537 cv
375.15 153.19 373.975 153.842 373.127 153.712 cv
372.278 153.581 369.928 153.451 369.928 153.451 cv
369.928 153.451 343.558 155.083 343.297 155.213 cv
343.036 155.344 340.033 158.281 338.205 158.542 cv
336.378 158.803 335.725 159.13 335.66 158.542 cv
335.594 157.955 336.9 156.519 336.9 156.519 cv
cp
f
327.578 261.658 mo
331.464 249.724 327.023 244.59 325.913 244.728 cv
324.803 244.867 323.693 244.312 321.473 242.925 cv
319.252 241.537 322.774 241.44 322.774 241.44 cv
322.774 241.44 319.327 239.775 321.825 237 cv
324.323 234.224 321.27 221.319 319.744 220.348 cv
318.217 219.376 311.973 208.83 311.001 204.389 cv
310.03 199.949 303.23 191.484 300.872 184.962 cv
298.512 178.44 287.966 172.889 286.717 171.363 cv
285.468 169.836 275.755 169.975 273.981 169.975 cv
272.207 169.975 264.792 165.396 264.792 165.396 cv
264.792 155.266 li
264.792 155.266 267.29 152.907 267.984 152.629 cv
268.677 152.352 269.649 149.993 270.065 147.078 cv
270.482 144.164 267.429 144.164 267.429 144.164 cv
268.4 132.508 261.739 122.1 247.585 124.321 cv
233.431 126.541 236.345 144.997 236.345 144.997 cv
235.235 145.83 235.373 149.854 235.373 152.074 cv
235.373 154.294 242.589 162.065 242.589 162.065 cv
242.589 162.065 243.561 167.616 242.867 169.004 cv
242.173 170.391 234.68 175.387 232.182 176.775 cv
229.684 178.162 224.827 179.134 223.717 180.105 cv
222.607 181.076 220.248 188.57 217.195 191.068 cv
214.142 193.565 212.477 201.336 211.505 205.499 cv
210.534 209.663 215.53 213.27 215.53 215.629 cv
215.53 217.989 212.338 223.678 212.338 228.118 cv
212.338 232.559 208.453 236.861 206.51 239.081 cv
204.567 241.301 204.983 248.24 203.873 251.986 cv
202.763 255.733 201.653 266.141 201.653 269.471 cv
201.653 272.801 204.706 279.185 206.649 280.017 cv
208.591 280.85 209.424 286.956 210.395 288.621 cv
210.692 289.13 211.961 289.417 213.573 289.573 cv
213.573 308.084 li
210.86 308.084 li
210.86 320.764 li
223.878 320.764 li
223.878 323.807 li
220.159 329.217 li
220.159 338.008 li
207.648 338.008 li
207.648 343.249 li
219.314 348.321 li
219.314 357.958 li
222.526 357.958 li
222.526 398.703 li
227.936 398.703 li
227.936 368.102 li
233.684 368.102 li
229.288 357.451 li
232.501 357.451 li
232.501 331.246 li
232.501 331.246 234.698 330.4 235.206 329.893 cv
235.713 329.386 240.447 328.034 242.645 329.217 cv
244.842 330.4 256.081 327.019 256.081 327.019 cv
256.081 327.019 257.771 335.303 258.617 336.487 cv
259.462 337.67 264.027 342.911 263.012 346.8 cv
261.998 350.688 265.548 365.059 267.239 368.947 cv
268.93 372.836 269.944 379.429 270.404 383.825 cv
270.863 388.221 270.958 402.253 270.451 406.142 cv
269.944 410.03 273.664 416.962 273.643 417.638 cv
273.623 418.314 275.354 431.163 274.171 434.206 cv
272.987 437.25 274.002 448.577 275.185 451.113 cv
276.369 453.649 293.444 453.142 297.502 452.296 cv
301.559 451.451 299.192 440.969 299.023 439.278 cv
298.854 437.588 297.671 431.501 297.502 428.289 cv
295.98 420.174 li
295.98 420.174 298.009 417.976 299.023 416.793 cv
300.038 415.609 300.207 409.185 300.207 407.325 cv
300.207 405.465 301.39 395.829 302.912 391.94 cv
304.433 388.052 301.559 371.314 301.559 369.116 cv
301.559 366.918 303.419 357.789 303.419 355.76 cv
303.419 353.731 301.897 336.994 301.897 336.994 cv
301.897 336.994 304.771 339.699 308.491 338.854 cv
312.21 338.008 313.394 335.641 315.93 333.275 cv
318.466 330.908 317.451 321.102 317.451 318.059 cv
317.451 315.016 308.073 307.577 308.073 307.577 cv
308.073 307.577 314.666 300.307 316.188 296.645 cv
316.509 295.873 316.775 294.51 316.998 292.868 cv
318.905 290.602 321.125 288.181 323.213 286.262 cv
328.347 281.544 322.028 275.535 322.028 272.482 cv
322.028 269.429 323.693 273.592 327.578 261.658 cv
cp
f
265.288 326.853 mo
265.288 326.853 266.12 338.451 265.821 345.35 cv
265.522 352.249 263.904 363.635 265.398 368.653 cv
266.891 373.67 267.524 396.784 267.822 401.488 cv
268.121 406.192 266.627 407.76 268.121 411.209 cv
269.615 414.659 266.39 420.522 266.39 420.522 cv
266.39 420.522 268.911 427.516 268.516 431.593 cv
268.121 435.669 264.261 437.865 262.905 440.373 cv
261.549 442.882 259.757 440.687 255.575 442.882 cv
251.393 445.077 243.028 443.823 242.73 441.001 cv
242.431 438.178 244.765 433.935 246.322 431.103 cv
247.88 428.271 247.88 421.871 247.88 421.871 cv
247.88 421.871 246.229 418.871 245.379 417.324 cv
244.528 415.777 241.06 401.174 241.385 394.903 cv
241.71 388.631 242.143 376.028 239.513 370.697 cv
236.884 365.366 240.041 356.017 240.041 356.017 cv
237.154 354.267 li
237.154 354.267 232.948 347.237 235.051 343.787 cv
237.154 340.338 234.243 313.996 235.051 313.055 cv
235.859 312.114 237.054 300.768 237.95 297.974 cv
238.846 295.18 241.535 303.334 246.314 304.275 cv
251.094 305.215 265.288 326.853 265.288 326.853 cv
cp
f
260.118 467.949 mo
259.686 468.392 259.314 468.88 259.009 469.402 cv
258.544 469.161 li
258.477 468.863 258.195 468.658 257.885 468.695 cv
257.554 468.733 257.318 469.033 257.357 469.364 cv
257.396 469.695 257.695 469.932 258.026 469.893 cv
258.092 469.885 258.153 469.867 258.21 469.841 cv
258.661 470.075 li
258.41 470.629 258.229 471.214 258.122 471.819 cv
258.868 471.951 li
259.099 470.645 259.718 469.444 260.66 468.478 cv
260.118 467.949 li
cp
.0154421 .00189212 .00241093 0 cmyk
f
265.606 465.647 mo
265.435 465.647 265.265 465.653 265.096 465.664 cv
265.022 465.038 li
265.21 464.888 265.318 464.648 265.288 464.393 cv
265.242 464 264.886 463.719 264.493 463.765 cv
264.1 463.811 263.819 464.167 263.865 464.56 cv
263.895 464.814 264.054 465.022 264.269 465.124 cv
264.343 465.748 li
263.629 465.864 262.94 466.08 262.283 466.394 cv
262.61 467.078 li
263.544 466.631 264.552 466.405 265.606 466.405 cv
266.102 466.405 266.598 466.458 267.081 466.562 cv
267.241 465.822 li
266.706 465.706 266.156 465.647 265.606 465.647 cv
cp
f
272.208 468.194 mo
272.539 468.153 272.774 467.852 272.733 467.522 cv
272.693 467.191 272.392 466.956 272.061 466.996 cv
271.752 467.034 271.526 467.3 271.531 467.605 cv
271.115 467.968 li
270.697 467.538 270.226 467.155 269.707 466.829 cv
269.303 467.47 li
270.438 468.185 271.324 469.196 271.867 470.395 cv
272.557 470.083 li
272.307 469.529 271.99 469.011 271.615 468.538 cv
272.017 468.187 li
272.079 468.199 272.143 468.202 272.208 468.194 cv
cp
f
265.058 475.855 mo
264.672 475.878 264.283 475.89 263.901 475.89 cv
263.021 475.89 262.168 475.829 261.422 475.711 cv
261.032 475.649 260.577 475.556 260.152 475.419 cv
261.199 477.28 263.222 478.544 265.541 478.544 cv
268.396 478.544 270.803 476.628 271.49 474.04 cv
270.808 474.489 269.985 474.865 269.032 475.163 cv
267.852 475.53 266.477 475.77 265.058 475.855 cv
cp
f
268.184 472.769 mo
267.434 472.769 266.823 472.159 266.823 471.409 cv
266.823 470.659 267.434 470.049 268.184 470.049 cv
268.934 470.049 269.544 470.659 269.544 471.409 cv
269.544 472.159 268.934 472.769 268.184 472.769 cv
cp
263.446 473.678 mo
262.426 473.678 261.596 472.848 261.596 471.828 cv
261.596 470.808 262.426 469.978 263.446 469.978 cv
264.466 469.978 265.296 470.808 265.296 471.828 cv
265.296 472.848 264.466 473.678 263.446 473.678 cv
cp
265.606 467.163 mo
262.253 467.163 259.526 469.829 259.526 473.106 cv
259.526 473.532 259.572 473.955 259.663 474.368 cv
260.337 474.85 262.369 475.258 265.011 475.099 cv
267.89 474.925 270.307 474.141 271.683 472.94 cv
271.677 472.745 271.662 472.55 271.638 472.358 cv
271.257 469.396 268.664 467.163 265.606 467.163 cv
cp
f
281.609 469.03 mo
281.314 468.914 280.803 468.721 280.227 468.793 cv
279.676 468.861 279.383 469.133 279.383 469.799 cv
279.383 470.665 li
281.611 470.665 li
281.611 472.382 li
279.383 472.382 li
279.383 477.837 li
277.451 477.837 li
277.451 472.382 li
276.112 472.382 li
276.112 470.665 li
277.451 470.665 li
277.451 469.777 li
277.451 468.097 278.347 466.994 280.019 466.994 cv
280.662 466.994 281.176 467.116 281.609 467.302 cv
281.609 469.03 li
cp
f
286.312 472.362 mo
286.135 472.332 285.954 472.316 285.785 472.316 cv
284.89 472.316 284.276 472.863 284.276 473.929 cv
284.276 477.837 li
282.344 477.837 li
282.344 470.665 li
284.216 470.665 li
284.216 471.45 li
284.668 470.776 285.356 470.473 286.237 470.473 cv
286.651 470.473 287.085 470.6 287.331 470.81 cv
286.312 472.362 li
cp
f
288.865 473.574 mo
292.04 473.574 li
291.862 472.656 291.307 472.138 290.478 472.138 cv
289.568 472.138 289.035 472.686 288.865 473.574 cv
cp
293.979 474.24 mo
293.979 474.462 293.964 474.729 293.942 474.892 cv
288.857 474.892 li
289.064 475.928 289.79 476.379 290.7 476.379 cv
291.322 476.379 291.995 476.128 292.513 475.691 cv
293.646 476.934 li
292.832 477.682 291.795 478.022 290.589 478.022 cv
288.391 478.022 286.866 476.527 286.866 474.27 cv
286.866 472.012 288.346 470.473 290.493 470.473 cv
292.558 470.473 293.971 472.005 293.979 474.24 cv
cp
f
296.518 473.574 mo
299.693 473.574 li
299.515 472.656 298.96 472.138 298.131 472.138 cv
297.221 472.138 296.688 472.686 296.518 473.574 cv
cp
301.632 474.24 mo
301.632 474.462 301.617 474.729 301.595 474.892 cv
296.51 474.892 li
296.717 475.928 297.443 476.379 298.353 476.379 cv
298.975 476.379 299.649 476.128 300.167 475.691 cv
301.299 476.934 li
300.485 477.682 299.449 478.022 298.242 478.022 cv
296.044 478.022 294.519 476.527 294.519 474.27 cv
294.519 472.012 296 470.473 298.146 470.473 cv
300.211 470.473 301.625 472.005 301.632 474.24 cv
cp
f
304.301 474.248 mo
304.301 475.38 305.048 476.224 306.144 476.224 cv
307.284 476.224 307.994 475.343 307.994 474.248 cv
307.994 473.152 307.284 472.271 306.144 472.271 cv
305.048 472.271 304.301 473.115 304.301 474.248 cv
cp
309.978 474.248 mo
309.978 476.401 308.483 478.022 306.507 478.022 cv
305.544 478.022 304.863 477.645 304.397 477.09 cv
304.397 480.798 li
302.473 480.798 li
302.473 470.665 li
304.36 470.665 li
304.36 471.457 li
304.826 470.872 305.515 470.473 306.499 470.473 cv
308.483 470.473 309.978 472.094 309.978 474.248 cv
cp
f
312.822 477.837 mo
310.891 477.837 li
310.891 470.665 li
312.822 470.665 li
312.822 477.837 li
cp
313.081 468.319 mo
313.081 469.015 312.541 469.548 311.845 469.548 cv
311.15 469.548 310.617 469.015 310.617 468.319 cv
310.617 467.623 311.15 467.076 311.845 467.076 cv
312.541 467.076 313.081 467.623 313.081 468.319 cv
cp
f
316.046 473.219 mo
318.747 470.665 li
321.116 470.665 li
317.637 474.04 li
321.138 477.837 li
318.762 477.837 li
316.046 474.936 li
316.046 477.837 li
314.114 477.837 li
314.114 467.179 li
316.046 467.179 li
316.046 473.219 li
cp
f
184.426 475.853 mo
184.426 472.646 li
184.031 472.03 183.181 471.503 182.302 471.503 cv
180.882 471.503 180.032 472.675 180.032 474.242 cv
180.032 475.81 180.882 476.967 182.302 476.967 cv
183.181 476.967 184.031 476.469 184.426 475.853 cv
cp
184.426 477.772 mo
184.426 476.717 li
183.899 477.435 183.035 477.948 182.039 477.948 cv
180.193 477.948 178.89 476.542 178.89 474.242 cv
178.89 471.986 180.178 470.522 182.039 470.522 cv
182.991 470.522 183.855 470.99 184.426 471.767 cv
184.426 468.002 li
185.525 468.002 li
185.525 477.772 li
184.426 477.772 li
cp
f
190.417 471.43 mo
188.908 471.43 188.161 472.704 188.103 473.788 cv
192.746 473.788 li
192.732 472.733 192.028 471.43 190.417 471.43 cv
cp
186.946 474.228 mo
186.946 472.177 188.41 470.522 190.432 470.522 cv
192.57 470.522 193.83 472.192 193.83 474.315 cv
193.83 474.594 li
188.103 474.594 li
188.191 475.927 189.128 477.04 190.652 477.04 cv
191.457 477.04 192.277 476.717 192.834 476.146 cv
193.361 476.864 li
192.658 477.567 191.706 477.948 190.549 477.948 cv
188.454 477.948 186.946 476.439 186.946 474.228 cv
cp
f
194.621 476.835 mo
195.192 476.044 li
195.661 476.586 196.554 477.055 197.521 477.055 cv
198.605 477.055 199.191 476.542 199.191 475.839 cv
199.191 474.125 194.811 475.18 194.811 472.557 cv
194.811 471.459 195.763 470.522 197.448 470.522 cv
198.649 470.522 199.499 470.976 200.07 471.547 cv
199.557 472.309 li
199.133 471.796 198.356 471.415 197.448 471.415 cv
196.481 471.415 195.88 471.899 195.88 472.528 cv
195.88 474.081 200.26 473.056 200.26 475.81 cv
200.26 476.996 199.308 477.948 197.477 477.948 cv
196.32 477.948 195.338 477.596 194.621 476.835 cv
cp
f
201.681 477.772 mo
201.681 470.697 li
202.78 470.697 li
202.78 477.772 li
201.681 477.772 li
cp
201.491 468.954 mo
201.491 468.544 201.828 468.207 202.223 468.207 cv
202.633 468.207 202.97 468.544 202.97 468.954 cv
202.97 469.365 202.633 469.686 202.223 469.686 cv
201.828 469.686 201.491 469.365 201.491 468.954 cv
cp
f
209.723 475.736 mo
209.723 472.646 li
209.342 472.03 208.492 471.503 207.613 471.503 cv
206.192 471.503 205.343 472.631 205.343 474.198 cv
205.343 475.751 206.192 476.893 207.613 476.893 cv
208.492 476.893 209.342 476.352 209.723 475.736 cv
cp
204.596 479.589 mo
205.152 478.768 li
205.738 479.471 206.441 479.735 207.452 479.735 cv
208.624 479.735 209.723 479.164 209.723 477.611 cv
209.723 476.6 li
209.21 477.318 208.346 477.86 207.349 477.86 cv
205.504 477.86 204.2 476.483 204.2 474.198 cv
204.2 471.928 205.489 470.522 207.349 470.522 cv
208.302 470.522 209.151 470.99 209.723 471.767 cv
209.723 470.697 li
210.821 470.697 li
210.821 477.567 li
210.821 479.911 209.18 480.643 207.452 480.643 cv
206.251 480.643 205.431 480.409 204.596 479.589 cv
cp
f
217.427 477.772 mo
217.427 473.143 li
217.427 471.899 216.797 471.503 215.845 471.503 cv
214.981 471.503 214.161 472.03 213.751 472.602 cv
213.751 477.772 li
212.652 477.772 li
212.652 470.697 li
213.751 470.697 li
213.751 471.723 li
214.249 471.137 215.215 470.522 216.27 470.522 cv
217.749 470.522 218.526 471.269 218.526 472.807 cv
218.526 477.772 li
217.427 477.772 li
cp
f
223.418 471.43 mo
221.909 471.43 221.162 472.704 221.104 473.788 cv
225.747 473.788 li
225.732 472.733 225.029 471.43 223.418 471.43 cv
cp
219.946 474.228 mo
219.946 472.177 221.411 470.522 223.433 470.522 cv
225.571 470.522 226.831 472.192 226.831 474.315 cv
226.831 474.594 li
221.104 474.594 li
221.191 475.927 222.129 477.04 223.652 477.04 cv
224.458 477.04 225.278 476.717 225.835 476.146 cv
226.362 476.864 li
225.659 477.567 224.707 477.948 223.55 477.948 cv
221.455 477.948 219.946 476.439 219.946 474.228 cv
cp
f
233.364 475.853 mo
233.364 472.646 li
232.968 472.03 232.119 471.503 231.24 471.503 cv
229.819 471.503 228.969 472.675 228.969 474.242 cv
228.969 475.81 229.819 476.967 231.24 476.967 cv
232.119 476.967 232.968 476.469 233.364 475.853 cv
cp
233.364 477.772 mo
233.364 476.717 li
232.837 477.435 231.972 477.948 230.976 477.948 cv
229.13 477.948 227.827 476.542 227.827 474.242 cv
227.827 471.986 229.116 470.522 230.976 470.522 cv
231.928 470.522 232.793 470.99 233.364 471.767 cv
233.364 468.002 li
234.462 468.002 li
234.462 477.772 li
233.364 477.772 li
cp
f
242.914 476.967 mo
244.349 476.967 245.199 475.81 245.199 474.242 cv
245.199 472.675 244.349 471.503 242.914 471.503 cv
242.049 471.503 241.185 472.03 240.804 472.646 cv
240.804 475.853 li
241.185 476.469 242.049 476.967 242.914 476.967 cv
cp
239.706 477.772 mo
239.706 468.002 li
240.804 468.002 li
240.804 471.767 li
241.376 470.99 242.225 470.522 243.192 470.522 cv
245.038 470.522 246.341 471.986 246.341 474.242 cv
246.341 476.542 245.038 477.948 243.192 477.948 cv
242.196 477.948 241.332 477.435 240.804 476.717 cv
240.804 477.772 li
239.706 477.772 li
cp
f
247.542 479.545 mo
247.703 479.618 247.967 479.662 248.143 479.662 cv
248.626 479.662 248.949 479.501 249.198 478.915 cv
249.666 477.846 li
246.707 470.697 li
247.894 470.697 li
250.252 476.498 li
252.596 470.697 li
253.797 470.697 li
250.252 479.208 li
249.827 480.233 249.11 480.629 248.172 480.643 cv
247.938 480.643 247.572 480.599 247.367 480.541 cv
247.542 479.545 li
cp
f
950.051 467.949 mo
949.619 468.392 949.248 468.88 948.943 469.402 cv
948.477 469.161 li
948.411 468.863 948.128 468.658 947.819 468.695 cv
947.488 468.733 947.251 469.033 947.29 469.364 cv
947.329 469.695 947.629 469.932 947.959 469.893 cv
948.025 469.885 948.086 469.867 948.143 469.841 cv
948.594 470.075 li
948.344 470.629 948.162 471.214 948.055 471.819 cv
948.802 471.951 li
949.032 470.645 949.651 469.444 950.594 468.478 cv
950.051 467.949 li
cp
f
955.539 465.647 mo
955.368 465.647 955.198 465.653 955.029 465.664 cv
954.956 465.038 li
955.143 464.888 955.251 464.648 955.221 464.393 cv
955.175 464 954.819 463.719 954.426 463.765 cv
954.033 463.811 953.752 464.167 953.798 464.56 cv
953.828 464.814 953.987 465.022 954.203 465.124 cv
954.276 465.748 li
953.562 465.864 952.873 466.08 952.216 466.394 cv
952.543 467.078 li
953.477 466.631 954.485 466.405 955.539 466.405 cv
956.035 466.405 956.531 466.458 957.014 466.562 cv
957.174 465.822 li
956.639 465.706 956.089 465.647 955.539 465.647 cv
cp
f
962.141 468.194 mo
962.472 468.153 962.707 467.852 962.667 467.522 cv
962.626 467.191 962.325 466.956 961.994 466.996 cv
961.685 467.034 961.459 467.3 961.464 467.605 cv
961.049 467.968 li
960.631 467.538 960.159 467.155 959.641 466.829 cv
959.237 467.47 li
960.371 468.185 961.257 469.196 961.8 470.395 cv
962.491 470.083 li
962.24 469.529 961.923 469.011 961.549 468.538 cv
961.951 468.187 li
962.012 468.199 962.076 468.202 962.141 468.194 cv
cp
f
954.991 475.855 mo
954.605 475.878 954.216 475.89 953.834 475.89 cv
952.954 475.89 952.101 475.829 951.356 475.711 cv
950.965 475.649 950.51 475.556 950.085 475.419 cv
951.132 477.28 953.155 478.544 955.474 478.544 cv
958.329 478.544 960.736 476.628 961.423 474.04 cv
960.742 474.489 959.918 474.865 958.965 475.163 cv
957.786 475.53 956.41 475.77 954.991 475.855 cv
cp
f
958.117 472.769 mo
957.367 472.769 956.757 472.159 956.757 471.409 cv
956.757 470.659 957.367 470.049 958.117 470.049 cv
958.867 470.049 959.477 470.659 959.477 471.409 cv
959.477 472.159 958.867 472.769 958.117 472.769 cv
cp
953.379 473.678 mo
952.359 473.678 951.53 472.848 951.53 471.828 cv
951.53 470.808 952.359 469.978 953.379 469.978 cv
954.399 469.978 955.229 470.808 955.229 471.828 cv
955.229 472.848 954.399 473.678 953.379 473.678 cv
cp
955.539 467.163 mo
952.187 467.163 949.459 469.829 949.459 473.106 cv
949.459 473.532 949.505 473.955 949.596 474.368 cv
950.27 474.85 952.302 475.258 954.944 475.099 cv
957.823 474.925 960.241 474.141 961.616 472.94 cv
961.61 472.745 961.595 472.55 961.571 472.358 cv
961.191 469.396 958.597 467.163 955.539 467.163 cv
cp
f
971.542 469.03 mo
971.247 468.914 970.737 468.721 970.16 468.793 cv
969.609 468.861 969.316 469.133 969.316 469.799 cv
969.316 470.665 li
971.544 470.665 li
971.544 472.382 li
969.316 472.382 li
969.316 477.837 li
967.384 477.837 li
967.384 472.382 li
966.045 472.382 li
966.045 470.665 li
967.384 470.665 li
967.384 469.777 li
967.384 468.097 968.28 466.994 969.953 466.994 cv
970.595 466.994 971.11 467.116 971.542 467.302 cv
971.542 469.03 li
cp
f
976.245 472.362 mo
976.068 472.332 975.887 472.316 975.719 472.316 cv
974.823 472.316 974.209 472.863 974.209 473.929 cv
974.209 477.837 li
972.277 477.837 li
972.277 470.665 li
974.15 470.665 li
974.15 471.45 li
974.601 470.776 975.289 470.473 976.17 470.473 cv
976.585 470.473 977.018 470.6 977.265 470.81 cv
976.245 472.362 li
cp
f
978.798 473.574 mo
981.973 473.574 li
981.795 472.656 981.24 472.138 980.411 472.138 cv
979.501 472.138 978.968 472.686 978.798 473.574 cv
cp
983.912 474.24 mo
983.912 474.462 983.897 474.729 983.875 474.892 cv
978.79 474.892 li
978.997 475.928 979.723 476.379 980.633 476.379 cv
981.255 476.379 981.929 476.128 982.446 475.691 cv
983.579 476.934 li
982.765 477.682 981.729 478.022 980.522 478.022 cv
978.324 478.022 976.799 476.527 976.799 474.27 cv
976.799 472.012 978.28 470.473 980.426 470.473 cv
982.491 470.473 983.905 472.005 983.912 474.24 cv
cp
f
986.451 473.574 mo
989.626 473.574 li
989.448 472.656 988.893 472.138 988.065 472.138 cv
987.154 472.138 986.621 472.686 986.451 473.574 cv
cp
991.565 474.24 mo
991.565 474.462 991.55 474.729 991.528 474.892 cv
986.444 474.892 li
986.651 475.928 987.376 476.379 988.286 476.379 cv
988.908 476.379 989.582 476.128 990.1 475.691 cv
991.232 476.934 li
990.418 477.682 989.382 478.022 988.175 478.022 cv
985.977 478.022 984.453 476.527 984.453 474.27 cv
984.453 472.012 985.933 470.473 988.079 470.473 cv
990.144 470.473 991.558 472.005 991.565 474.24 cv
cp
f
994.234 474.248 mo
994.234 475.38 994.982 476.224 996.077 476.224 cv
997.217 476.224 997.927 475.343 997.927 474.248 cv
997.927 473.152 997.217 472.271 996.077 472.271 cv
994.982 472.271 994.234 473.115 994.234 474.248 cv
cp
999.911 474.248 mo
999.911 476.401 998.416 478.022 996.44 478.022 cv
995.477 478.022 994.797 477.645 994.33 477.09 cv
994.33 480.798 li
992.406 480.798 li
992.406 470.665 li
994.293 470.665 li
994.293 471.457 li
994.76 470.872 995.448 470.473 996.432 470.473 cv
998.416 470.473 999.911 472.094 999.911 474.248 cv
cp
f
1002.76 477.837 mo
1000.82 477.837 li
1000.82 470.665 li
1002.76 470.665 li
1002.76 477.837 li
cp
1003.01 468.319 mo
1003.01 469.015 1002.47 469.548 1001.78 469.548 cv
1001.08 469.548 1000.55 469.015 1000.55 468.319 cv
1000.55 467.623 1001.08 467.076 1001.78 467.076 cv
1002.47 467.076 1003.01 467.623 1003.01 468.319 cv
cp
f
1005.98 473.219 mo
1008.68 470.665 li
1011.05 470.665 li
1007.57 474.04 li
1011.07 477.837 li
1008.7 477.837 li
1005.98 474.936 li
1005.98 477.837 li
1004.05 477.837 li
1004.05 467.179 li
1005.98 467.179 li
1005.98 473.219 li
cp
f
874.359 475.853 mo
874.359 472.646 li
873.964 472.03 873.115 471.503 872.235 471.503 cv
870.815 471.503 869.965 472.675 869.965 474.242 cv
869.965 475.81 870.815 476.967 872.235 476.967 cv
873.115 476.967 873.964 476.469 874.359 475.853 cv
cp
874.359 477.772 mo
874.359 476.717 li
873.832 477.435 872.968 477.948 871.972 477.948 cv
870.126 477.948 868.823 476.542 868.823 474.242 cv
868.823 471.986 870.112 470.522 871.972 470.522 cv
872.924 470.522 873.788 470.99 874.359 471.767 cv
874.359 468.002 li
875.458 468.002 li
875.458 477.772 li
874.359 477.772 li
cp
f
880.351 471.43 mo
878.841 471.43 878.095 472.704 878.036 473.788 cv
882.68 473.788 li
882.665 472.733 881.962 471.43 880.351 471.43 cv
cp
876.879 474.228 mo
876.879 472.177 878.344 470.522 880.365 470.522 cv
882.504 470.522 883.763 472.192 883.763 474.315 cv
883.763 474.594 li
878.036 474.594 li
878.124 475.927 879.062 477.04 880.585 477.04 cv
881.39 477.04 882.211 476.717 882.767 476.146 cv
883.294 476.864 li
882.591 477.567 881.64 477.948 880.482 477.948 cv
878.388 477.948 876.879 476.439 876.879 474.228 cv
cp
f
884.554 476.835 mo
885.125 476.044 li
885.594 476.586 886.488 477.055 887.454 477.055 cv
888.538 477.055 889.124 476.542 889.124 475.839 cv
889.124 474.125 884.745 475.18 884.745 472.557 cv
884.745 471.459 885.696 470.522 887.381 470.522 cv
888.582 470.522 889.432 470.976 890.003 471.547 cv
889.49 472.309 li
889.066 471.796 888.289 471.415 887.381 471.415 cv
886.414 471.415 885.814 471.899 885.814 472.528 cv
885.814 474.081 890.193 473.056 890.193 475.81 cv
890.193 476.996 889.241 477.948 887.41 477.948 cv
886.253 477.948 885.272 477.596 884.554 476.835 cv
cp
f
891.614 477.772 mo
891.614 470.697 li
892.713 470.697 li
892.713 477.772 li
891.614 477.772 li
cp
891.424 468.954 mo
891.424 468.544 891.761 468.207 892.156 468.207 cv
892.566 468.207 892.903 468.544 892.903 468.954 cv
892.903 469.365 892.566 469.686 892.156 469.686 cv
891.761 469.686 891.424 469.365 891.424 468.954 cv
cp
f
899.656 475.736 mo
899.656 472.646 li
899.275 472.03 898.425 471.503 897.546 471.503 cv
896.125 471.503 895.276 472.631 895.276 474.198 cv
895.276 475.751 896.125 476.893 897.546 476.893 cv
898.425 476.893 899.275 476.352 899.656 475.736 cv
cp
894.529 479.589 mo
895.086 478.768 li
895.671 479.471 896.375 479.735 897.385 479.735 cv
898.557 479.735 899.656 479.164 899.656 477.611 cv
899.656 476.6 li
899.143 477.318 898.279 477.86 897.283 477.86 cv
895.437 477.86 894.133 476.483 894.133 474.198 cv
894.133 471.928 895.422 470.522 897.283 470.522 cv
898.235 470.522 899.085 470.99 899.656 471.767 cv
899.656 470.697 li
900.754 470.697 li
900.754 477.567 li
900.754 479.911 899.114 480.643 897.385 480.643 cv
896.184 480.643 895.364 480.409 894.529 479.589 cv
cp
f
907.36 477.772 mo
907.36 473.143 li
907.36 471.899 906.731 471.503 905.778 471.503 cv
904.914 471.503 904.094 472.03 903.684 472.602 cv
903.684 477.772 li
902.585 477.772 li
902.585 470.697 li
903.684 470.697 li
903.684 471.723 li
904.182 471.137 905.148 470.522 906.203 470.522 cv
907.682 470.522 908.459 471.269 908.459 472.807 cv
908.459 477.772 li
907.36 477.772 li
cp
f
913.351 471.43 mo
911.842 471.43 911.095 472.704 911.037 473.788 cv
915.68 473.788 li
915.665 472.733 914.962 471.43 913.351 471.43 cv
cp
909.88 474.228 mo
909.88 472.177 911.344 470.522 913.366 470.522 cv
915.504 470.522 916.764 472.192 916.764 474.315 cv
916.764 474.594 li
911.037 474.594 li
911.125 475.927 912.062 477.04 913.586 477.04 cv
914.391 477.04 915.211 476.717 915.768 476.146 cv
916.295 476.864 li
915.592 477.567 914.64 477.948 913.483 477.948 cv
911.388 477.948 909.88 476.439 909.88 474.228 cv
cp
f
923.297 475.853 mo
923.297 472.646 li
922.901 472.03 922.052 471.503 921.173 471.503 cv
919.752 471.503 918.903 472.675 918.903 474.242 cv
918.903 475.81 919.752 476.967 921.173 476.967 cv
922.052 476.967 922.901 476.469 923.297 475.853 cv
cp
923.297 477.772 mo
923.297 476.717 li
922.77 477.435 921.906 477.948 920.909 477.948 cv
919.064 477.948 917.76 476.542 917.76 474.242 cv
917.76 471.986 919.049 470.522 920.909 470.522 cv
921.861 470.522 922.726 470.99 923.297 471.767 cv
923.297 468.002 li
924.396 468.002 li
924.396 477.772 li
923.297 477.772 li
cp
f
932.847 476.967 mo
934.283 476.967 935.132 475.81 935.132 474.242 cv
935.132 472.675 934.283 471.503 932.847 471.503 cv
931.983 471.503 931.119 472.03 930.737 472.646 cv
930.737 475.853 li
931.119 476.469 931.983 476.967 932.847 476.967 cv
cp
929.639 477.772 mo
929.639 468.002 li
930.737 468.002 li
930.737 471.767 li
931.309 470.99 932.158 470.522 933.125 470.522 cv
934.971 470.522 936.275 471.986 936.275 474.242 cv
936.275 476.542 934.971 477.948 933.125 477.948 cv
932.129 477.948 931.265 477.435 930.737 476.717 cv
930.737 477.772 li
929.639 477.772 li
cp
f
937.476 479.545 mo
937.637 479.618 937.901 479.662 938.076 479.662 cv
938.559 479.662 938.882 479.501 939.131 478.915 cv
939.6 477.846 li
936.641 470.697 li
937.827 470.697 li
940.185 476.498 li
942.529 470.697 li
943.73 470.697 li
940.185 479.208 li
939.761 480.233 939.043 480.629 938.105 480.643 cv
937.871 480.643 937.505 480.599 937.3 480.541 cv
937.476 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (Silhouette Soldier Background-2 B.eps)%%CreationDate: 31/08/18 3.13 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kqg[SKp\=J)n39`lX!0J/eZ)#6D3^FDY<e8]7"]oZh&eh1qtJ;[#Xr7tfp9?0YI,X>F68uQpWQ<9/jUM"W_00AW;l;==Z1"*%Y[PsT7O)>gJ.*)LQg72QOF,I$K$aisTsd@N+K,RWJI+e[RMt$/Wg,kSmdpmU>*40FUtS_ShOZn+;sN"V;B;o2p05)X;ZF!0/ZI1*%\bL"93N][L[&UO1^7D'O"?K+Pcb_q]<R1m:ZE3HH8WH*7l":FqZ3RT6/GbB%F3iMtS12VZ54fU%U:qmo[jU<e^tBjN6og-X0.[nc%UC@,g^cD0&,tKB,ftI+rEa@r&26!dXSO]<'<E$MH8S\B@P+m^g"!?C)!4=H$m;>S^bF!,YOpD+j)$9bLraE/;g2T3;VMQFJ!HA^%%)i6uUT=!HobZagt,6+u^5E_kCXQ^_c[=2!K"Y:f7J?==d="X\/=hF#KIHW_M:.9:@k1$EdK(bu:dk(lI%Njd,;f>Kq[(>#tO\f6a%`#,._L]N7o<;J&=EMdj]q6&L%WE6TrJT.!bLVmO^+rh2+-OGN]D\tilZ."gI:3-93K1:A&Qm$j;j'Z7&0[tABW@OOQ0Ymb$U9#sM%),7)jAUpQB&cDg\&WE+V7>Lp8%Kl+s^>(Hq!OA'9R:M-[k)+[IeYsnG2B%/gr";7e3Zq`\[B<jUIE,FIp-Db-!rm^5;k^VI5qm.g%pe'VXcl0]rN2@)rfhP8LH24IDQL.aoV6=VfS5jpMr!GZ9Ft]/"HV'DN!!%J/g&r^ulWXW)LsonHIM)"d5DT8gI((NU5VpHilXs.e%+*($AR_\4U5)*-P8KCC/j7=L7VofO[+p!&1!)Z+oIq&L'Ldi35JRRI`;pZ=;0O=MldAbQ>#6:B[[/N:ief5jW[TWcL5u]EaF[(C[%Cs)]K@iDLip5^=4Uj`EiXPBfK7KE(Q@kK"OlfUI/5:O!D8mRXl%AdMMZpCm(0<&]%"FJ/]&K^O$HjSX)1!3r/.Af!2gZ51C,3/<Q%i@*V'3r+e"-LWZ,%Akk2?.SII;-]lCB&S<!l[ko,ZX$U99!:B!HIJ8`W1d+'ai0mc^21d.)%98?'i<C?7VQ;#i]e'Ss/An&W0W7\%RaQa8^g8!/I<hoNC:fBj2g_eQF_+7_Y[qeW0`2>cbNtPs!F+2/FA-!kUIeGh*8[:CHeIXSD=C)=j-6)[$(l).BlLPg?)ZKFD1lc`%`Xs300jGQcGD(lp!ght9/fgW09I(V:,*<-Q&L,=f.[%6ZTm8I4(%B!.kO;/cne7H:q!#l`LsA!TnU]Zj"Ir1T71=m27\c(o(C`m&%-lo-,-6rRd.O%37"PfMA_BIiia%$i(#X14qk^R#!%*][%lWMSRY5fDJ!)"JCE:?+CYQ1W!iLhB*K]LQd$4[ZX,&fY`#;tFi=(1#(%"UBT?OlV^g,aSoeR3Vq@+f#9=8.'sa"+qfE\$3XRUd4Du?K@<_^dn2+cgbG8js`8Z'G!4D^,n:^7qDJ3I063oKm40V0T'hb:a4nM%RhQi!n<O(b,L1;-.I`id7TP0eKh"]^P_hY0Se7>8,;L\p*@AX6QjV;N#!tirfFeK\_a6=#(;m+jRO)(!V-'0tJH%0Z70IT!0N-$_%=F^gSd$'1ASjhU%8O*K4:.6B1N&\DgKS_)a$L&s3E"P/8nKMa=Tfkfl!!?]Fk<FPAoPblp-AUaYIMdA/IZ=ak-k9fS6c(6)@4401%7E>//<06,_?8hK:O5Lk'$$.ppU@a5!&i_j@5Ziac&:It*rP9:"!`8)8O@aWn-4&gd+HGg7d)&mA3]'"Ck.k+"9^*l/<0l-iJ/-`O%82e;HTL^mZ@D`?o1Gh!X"=PGt$5oEh7p(Xk3OTel*7f7081$VE"_<?Q/+nP4s7A\YL$T#l<uMREZQpM]Dis0+h*p%UrWtJZ@\h"@%$p@%8BfJLo`.N)L+qPoPn\L$g8;X-5,ZAXffI#fa_]qj*"li.iJ[*kcK1CY_\#jA9"FIq7A`1?jn:4XERunHlJJ)Y#+tVB?.)$i2%&CO,O+Ar3+!=UNV.ggNHb_'G(Zp@41ag>_0D]2SU"P"5PKqk<`+E1#A@2PH,(m6'+1nC@0kb^W:?i`9V"jqi7Q_nGZ-E&bdU-rCS%!%'3'El6QYQ3pP5aV['-;?TFMBfK"0!$b$./f[+j)'uONK`c,m$!)Z]PU$5U.2)RkTS[AB;K.G2,]*[C#95d;oQ0d=N.].U2IrJ"%qSD-C`CJQ?(js^*TT"N1&Ju`Y9N\#3R!p6:oR`hTYZUZn"I'_!V'J\FW";8CDuuRr[Y87sAC%JNrrjra%>##XMpW9-KqUc@K8/Si%&rMO-kR1dU&?$%072Z_@49?J7)5cB-K(hcYJu*)4#rk#T'?CbprRR7'2>g?MpIJC^B[@D.1aS#:--<&M/4e,%`mBsk0OPdU_O,3X%WYT?0DMUucQEF?Vcme9HatRWL]@inT*P1P*k[9@%7YgDj;3V[3E<Zg5N%s<#!ll0&fSX+%_*R::@LS>/ckuoCVSLV*ooLO0%[@7=%$;q"?;IFm85QMCu2Zb=j"_S(c"]UGJXmslc(WINO2YmJ-Lc.A.(_-Dq;1YY'Li?lM!G%9=fuUN.r^04DkP%&ur6I`]58<A'b]#XQ%Njcc_ND0rfhjMlcS#>d8H=X6,%2Ul_K?r4_SX__sj3ULM_AC4h1'/ee#EpWhnP+WjVSF`-1VnXak-54/aV9J%;)HpQ(<h7BgjfA7%+[r4.,"9s=n.dL!N<gO.&!@&kOofr#n1J.23mJ!Na'g2")BiY@766$qp8AQALr8-Ns%?k&:1?p_JHCIb0FmREE'Y!O5d?<A+_cRi%'TS%CkQ/X5$s#>'`t6.E3,,0H.6T"!Wk/!Zp$NB(*6ED[0Ks<JYPc#mI6ob.^4Y[C^o&C&QqjJU,/b6`MGH[7a'=KrKi:[&:/Tqh%#ooD0+>cY._+=cb-g&2iSP7_",")V`3f2k[A/GJI7f8I=aBU\LGL7]@CaT!GaU:^JcsVRDU=)#\+gEsqM9IZ!)l@O%JR]k>(aa7?%1bNW$1:a2h(5IWaC`8)KEG-DuJK3FJ.>9N!,X1(WT;<(9o2q^CW<kAWVTdh*o'.c"E8G3@Udn0B6rbHh!\Fah4c0;Ja'(ksS/+#i%-u%lVA`s[t\p+p"l=lU0aLY3n'cDo$/>5MQHh!\WR/SFS6l4A;PVp,C?ksg)?g;OXj?2U^oGi]o.*iGNO>_n<e&.Dt1(H^W+UW^4%#&GE=4UTFFdE,pZ,KM9k4W>2GBQ?ibpue;h'Ss[F8!='I_MFta"=R8<Ige1-ZKs.*b)ep1o-X>+a2%=RJL_1N(_?s#JdCk5W'MGW%[.rW/m>T6u9)fUP+1^ef3QlQ_=b&_[h-nLIHja@DCbs=hfm$44;h)Aq8hN)$'1[@nOJJ"W;>?gS_-hK5g9Aod+BaVScU[4=9'"D[%[A+kn"1(=6f^k/P5Db@810M3+i`SnZB/l";F2K533#U""q@PGE:W2`gkVLBIJ&jDlnYc?sV$$K0g:q4cS:tGb5RW'f/KqFXi$JqW%FG,X+_$>r1$3pR,D%m0;E<(k!oN5K<%1J6Z9_4,<A;!l'*OG`Idh*WB2OqbM#AkFp5-U[tq0ErLH7>BELnfh[8Ao&`(6rII/Om!\%7*[ND*MeKr"EopK8[?uC6Mt5ES)]$_2!U=\YYJoM*]#r/<2),oB9XfAI7g\<;+@c-_',\K8!YR'eAXR23X"e@B)bJ359o0Xdl<:9%7N1B]_e;jhCr7>n(K84i`d%\2D1G>"+Q;Ue#^0MoCFt^?MI>>^Y]HO?F)F)kP4Q13(EF71=JI^mN/DS-iO"AXHgJ8_XrBH@i0<35%776U?7Snt/;J$c/c?PYjl@Gn*GF7bnFQ/+DNj3,Us2(O`)'-'n_Cke[N.WsI@8UbZ!Y&/_-m'X.9Eu^Q%aD]n&eGI]G8qqP3\Xe_%:0u>T(o(!HR!gh.%^H3el'QnuIfRa7cmb,fES63Qh-d!IfY@sP1dd"KBg_V7#u[E]-u:"kM9K]1T7@g1$A^)5;$]RC#tJ-narLLA%KhL>80Apjd,**V^$diW!4iEa:)>k)>&&XGGo1MV@^JqkgUm4tfenh&-=8SR@FH\dL;l_\M.Ol/iWCPBc0"MV#HiIrl3cHMjp%t1U%*q\Qccb=0&nX:e![AYpH<`P>FkW38cAKftL>sf_4TBO,PY0@?:LWa<@?$;G>S1Xlu:49G4&#hG5gGWT=hWQV1NM7uR)#?"(^:VNE%rM*?h%Eg"7XZr@#'i.4Qbm1UJ?4G'sSq(F@aGG7-SQ%fMbdY.ml'\nNUJcf3+4,\pHo`_-V=:DE_>1XiFF53t-9D,HrkGtTX(!FQ%"0F\!adn<*Pnj.t(:c0<o@X3b,f3UH.8)faXiYJ`@"NN@S\".9.7E3.PsS45%9h?=gT^LOe'q6QIAL<H^h\qolJ^<-VR(Ce0QGF:%;b1%;XYXYR.t-[&&sSf&Z!r:HoUfC8s4Q8MjHSbh7<:6PpOY-pjM=-gr2bm<g6M25=j(;2^>[O0Y,Di;MO`(laBFTd5%'()!9pSp%oi!mnB\`eGe/'SFSmL*f'/$EPcJRgjNfpMf+XG2fHYelIXs-T0'Q@&N5\?2]c6-Y]!e,uoXD&<cNNG!:l$]l`cuPsoP64RB[`JRM%)MOJos!A!+jFE^>E0CBAEkjo]Q^D]Y""lmgHK9U<(^]aD\Q*H:<V;u&n:W>XI?t(N)+qV[MPN=1S@a7epLuVrmIdNSr'S<tegqDB%RrA.Fil\C>#N"c2aGdh]6HD]M?;H\E_M9tN@Xr;um&JX]@eD8<U3/f(>K,mB/$:D'DUd0>XXEj-er9:Pr]I&srUdgX@V)na8-SIM%p.s_d'Z]QkI^Z=Z)i`F@/pim3SFd"h9rc:RMR3dl'/sce`#m?XG36pX51$"rX.5mnE\%P?0OW7j[+)ir[3Kmse+Wd\c_ked,*Qc>%f9^r=aRP8UPc6pZ#(K[AoZK!kIXOZM8M3BRMPnk\,tRjXoB<q%MA0$ddm%-8AG14^Q#b:!fMa$7=MO(`HTlUTda>4Dh!eN:TV\8B%XS*L5>IsGGO&K)u-<Q:MRau&Oq%Y)cg$LX]W2Z-j@9,D^Cspl@TiZP.4s8NP#l+XW8=ItF[,o$pVqUIt5JQ;iqk\ps<VN.<V2r)&%hmh$o?0M.GdE>USQWCaP)UFqTeRc\@oa?VB<OHa-,_*!>Ru'Y)M+@/N,/;mNU]7I8-V7<T$(<FFZM`p'FXL9CTjFd+)7E5[\"-l+%<R?)p^2FMUX_*Sr-=gDRS6@#&WqDMM$DU,r/T3=n[X&ioG?r,K?Paoe>.9(>KP&o)Y>3gBIBD85Z"`*5*M)l"0cQUjZ"^rdIt*fA%]Lse">B(Toq>&Oo(pW0<!\Ip$^.@A;Fo(NMh'6;6$!VE:-`m3ep"\r-Ccr81'D(qrpH#N@-iT2$3`oNn>Sk_ncFYu^0\saE6-HC@%po;:Kho7)sTdD9Sc_G;Zb1=Q3=Joi_MZg]S7mY7OeEP&VU>1n^b7rXdhtZG(?<DYMoXdN*^[]M&Of7o`/ZBr'j\A#fFk=qe[3Yfa%q/Psdj@\Wa<Vg-RpQ_9DC6`Q3c$I;eCqe&HEn)29jg*^r33hT=dThDq4Gd*0k:E!]<A]%q%*+7+MY373laT6<jii*hm!rZ)rdl.m%(%&%R27]cbZs(XH?>Fu*YY)$IUn8`^#SY)/QaETb<H#X`Q*J&<4YB^KJe6+X;mj>HOl#g'f;;ZYjC>2Zkg+5:/^cS#fB:3FQ:J'9%hXtLZ+bAMH$VKY(b@XPM<!Ma+a&@$&_e$DjFT[bpVREV]F56Q>M:#k(els2rC/sLK5F*.cd1'He&?I*LQBqtZUfJe>>$pi/]&AQ&%'<.b6QVa-cZpnW?\%`;=2Uc8=/C1AE]4j(P.9`($aCa/M]TE//9#4.kfSXJEpO?+PAM\7:mH2Yqhofro-I,_[`c^fGlTB1,E\t?K%'5,%?>?X?f<ds%%jkEM"Yti\Yill#ob\#kY;PWnL0QDjF?^Wm[KV;XnL]$Ndc<-uX>pAgHSiF'pE3-RLI-ZVFQ#AU$`]?QS@L)nm%7muZ!rF^t\>h4XWd87"9Aq`lO8D=QmqJK9<5%F-WqXLtApbl>Go%@XfD\_oW>^bk+9k+(8gEh9k%DAlFGQ.oVkLnKH9D4A$fXHig%>8-mG=]RKTD.DI$)P$T[%c:g8JrOnW'C3)`hDWr%8aH(7*P?6jgH&KH:$f<nDO.Doq6A?=EY$4*R?=gLr."8?GHIGLDNnf@-0"oj%Q,k`N)^X2dOa0:t_B--J&PskP@YqXGVE6t)*;eW>gK$W9=)JaVda.+<emj.b4/g8<oqM]gla8+"d](AHV=WXr;9a0u]!Bg%Qe2;W%FN:<.pKdOK+g(3ZZMJpu=LA!qNG<(S[FqM@DcljS]=1G:Mfs<L9%b<RmIJq"d8%\0_G5jEPH_s>(jq,=@rT9`f@QdF8_UKB7Q.:[%8q"UD8UbQCr7P#!Q[!rV\h"Y"L8P!u"TtBgNdSn1;+o$aMAs+`I($KS$iAIt=7&9lS0*,d\GcRdpI1r&3M^Znm"4?!;q&=N28;K'%/6>3.+$@%g'>f,cXDOAe&#SHU$)(FH6p;aH9F1FtKLhQ[Dm\W?FgJ_U54j%-oQp;\-$,`%nt^bb43DL"9%W7ra);FSAej<DoOILj%H1UrZoDEmboB56/>hhGkhE6;E4Fd>Ll/1Y!oB,kT6.b8poA?eEhtHm;-b`gG/&G$Q"I^ND98/t,B?mP^DcuH?dcQthk*bi'RIfT(%af$\sg7Tf@eIG"'*UC$)m_75"=JMocEN'uL-gpePdXK?@QMQYBqH?M)d>.%=$JJk;15XJhI=>^8fusu6)T7WYNSrklX)/JNg`IKH%rnY6<P%9"$f+N!oE17KqMNm&5e*DmXEQjn5gnkRjWPeZ>.ed67E-b7jX)##rM*Z54a2#_EFZ&k[;-S'*VTIAUW_&bBT!N>BFJ$7e%NTH%sgk$V@eZqkmI(lYA==-`<V6gL+&)IP*2B]p2?WR+;'jT<L73;AbkK\m0RW<-G'C2Or@%"`U.>-F*1=i7edHepiLqC%?=;%mM%6>/%roktY`ga/u7mr/,U8K,cM\TD]crJd:UcDHu8.HYH(3LaL'VO4\=k%oo8s+*[-V&R+8@oRVj9kRDK=m]I;;p>'$@a8&bm-chc%Bn\$873bT3hpU$Kgm[7^C)j9\[eZ5iMEeE_ogRGHNOS)T^5'R;H]D)NAAu%@YeJH)Ap]Q_.p)^SU6_AC\FNt5V=Y.Ynkj[^j$Hgm%'uItEY2"i7\-q-ZE4$H6FBRY:lJD-A;X8JqTUVLS^=CM09+U?#=0(6Ba4L%Dg[&\J^U<`5Yp!,tJ,Zq747it@0!N!Lf4O&peHul=%Ha1?If7?sS^Ps!frH&XX:<3\._+_qb/$:D'DUd0>XXEk*AnZ4-.<E1?<ZmGPrL_4EIXc=OEO)euKC_+L+4b(02G)\]-ZLD+\?*he%6XF@/e#<**=3MQJ2#X1KQ^AV&[/PH.rkFh8s+N%j5FIf;)7D)Pf&Q\3#kOCV`-S*Vn#$$Q`L-e>.=\F3ij7M'O2uMoIon(/;uTmO%%!g[1^o%%7.=\F^?/Ll22W^"-.Y%AW-.[KYM+ML?nHjA5P:D![Ff$Y>k>U\*>9)ZHVGF(io(Q`)IJ,5>T]J=Vb#2#1C\$4FmSp:N%#uc%rr_Qb#CTYc47NJnh=8J0mb,FH+!bu"=>"brGT=F(U/'=1@/p@Ne4BRsm99<c"AVHt#Z^LN!s/"!>97Pdp=alQ0?aUr>W*_g4%GM5W'M+D.42j4$_)_WcT>LkX=D;E:n`h-#OAfn#P@NVR&W?s41S'kZC,aAR;H-cV^[YCWun$rtQ'&iVCkOG1NrQ?"BJq%9Qg85:j%0YdUAZd>#2Bep-6onqj@kP4tk_YQ-WM.U$-=*l!WFZR8(/@<.1TP_@`?k>W`S(IVd\8<_qlW3hj4Mg?E$iaQJb&278<QbE00bg*.%E0CHCZG;M)AWm:8ZG8]L!\MHjRk/MikkMShi-1a57Kb=3.'Z>GVb#R<JU`YGb<ia2"#jrP-4Sb+JX\LcpJ[sY2bX=?TP9SoY$N#k%XfBp_-<^("/"6VFaR>8q/jmaiblb`B$SO&$gRDIt<[.WMCA369H#);`n$'(M?uuu(RiOEd0_kPC*B(Wb_XD*crj2Pi5.fP)K(rQ"%NVd%m,upBg]7*B>8en3&F)Qo@ENfDKA\ALi[/Tu[i6/d=IU/1Q.AGB^Vp\*If2&6WB@1f]$2_/;G4f3Mo_g"j*o=jmq&N2ds2+XB%NL+N0eII%R]CjrgqS(:Z2(tk!`JV#j4>_'(Vj$gM@u238>/iYl!u@DYM8JN35+P6fo8IttXX7'/jT]\pVG.j(#IH&X?J]gE>g'j!%q"sIe_ckpj7rH/(V5hn>4$MOhd$AO-oLim/Q?XB0CB*Nd@CuK'],CR4:eOc,(id.2A+%+=>C`[,Ki>lRY$^P)M&nS&_s0W#^[YXi%Fbq6BDjNCn6L*I2g6%^mZejTL\p;l2Y=n&Amr-uL:RgS4mmU$Ai9@EK:IRX9f/J$PSdu6Y_[EYo@.?7@X]L"Bf'R#iCKslKm-1"j%jfJ7m@V20m&*=gu$"6l'O:O6.1)!!XEg5DXTV\%fnd>_c1o9)Cb=fKu@@d>[\"&5dCaFJj]kC('(F8+;%!:Mr=8B])`eCSNLoe)o%[6>cR(]&h<FBRY:lJD-A;X9;IrB;9EI7i%ZQV+E"AG"L@iqa)*hs8>ZM8a\p!U1Q;AcCHQm;$k=SFq5ns8BEMqS[UTI?C:-kImG?%&qI:#\&^V_GLB5'a/j3S1KI)ehlI4HYk]3)aAqtL)7[*Kna*f/c37FPQF!67X(XK,@2S[>[mg,BV1;pK;!Yfk8AK6W^Zp0'"MW-X%,+hc=qIH&cT>*5XMsS9kDTD91VZJIkc[B.h>5dV<kW&g@XRmCbBn(bJ0l&I*X0,3nos[Gp@fUBf1<[ihf1i*m3s,G**X^$E9hj3e%MREjlPZ8Ua^/VO)`p6ImV!OD*m$RLIjbfK?pO(dd@"V59@f;8.[hH1mB.*'G)rd1:LtgO>)u76Xgk7>PW.OUa[+N!d8Y'24qV*W'%8,Bu5jlCX&\5a&6Irdp!3n-lGdT.XUhGd5s#7/Yqj'/W#(n+H5am[@<AfBlOo]'`an2mhXEq*:qGYWC]UK:Tl;dje1q+U/i!!M/>%.A3:KjLWbo?a-)Dd?TN:V9g-rB-+hBaQDTbC0@tQg7['%kG4,;QSj+rX$RmE?aK&7P>\HXe9):2Zn/1k.g2Js8n5m&OO"ut3s30g%kfSBKd[ZmpfB7;$Vb^Ql(ct;#p`DOFIC@RRg?khfL"H/i[.emm(-:]Ys)d`@cp9>B;*/re65-0?5T#T3(6s'P,nF2kp:Q@j&nIAa%m_So;9/H?9R&!So8-G\-bA\a+6A:gUqSG^(MR222[ddn0S"K31(r!Z"WIKG1Hd7*?8D't^qW7i<]W'UOG]#PJiolqJPMNp-ZP&Y\%a2Rut9a!fgmKR&)ZI&qH5bEZ[a"T'=Ju'\C&V_qY*G#dB5p2$lUGF/aL=n!SJr%"sXj]V^T`kr3N8Jk64rht%e<9]W),jK_!t?4P%>UD07;)4#Ci!;;t\5&,ZQnu>;]t]*pH[Q>>^k#dY_7sg8kA>pqHZj\<n_S0Yg7N@Z64_VC8e])dm9Vm]b+@#16.\m/!*c.Wcj.H>%oUSFT8V3d\Z&0*7'ZjUI#nt\lI%d;d_*p')MZYG&fJ<aX*OQ7[,QSo-U;1?r+m;/YII[@B(]N7-^Crk#%(X6[&I*k4,7K.8)'Lto%L+be_(j-Y2^fMqZs&:rj!L8-F2EHF^8!ku^&IsH-@Ajm`&dT#eKk[W6oS=LlGWH8u7aD&R)1i;fW!HEt-42k'PQEAP*9&p!6td3!%@jm?D,Jdi&i!6+]J"$J*)o8AL#_iPSA5H>E,/UXAV(d^6(AFFDUF_8:^jn2-,0]-B@+c]*kQahTHYA_$)Pfi9R`8rp->3g*BQV*'%kU)$GQB"PHi?;Hp-$9u$&X(O3KHnl@Tj\oN(<[mkkQ2DEB7OKHi$dM,-B3sRR4)ZZP\&4T=L\d-ieG@iKrHIV$QqS88?u)uP=^Xf%i3=CRL?.t:7K>E!i'`;%("!9O4[<`fOGGS1*d7ZF:9qkU`\?/bObj]A0(B`?7'jg\#S9Cp_W*mY@".U3E0Sl2%1/"4SCIS20ci\V%9l%&i<LWWI>$"3$$]]qWZ:#77,cZ=p/s'#7AiT'QkW0_*g&rNV"."K@Rm;ZVN2IeWXR+<$0&nW]_,d#\c9!82)uP_/L,]QJ.fO7N%eJ85Xs%MD'jN0EtNP:9bA^H`)I8T9&2V3"`p`$jhqINDN>gEsZ$4r`[]mu!H(C/bK,V_GD[eTRo%pA45MS;$@lT#rA7YW("6.XBq%e@tJUdWhVbHn*apA-c=V8Q-VmrToj6PoeY5>h*%&],eJEV:PNu8#iHa;EICDf8;n5_t+coj]3n2%Rs`p$PfG_lYj5ZgG25gJV!N:%$aLGVK-K@IJ^f90p/CdBgbR6GQpoYCH<UYLeNpsHFC[K.;73C$2=EOg8p"=a&De5bereI;T`NZKQ5+cAWc@4gQD\IdC8!&rgt(8R%KSl0'X+&/`1-n_Qh`*E*o%EZ.eJ\e5'sIm'#Zp[<#SVKbM*))TbRVjY%*IeEbXJ:'<.;sXiQYh5?iIN!@]V9e,kYF/WdT;=1sXhk%%k!OPajHV/+r<e1dS`Nr48"mC6,i4I@$E\oFTT%Bkf&;a0\-sE'G_:IqR8*gV4(N9dkO6+U4r*2VIT"_e#Hq(Q"X]!]lsVpli<Q#%hfuM8/af9,M9qFIWhB(_CAUW/67VDiR9!pKgFG_l#NT%FJ?WLuNh@3i@^(p*gW-QODQoM1O=BqE**ltI`r(M>M-83P,Ydml'K)Bn%;^NLCk/#$rA-2[[jYLL;cE^8S91HVtY(Y0qY8VjV_Y;uchMM/O0uHi6$SA>&?R\.7X<@+k\1KAJ$hnH9D%R8J%YQnc%P/Bh/#f<9%)B^%9`qNrhP-qs"JBuG_Wq*o=7I0W5PU;>'G@$VZ'A<]mnJ"B&lpia!Cd[@6X94c80nSnt'38g#aq_<_250-+b7J#Y]-a=YKX*LH%W8FpNb]44`KMQc!SteckNNE)?mHQC20jIm-bZGgb1!.ms`J)?-b`#JaHJm`a56(uM\n.iu[TW45=_T<jHUUAGN.:45`,oal2]U+.%QlnTZU^WpS#M,uQ1h&l/9N<p7VIs(nfbNA#JECd&p^c</.DChUjfJ#'KNmk>n+ha7ojYWGC9c,$SaXg;2lslVHIA;X[AMaDW#aOm%@p3WD.=^u9GMJ*bbPt*eJ![=Dd]#Q'8IMnVE"qF5)(+?QqTQ)AUZ)5?:+U_h!+s:Zr<eE/X9ef\UUj3X^A#ONWhZFu/CB9db+JuZ%`7J1u^F+e`4ULpb<$22VZRUub>q_([\^IL"jZ@-iYP-9LHfHb[K3h3MXLg&*7F:X^/E;Bh=,Cn%@qCn^ht+5k)'XN/oo9Foqg#P,%N(W?T'K/WBeLqn)RUh$6q83GZrM*?^CHap-b@p[Y<!CpY[GgsrKqt>J9b,?9K@'rtI72>pQL*d,pj[,ToJo^!3p9PX49,@?p!m>]%bC->sn^*p%,Pm2oE)qr*U_Rl)2)_HQUN-]U+'u944-1nkK>,$Zjr#!_Q"#i,Nh6,=>/..2>1JYj/8(lRXgt)c"<4amV66oQHV/Y3%)Qb;B5JNQiAJ&3n_u\$1XH05fG9m]8]EUMsWdo?F_\Eii8l(/$aT,/WH)[K;;\ikbZd_lB%s<UqTk[X8)X#bHep!s*Firb<]'?M!%DqkW:9Ku*`9>0J$\G3.r+7rS1"g3ZL.5<tB.&gMD'8,8O9M6s1XUD[$B_=i2T=iXOs,QN<]W.;:7i-q*QIOD:YK7E<MdZ#6[s<qU%p3:'UMfMInoS8]f#SEY6\MP%+8);'G&=$S2-2l%ZR_^HA&@+IqI_+CG*^GbNr;;7gL?&V%E^(o+(NQRP?KcWR572)hmdU#WA_;6L%+1]=<jHM3S\R@T<5FW-)Vt_*;a`&q+e'rleX2pI:MFJGr"2D`-P+m_Us&HKNV(l/@T)"hIn'/'`Urf'QfMidsmY<-(eFGto-JM*e%=K00Ar*GQdmFtQ>V(_'jAtq(R8*CQCiM3?IeG19\`_Vl5pGoda%,1C_)/S-ER*RZRp))\#jo_EcKC86f51jf/OhTWs+QJ6hLnpQr%CQ-IO[dth^-@7be,<tC9_8Rt>LDUWt^2p2MV`p4-ZFuoSLL+``A<!nqBsOaLe=Js:+hN5l'moY%`suQg:P)jk,EJPd<`H1N=5O+h%LX+EKjCLUp?K-mbCc2nAA].tudG]&?#1:;mnEdZEa([8m5DmJ/P"RkJMRAuGP`D:p*83:/E&1!#M7n;2+'$b"LL62Am@]SbB26(R%If4:HHnV53Z/aMX35!:92HM/OR`bXKrrEl?Q-dg_,^e:rd*E?N4k<j,`H;Y4>EOl+O>FC2mKU6D:0]rrq;@1OK7Bb).bS>(1PUAd%F<l$cIcg=CV7XkkqH:X!q8bSPKeM:7"FHc%'OGSEc$+\eQ>E^_-ckbnpDqaslQYA(T$d%EpC,lK8h.MP#lV[^%?&&\5S(R38:3:c%PdNIBo+M!1UgE&!?M$[<O(_Xg)J'BX`3_q+B5G(@^7J*N*Y3_)GAOaN.[PsnoY*<CKCnEe%P<>8"hsW[F/;gP%L'N=5,QKWHhV!o%F6!s0#4rR@).k44F(+5.H)IE'M-2l0M;.cO`6/m@n`uOR]<*A]p/n<#V82I=Q#["\:no'*&')TM6D&LYdGS<]N5=7_hWZC^=1:%p%NH5Ktg&I",_VK2-(s)?>4Mg9Z12OS1LINZk$s0_Nj5+fY>(lM,@>'(h$^)Cdp?mOIW#iO(<631Srcj(g[jSp-D]Y_0lHN'nG[Om3%k$E0hnTLr=-;b[Kc%DN0\0gdImcGJG<pPD1IQEs2fosQY;E6_jo;?W,AE*!\_YI-.kqeX^*`RUe$8ml?*<(1iisZE?Nq`>.DPE=o%l;_e1>l,Zc']n0pQb'5oKuDj$CGU'1o.sYKT"LTY9eMb!*T^42@X#V[gcB4)P-9<X&3[cEZdl.tjq:jS(+lo1Xtn%OH8V/C.Tt3W%N'8HYfK)5$bblpt*&njc+[sp:4K/M^M57&n7fpLYYnhSW73S"U:CjEgQG9X4s)L)IAAI.4<SEJ8lHuZM+^QrIZWbf93'?W(IVp$5%jkG(9EqmpthAeV(d2aduG[-qrTs<HEoZNZrWY+5,HQ?eq'0T\cJh@4gCcgF4/be:s_mq:h3OUAdg#:pUFkm;u0Z^t@O2s;nLTPoY%03(sl4"%;+_gfBH3-MKsXrN"Je>jfr%eq$;\oQ^Og4aSQg#HTJmHeaQkeSS2#eThl*UKs#aha+cRNn!:d>hn/3HFIl3h@=r$CWmA%3,i5GNd1I]ml7s@W&kV4ddIb@G!njkhYHM/\[?9E]'u#)*4`WkNblGqFIWI<]]2t34Zgq!rB<`fc"8!ZAR9?jZT6$F8_dQ3Xp2(6%NZ3+"jg]Y$BE4?RRnM&sFP_=_]Tg:FNq1^hd8@UADEDU`po1$^8ps4Y9cQ1IHado'2':%%hC@,qNrCYR[,oA$K.U_;aDJHkVgHVA%\@LDc-P)'95gT,/7HC8s(/<rF2V2")FmjQ*Eoun0`V)>'>B,_2^Qm/`hmS]-MrIe6l%Ia45%\#'V[l;nXaE"HCgFEn4'S'MX4#QN%!H9+Tf%/DndIFkLD?K$)/5'h/QN3]Gloo<0$]uuJl$G$ck>kI7G.O*ZL=<&bYFU4gHfQI:gP@ZPVZ"dGK_j!mQWVM#\9P].MJ'tT%k>@@44&<&L#L:3(3TD[(*X&"B:7oT&)!u3$V1PL'ja+3!I&0SED(]Ja,2$r/gjFNs.t:[Up?X-lg]"*EA"/:F]P`KFQgO2(_t2W+%r1rZ2:5Yi[qhXA:gH#:VGl(sZGHcK9grjLuKWY[:d[p&Z]9YNmCc>^IKC*P@'6H6DK*.Udjh<`:Fnl96#8_Y4F^/aTpUg.Fgi8ZG%e;CD&j1O?nSK.E074ssHh/;n(>YhKaS#cCcYccU@Q\)8BX0g]CWl2D1c0Di$k\bV#%(?smmhNojG=(9%2O?MC?CeTI2pIApjPE%=%hjnE&DM_1,G?k^9]0#"pcoh[0Y!)40FheZP6T6(Kl7qLZS];d6_MQE[ZM@t[;g=*?HEJ!$fCLh4j?,<nf'd=FAtM6bB&XBgT-o*G%n-3[U)_W.ApUga7OhNc>Nnnr$?kpAO:=8HWG`XE3l>cRJgCaeCgD<VnHlbSVpd.Q%_8i+<`dNV<]q@%M-MDh@@'f.13DNoX?<"t%%:PkD<Msmb_$1GCB2ucY"IIGs"+2t^[_]u%hF$sri46LK]g::5FVk%j$HIup]O7t_ap%dJ5o@4r]<()0.a,[UNIdr,jq9O6'QN'!i%U\UagT$./&MZj"WXUEG:g@[WkKj?1!4knd'W;!p'?<Z%,=*i0JgW'B/>Buo@]BsY13j@-`2$3k\g`PJJ!doM_Hb0cXZta@6.f;O:%?667jJS+DG&K'$dLnJ+bcNRHq\J7dp\pu)OEojtE?CgM&#GmX-UL<DtdgBq4e,,iS`C2d$WB.qjjP]5NPi(fUTtAM.V[s,C3:p6r%.MH,A^JE4Cc6dNJQI<]k^YgB?lJaZu5,Z:d#OmnZXS:6,,0;WJLcd*^)IukmEoa(>;.Q(gWat:kE(.=o'V;$/4FSc_VHVJ@o')IO%fa27=#[]UWmF:BoI:BHKZ]+@,:53+.klN4PduVoD"T<XMO"aeiH,A]Q6N*^P3S<NMbjhfbMn.NomPFG$G)tn8gV'i+\^M'ZYIUcS%-CJt0011"l\.Y_RiO@V`NnrA#%bV-`El=i/:m!>8'VF'!bM-L`U:5#XkCI'PW3;WoJ!P@@\`'^N<0O@tl42FH,2\R,?UsgNNk1@:%UqfCdij#hGEft[,3qEY-9$&H7W8PDT7aG"mrTK0P%Jh.!hqd$aDU8(NdT[3c=biEY>Ii/;;b@:hbn\tsBrNg6R7YFedF4#=`5g>/%p%m;SlV#1h52gX=pCkYMA\ZTjAG;qAK5^dlG5$"g34qs,`-85qK/9K(3I&9l4uqgJL["SOk!Y+LLul\PfuZuIrd:&bd>rL:Y59ma%82_"=BA2BS^3a$CPg[2'U"5L'M,6AL9(3hf8JJij8#"^TG'V-WA!<geH\G6qDsR=DrOU"`HDH;Rfl+S3dITY.39_'En0DP76<C5_%D6@F=CkkdVe7h$Jm.ZR)[;tD%gqFY*74s)@'9Db$T_Ncfi5P+WY*]R,j%;q"m.aJF%h:e"m'L][T'P!73YlHudq<^m10r3"HPskq%miW8R7%Q/:h\fhD4M!#Qba[Lf*>-\_jH3QkRR];r<;`].e#I&)9.06\n+45)0CLF5lt\GQ*W$&jfl:8?qN$Q2`oD(!8rfNgoCoq^%K=e%^'?FaZ?n[fEWAgR-SfU!mK$AFAo^Fr?NN;s.S<%bsjl2/Zb`sdq.ebF2*+s`'hDjQKeG\'CfQhYkhL?+._-B$e(S:s_J%mkn%c+g*DSc[H(S;$=g_k?MSJ*NXf*c$E"86Xh1cUYZ$S*R`LB71TQ:k?,9UgLZjX%;IDU4%31>R\aBb@2f?;(b&oIGL&rlbQqcPRdF\%Kfs@g<:AG]QTLH_kG<-IZ?LRq9UoI)V-*==r,b21jVm[E<R%(\^%Mb$`oakpla=q%]817g>-#V@2serPlV67)NSW*R\]V&SAXg:H%+"tgHO7uW7c64XE]=l5KiE^/A:VCPAI&H^LXg`A$6J%jtX&%jPKC>JmGY#E1]8)/^2u`#c%(^;Ya4T'Oq=4$gGl"A)>20c9Z-K8[%j0&*OE''E4_9:$OF4O!)c]suSs2E#h#;=1/fmJ(VmoQ=PD#$@X9O(jrGDSX`)Is6=jk*"q:qir9(!>6*q4\K^lX/=MQ"#feYG`gO%WQOY[?`W?)6E@PumX6j39SDNE_4;^XP-Ko`IIpR>jf`S,[:V!Vf4g,ff(2?)F1p7**=_kX'5J:KmAi^WWG)_2i/9&IQ[AI!kNinW%cW@POahAN4r9`*R4aYP7\m*_IQ,n$khJ62-mAJ5SXkNk*\$p8/nTJBVfPWoNl/RfE)te;N*qH"'#n[F-/f3lTa%,d0g*k#9]+gBO%Fpl:PQ`fUt*8=_:OdC=fm5cb7Bb!0PCPh!0Q1hl.AU6OA/c'te;4:.;F68(Oes)J:(NIP8kMmgDT#a-sl*u?760:6[%>MmK-:.uK%5tn&q_k!g'<Mq=*;b]j5FB!DT/V;-<VU/E"HEp-s$\(a3]%ml8@dJ=@]c_%&L"LCoWDt!tRd)^YS`[s585$Yq[9Q1B[>halW?M"H%];3RBIRCPFono*L-hl!qQCe&IL>9'.U`ZO_,B`A+<bm6;-*!CSO.XohVtD@EJ7)@I%b`R_(aOK(!rJr,m+iH4Uiu*F<C'\?C)pPb%;EAu4!n".kOH"/F!3Pt/MEk-O]@'3/-$r;]M4Q$/0XR(%?KULG<P?bmC^9MpV;<)BdBRgZ6jD""[5LLXo^%3*'.mf*^+Wg;)L2<g%d?JPKIIV[P5[B`mc7BZp2I?$nC]0<Log5gVl>+^\+7ol]<a1p?m`/T]89HrIWMpuK/87`2e6DCT=f>"eLDR20U:*mD+1OL39qL6&%UVpl`PgVuR.<Y;uV_WYN3LVZb"j$Q,iOO+u01VbE7@h/$!)`b(.L>E;;ZUql*BCO&<Z7F\Q:6m4ID44C''KQe"kk\.hHeJJXjS47%3`1W1dE.*5/.TgqnS,D[^He6$4?s:\+!<m'_jOW'1ma20=n!%c\7>.^D5#A+a/rluDJ+NDUNTjV%,0g'UpLR#pkXm&hSOMr))eC:%MjAE9e29Y-X<AlFY6gZD1$j+IC?LAd[`g:Allu,Sf;59/i4od"UMA&YkO_q6ON'W\T4:$lGU$<kcqhcHN_eP?VU$GI>r@1%<Q/Lm%K2d(-H\RjQg,*f)$%Jbd@u\X>_.`CNonN\aL50`F15=soE(^^8X?F$qTN,Y3"+G,D*i2:T@S#Je*?c4SDUK4n;_a&IelH_eSqLXT%@)S>!,&=rg8!\dX8T#EH?O`2kc1+ah(cEs[N$Ti-H^lY^=h^W0AZ://rKO_Hn*js(E\&PX8h$X:>\[g,\`JlHNmTi@WBaQ?ATo\]%jNIeMF-L)&9&7JC'm"*;]e25^k&BjcG[[2NR\%_uRjh!+Bc#a!'c'q0/5m`LN>?P>BVeqCj=';`*3/8r>5G<8]O8qWiDWtC0^laM%mp@/]@a`Nh1%!6kKS5Y*2tlMWa)Th<lh)M<.G3Be099#4F"_O$M<C8D^!d3^/ti_(>WP=8+tgsCSHR=R?cDjoZ(6\6"a:UV]A6ef%G=%""Y!hX+Ta_q]pP&Ikq.X<1Oc)fm+C5Y45u7G"Wmg5bi8_b_CQH*NoYoEPJ[l0Tnnn',a(L>/L-NsE#AK=R^(t$ZSnjfgX:`M7%RD?8ABT9Vb^OP07al(]sUuliIO,<gIqD#8,$b$#nY%s-mAu[_X$Ss=3!bs7:*j7Tr0^`PV-8bS@#'WR4YiE\S<lib!`;ZIn>)*2c%mNnLj:F^a5^S0h9%NuC/h<'UrB1MF.NDpqN>gZWV^QPUMcb7F)o,QNJ?*r?>SF+%`#C2[#Ucd:d?QD3IYt@H"U2PoR<BG']Qq8JI%ELO33ZDTf*=+ut+ckFe(%g2g<k^GntpEa:h%GKrR@on]t^/OR/r<Kl8Lhf3p-kjo@pW*rbMKmpg!k*(iRCf>QlCO.I8MIkhm_Bdo%Q%]uTB^6AfT"5QVm(W'P[2TSL?sL#3X>A-JeL1Cr<V:g%.Q\_,fQbF?"NB%7-Q8.pp6n/5+?mbuVN20'U3Ta%--/Sh:(0_km^0l]%V]dTB]'tBHi$L>u;;TGNpq&b^hD`19?`-Zkk/lH/M[k]WV6V5T2hXC::[M'>@K!ulF+(87X1k/giK5+&(uXM0Y^lrr$-/eN4H;Kg%H4MW),FQC2_@AkZ`iMXjI2Va=IBDubn^T;D676\#8b-[*D#*Wa>&`;&o(f(X&8O_r/b/PE=1>^Ck-jo`1\6X/hPHf8s-:CTnG0Hd%HMs@5?J//VeooTmak@42%#hr?gdP3`j,4W/g*_:IFQXo$qPko(Dha5%AKOCVh[Q1S&$McfSY.q]OV4osIu>s#pBU.YS)UN+&&Wt.%d2YMM7F7QPZ>Xf\m]*ENos0&q''Y/SNC@7TANqbuFR8Aj"Z?-54][c:2%T%m+EY^cD"Iq!90eE':WK@NrqVr"'!q&q`a7*Mg.@AR%p.KUoDu46Un&Qb9fYL!U:4(f&?a@LS1fOD&@!XB'TE)GNZ7s6s'hN'?PcF*Td[\$^]ohT"Z-)/3ceVIMdpl36C0aQLhTDVq]B/7X%+c/,=PGHIBQZ?(j=I=>4'M`S9Z[.O6RbD=j\JckjMB\u-PC"rCrBf4>BZ8D/pl=pc1G8cuCJ5O@<N2fn@[Ih]5lM*0S03*![>U0)%TpP2-nCk(SKi[A/j\(T&D#eS8*s(T&G1AAum1++0r'daHJ_M7%!p`'fkgn1;k+/a'>IC//_:7#[dEmOKJs44fSPIZFDNKF!&^*l.%R_NrEHB[aOr'fka'mXX"p9@%*3s*2Q^9/Ljqa/cd<RUa^dVH/UG8E?(R4$oc9ZEMHb(GrQi9bjWBr8%b,^]Dn*P*U7hd);Upg_u`%%4l\A)&C:Zl^fcD*%-`H;>qlHJ!:@.PF!f(!iKpe]Gj!)`Bf=u?cA#@NkpQq6EBI`p!GP\BBXO=0V@]N(U^i@/3dG2[+hjV68G)W%1We)KqA(H=1ZSQ[QhM!3?#T:QF=obk_r_lH`+RIn!L^eM^(LBUMl5&b\pC%,4[bB"k6)eB^E6!fiIH/=4l:B\W6%5@N.-XBf;O#t%C32@gULQUb-:&nHSWAj"LuB\Z2[/!5&\1$lLs:Xqe-SU8iX/2d&ipiH^rBJ1LhRV6]0)&eruAj*)H]IQj*P8!3[Wm+bY$Y1G>IC2%V]IoAZ(QpK3Pr'd20:PKP63[PBRaM7VM;q&U>LTj227+4^jMS]`rW&Pr"B/O@F!*\6XhAonW/GnmkXl#JuBobr2GSX=T3St0ioo&%j3nT?@o8Z9/:7IDq)u%oFBYs3%,#VSVAV8:cXQ1(VN)L<TQ=q,9[&^68J$Z@]h+5<lS:VW'K7(K*D#aGZmJ7"5*fC-*-$S&Tdm<E%%gsWBTaN<`@-BcY]0*,1b6qoBjs#OraOi$GLe/Pbk&Oq0&'7@tFDHa1Gelj??QO^GfoO4iSOXcGPG-kD?b/;_U_=f["He.m1-:FC%hZ7(e5>AoRDYMS>SKN/36s!p_m/u)S\VSMK[I^\q<1][1;[u5c+gX-?=:^']^2m5W;*#cnkI%pTTJKi-(hQh.@h)<Fm_iUPk@H.5%5m7"'oT-;n?-'GAp*Uh:iCmL%]Rj7&SNbb4fQU%uiF7#/Bg/$m?&D//Nfu]</TrJD8e8"HIT0#-#IlAUf^B5E,^YVSU;V0?_blpd%jbJP1?'KP2VjQ$YV&/CgZd7%G.ELA4hY9FgpFt?a$Y;KmouEW.CEp:+WDpCZ\IeC(nSa**2V1pdr)^aIRqjKm`hXKo!dXD\8tF0`%,SeAEFGb_sYfK9_JlLP/f5SmJ':.Gl-,jl<6qP*IT>mNHK$Bpn6@(lh&0,7^_8Vh-e[u6?ijd0%q#j.HkIk=q.GP<LEU#-T;b^1p%pPVs=98V[$.m8d1/mV0r.^Y^KR/&#Y"27-.5gJUQPs;gnf`q->^Q$oYEuAKW,ifO6,6W9iY,7E5p+;SU6T@d\On3%N(Zgd&?PoPh%q0@B"(b<B]<<0.KQW0>5RLr_>rI17aN"c-&@k-E-!Xl97>"^>.Kb\BSHSD&:lk*tF1+Z,+aV4EJC8CDg*&j]=l6Wl;5hCk+C:cnW%]6]DFf-7mXEJ`>im8g*reSpI:Ih,!JH'#:?VYUWTG+_]h91Mr_OPT<NrIK/Xahgos?.1HcKK[`jC.H>K745F\F@+FpQcre(q@H#N%&VmV-PjCXf7b"0SXALnngk&pXKd2-d#R%\bfc)6LO$U">pJ6/nFqPWt-o#X+Kf?=/dZ.!@+)SuIgHg=j][u)]Qu0!/\Gp?g2V2%V%Vs>k_?.53X4?3$WZ$UqkJ/p`aRQ3TCI"`Ip3<i8GP<*ZA04;PmB7,pl43l0*Q7S+h`Gt>IP:E)\`--c/<LRiD4;uUK/XfF!eP_tq%J"?fGT/lZ2E_`mPgT\s^`raPP6b/*[*^QZCOjB,opCbB-_j6&V:'.c#]gi+i!J+`&lYj.q<bkaCfA$tbhFuBEK*%S3)tWkKgc0"B%6U\lqZ_E-V-/#e(JtB<ZQhOl8Zi&Ru*MZ4(Xc9@gFU)*\+:j7T1Z0M>DI$'25n6M[(A1n:(3G4PINBJE4X,6FfcO4;;L?G^3B4*G%S.U:Oj?G\M@.`r!=B2#S*^"g!R4jH6MeXB>GLfa5*c!<NH7@BmFE,3>O4F-WY*p=!d84Uk*5`Wd5Fe;-4!e,TJC0]Ej\(,00u[*]%90l!H)Yulb3Dj;.Q_qP`35OarCrLl6k=VN^$Q/)OPP%C+!1C?@.oM=Kmo&6Y;2:2o`TGl9X2gH(\`A4/$tQS0\W<!1gVrfkds[@-%0(=9gVCp3_I,3>+nV_:YEmbQ898/'8GOEMf%GINmKf?S)@e[PB/J&rlk<!-I#jf[h.AV<$`,V+:h%ohu4d":BKiA#fa]VWF[\LHE%bWqfP$Z<h0%5QMYm5#EB4H30)IX2l`OA/ebr%\c/b3Dpb9d!qRNbE&Ti!?X;UeS4K3-h^IT:@HKP\&`=1$W&.<md1]DLsJVmZ/Gf%Ps]at4NTXAd=U[AS`h)d^>a;\$hI\^P02?6CT-2u$MkleGGf#iGWl^S,d(mK!ZL.&3BAu^q(n)%&%i`$5'kFJ`i-nm7he6]4f,,N%r]GAk1'PM6+@a'(ENaoTIBgVI/+`8SG;>N5A3ENiL&=+M\mRB-D*7;>:gu0"?^)1Ak/c<@=U9W2diG$,La<^]f5D"?:"(k)imi5s%7tmFN6J0?8nXZGG2t6_Akt98I/F`h.2Sc'L_Z1AMI$g"Y_sD1?@@^WL#J$F6ea4=7gnh;7=.lm()MM+O7$XnbRu.)gpPciqSa<8s%ShN70aV?c:?OqELIUnHM/!$4b,l^u%O2,g?/EEa4=F.Rc2,H=8V27(,eRC/-UZVYi./2^'6knT9r6-AA(_7>5jHEKI&agHijj:GF%L4+KcJ;:YuV>NDkboE7k8"f`14=./=qu$hDI6gYS$HI@O-A%?lVHoHF4(blAYT)pg,PYaJ?4gu@UK/YA`NJ`pR$deNBZuPS(:gWM%bloG,a.5s4d2`q$SO$N$CFSN0hJ41Z8n&poSI`2C[9t:\@=A#8&O1//$#E;LUakADmd^QuktqFkqEBP^a3[Eu*.VYWDsJQIjlWWK%rQb$Y[_-ktNt5nRooq*oMR?>03!R!E,X*=0j:WHKhQcV+$W7.,!ba]GM6ej45-J"udBi?60apY:!^b.2M<CTLogrG:e\`O)eeeQm%Ll9P*:\T'$rh>Si;rua)_(7.aM"*t+i(Jmt<96.QRFX*e[sNmgaq2X=DJ"/"Ft9,)UG5;sa,V&m#>=i0OIm%-I`\D\n6t]@m6/QZ%9psH39f7jB0eW&#hZn_V$^%G[GB-SA3/g+h:4hV`<<5U2e9D3bLgE?jAl8I>&mD$Bs0T`]cL4#*+=\"EAu?I,gCP?0D]>[/nJq+[%0:'5X[+HQ+Ji\ts';_Q=7/5]#NUPuH;[L*.`_:7h@.2\B;TX&u)J&1boa@+i.-oY+TPP3.-1Q;MIdT:5j%*n>CU8N,=?oP%?Jt7H%/r9Con1N?A'q;udAfFFi6Sn\:SjcT>!'`[L@,p).%8`=D]Q.FS;*8l*`$5iZ<S\&;Q&loIW*muo\3r>:Kc+I*6ep)e21:*&3B`89%Vh!ULeN9kL86&jGTn&-HSsd9Z0#-g?=2l*bE=>DeUj.Q%ZCl&Q6krnA<(hIa/L88Not2q!HbF-hqq8nf.4_7jQ@ss(-e3ER*CJ&k%!usb(B`.5)3N3'+d'6?oGcj1f\=0amfKWni@9fBSl"$VbRSE8@TPm6+pl<`h9:_B^C:-sn4*rFfdP"Bq)Zok'g4K7^WfbR3(X]lc%=b7IVFP"Y.:\k=\k>j8nJOLAMZ+%X<4o(!q+Ij3#g=N%7HnZ2ZGW]`*]KQYlO\Ds^cPX/?8Y,fRWrjnk<i`QE6SZfe.Rgkbj:N$$%/RW1*/$XS!5CqJRDiL>DO,\)u'"@9]H8'IFE^7i,W()L%J7[WZB\MUc/_TpRcEUJC8kj:q$!$\>Iek+mdQL4XL\>FmRRT4"@:CuW%iJoG%3&QqrJKd5h0C0Y*K4mCCRL#@@0L6H/rW>>aA\l(Mf4(:rCkDTY';fN9hB_Q89EeN.]I'niV<:;Qa*5RM3b')pa$Bh'rG'o9%'!_c37(5pb.=,<!GEqaT%#CqO"8N=[B$?s9!"4Y<8L_@5b8fQ@I=0S,Z'`2eNgY,n^6('62r[>qddtc+W+:aqHisAZlfTp)l5k-U%nhR;'@V/o067Y<e13\l/-%DV[^*%ZN`R*.4kVnRoUVZ147%Sc&Bl@&+B.jYC&1HGtmUR&tKp4(S7((`9</'o`\rh8SJ?NL[6mm8O%'-CS6_Gp+t54cpX/BjZPNl:Bu_e)[__E#BU$;@Y@Ea5SJeMH`pC,?>]Z0t7a#$VX6#lOc\$)m"65C[X(f+]EVrab119rLoSHp%?V%Hm:&c.";gc&$PO]Y?B5lE1Tg&BsEU)gG;-['=!aK*s?HTB%l@eflMs)F(p][Q#WX]16HrB'cteAY*+htK:[S\Wd!OV1/;;=6<$J(%7_p"p1=8*];ZZo]3$kWi<93%P>]\TU*Jiga\)d%!f1P9C.g)1=_!SXYi'ql("=M2q#7jCteuCb_UC_EL#6i]<(h1Z\\AAMfU(T<3%b/l3dIbJ]*&]2Y4;SYAF7.PO3+&R@pj?gD4[kJ/:O-q&ahP??r41ik/o)K@$1&tadqd!a"^5%ato#Rf#574['n-W@P*@0JOI9.(t%^lHsN4ce42oM!HC7U)Y#Heh%Z1+%6d*&jD"p^WC"H^XC2,CM1Nn5V'@H8F$AAFCYRT>ud8*):AAdZll2GKG6:#]8-\6D`.Ip%lMI%pbaub@kX6dVeJY>#I9EJr^+h?843@=8?'>\7]\$:OE6%T?g5#[iN>P].IJBt?8n+7S5[g%Xllk:Dg^'3-eAq<ju,Tq%l(8j)"r_/%9T/\1J)qGB;NiW[>PsQ?Lmmt^#`a0hIaXf;'TG\VTdtO;NA,8mI_B_6c/DD9F1<mIF1BJF.6F/-"F'Ej3X@@!em@iZmDZ$%F6:G;%Ch/3:?*nt+1p-SQf,L(``1>0m'75Z"$,P[:AW*2uG\2LMju+`LV@aL53`IlL'54\nr%XW#1YQI/4e#%7/q+g`r!!G6XKOC.V6REO%_&Z]5,$m#Yj(6b^FR2?Ze;a?[gF&SE:^sU@78"EVK.6"l`Ic!u]!O3/=`t!,7I/f"msUQ\,8rGVr0(<d`Lo%*/I%A<r;KaPEm2[M%&CIOb5OMg\WH?=VBME:@P:!D7CpY3#)LaC"BJlL*FFJ%php3pYB[rcUeUn=[]!^4nHK]KC_fi?lXL'fl5?^A'7scd>R'!QElaB85%!C"Bs@kk&'BNRXPIP"[)3M^^.,j>8!]?9nkT*qp(RK=hmZr>YZFVq&cf@W`75.GLDh$fUi9;t/&$/?L'V6BMq$R?3@l_1fb/RGN4%gK!>R11[8aLokbchesSgnQ=#9rW`fC0eg.j[W!>Vei1(9D6u'!Xjr%%i=Zt8D-NcHGr*EL492=b2I:_e\$MOfrNhf:0a[WMDY+aI%.b<:6Q=c@OX6&NQ6fpsC\F`l.VjT5fe@Q$Ic;^[L>$YNlCRopYg03:/gXUnqK)7tP(d(13&B4IL.W&+>W7_X,U=%AC!oD+.0ke=f%bM^%LV,ZgmhVr[lnDLYQR,K9f+Ed@2:CFcjI&g2BrNg30jY36'Vk]8>NVB3$)\&-#om65o*I4*ZZ'k5.c_\7L?<QO%LO"^[a$&;P%GTg=7YlX[0)cXH"_0ekJ6-jcXkWe87TL1/7Id&1E>23c7h$HG+\&Z1C8?/W[`M;%'%4/ciY@Sc<o\ZhO2rj-TTEo8+=i3E?Hj!Jg%5(ZBrB%drLX.Vn<-@6A6W-M+^0)u8JB6uFJB(BCC@]#HMnWlmBpVIoZ\?X/+ImhW(H<Xbl0F?F0<laJDE.!j%(Q7C_gC$?$O3GGm%(sHTJDD]A8B(#3iE]^Om_jiTB#\ueZ\9ZJj9k`$#.sSg_"_JCfJ<`lJOk[h%(dr6nWG;k1(:S'1C56@k28+$NT)#DGNDlV`FuR8,%)BZf5Xmjp+$egQQL>$PSNP[6d_+:7'h2<3hd5oR)(G,fE[WQH4VSKNHp<>&XXEJ89#AGC2S\;951tA\##&1)r(Y13Tf9,CIGh;SU%ECVZa`X>[/^^%$CZU"?Y&>uSZeBXe1#W:oWb!Qd8Jq\tN]P9,"[#5jp;u7[K#I0[N!qQP@C_R[VWOt4aeYA$gVdbV<*5*E.H[;:G%k`NfBOo6]r/:XnRHF!4:-P(F#>-uM&1/'X%QqY*ei@VAcQI%7sYk2SbXBR?sA2L9CZ:MUWW>_7'/D@:3^ZcFISBsaYkU*qgq7EK]%':AE$f!;7H]0=6Bm,m4J<GqV5C\$!YZ1k)Rf]`;,P:qncIF)=JO1IBbB#@9pc"CXk1\\r-0:`(3WZ33Lr`m6gf]^fJ)o_09n'Rm<%kG)tj6B")Zo`_T9bqtKO(C-+*,AuP:X-EYBJo*Jpo[/47&Fs)Y>Rl7r\aT$Yh*i?r%0\Ate:J21@'AeHc/"29!0O%4d(uh#UCTGL%^2p/AolAD>Z,n!J?fJF(Td/nEgV2DQ]VJOi]k2YW3-pmS2OC;[&'FffpZskZ'(*X_8,LoS[!KbtV6l">6G,tKQI6$96&"+Q\IK4o%bEllt-:Jmj/s=0#9/o>Q30*RjY,?8NmKg.GJ\DG0gB3Ks-8so3U[?[4%eLa%*g-$3\&>6m_,)eJTamV`:[g0h,-('8EQHJTSu0JQ%=5$"lE^GGHU<WhQrdP23P&]=)M0#j:DBq<B/,:od[E%?',"S=q#6&kei?#<7,A#A_@V6b1-fEY;F/(]a4+[%^-2b4#-"\?L@daZq%O<-Ddjj;g#.<*LaG2I;sF'dZ<Ag9H'nAP'apW'V%qI:7PIh'nG_rf\+5%J]?Bk;1#LbuB#Ru)5;?"LLU$fBVgUdVe9/WPt1\<t[L%:04.1oCJ'X&/jZej_U`\5f/^:#B+2tKlMB_Pun-*_;gq%<BA]L<A@A_a`;-:<,]07lM(c2ot;Hri&u.C9DSZ<UY8uA7-SDM4VqhB%Q/ClQ6RleGDV*DiUc'%ES$&t9%ngE>dn"i`,<ZS%&Yn4?Wj@iUDg?[NcE1NN8B*"'C4d>NjmsPM5L)U\hiD'eUQfm^hZe;[/>UA(%0XpdEqII>pPJLJfG1=L$M<D4,&nt?+Sr;*hbKCc^eE2'I.s!3SR<.QIlqopX-="gB<=t=5h'o-_:ZcrDhV3R)N7@",BZ"c5ie:-C%lCjW;5^F4o::!e9+l.E6ku%&3@t[3](/j/!?'@!@A1]1U@\f,klDZlVknB1tjbpI-Sp9ZuJjED+64-gKg1$*)B$lKuSn=?'Ae*79%L+$Vk^,\^hrShPRT!Pt>dX"@SQ+9FYnl_nG%r%?>HLf"PO9-1<m:k'kj`R(6c9ut!\8onaHHgeHc?VqqibnJj/H9Nica*,BUU&pN%M=e'cQ(*]=\_$Bl:E`//FL2R6`7#CGbXS&qDfp9>]['"B6Jm%N,2KhYg'M2K4G245LI9P=KdK.OJ#>,K.cK9BlrO2OhV5D3)N^L?%")0R&K97($+/=72k1U_C$JsWd1r3R,_7uoA;[DXUHVH)G>^7W>!D!m;BhD<:>lqB28)$9#:RONcZ2LaS%JAB24.\8>k<peBR79`"%mgYu6iK:h//Kdau0N.CL@oIU`$=)mf&':$N'[j,3ECi)"o\norW>R/8ml77V^OhO[mjPlD+)J+3)f^?4clP9G)6@O$s3Re^g/D&n%<&@gKJ!I0I"66HN]U1p4TXO">%AqaZc+Q`Fp8bgCX2WA2$Zhar\fY7nH=u/301sOuY#\mZo<79rXnl`'B3f/YKCc;/#L1lr=,U/-%kkOF)NY06"8sk*PksEY@]rLaLWM*86gs3.G=-q^snG:&0U(LK"jC%u;lg;R_Jue6jGKd<0f8gj0r2Y&#HiO#EO%jPAI.]YCT"N:l%r4ATd:\*;Ai8!A_=]Z&mOj$fjRXb&tY]`&,WXra/q,bo%[(:ctAH$F!2YZL.];n-A^$9S6PMtKNBC-_[*8A#KF*PA\D>P:e+grc%%G,I)LA7dG`8Z:CbP2]d)IM_?LY%&:jks@)<]c8,SZ@ep)P1V%D6Kn2JFNVWmn^(Vo703tn!5<"OM,<)n9]%t.X5iOU!'!,O04mh,%SK[*fm"8a%8qBDq]U5pOg(rd1-j91p$fsAq9&i\#"0dj@fX.A8kLLW6KlW<9#I<9W!HKDU]P@>MOFfpY,Ng8iH-RD*XOH;uREjh0%m0(klLUfr![-c<5OeOsN6BW_DU.hIK7%.hXOmY;YAu&+?gW\M@Qnfhe]%tXd;TLCcr'*M@:EU**;"WY6NKirrc:>I2Q@]e?fHaW?%rQdb:q&i**06<6350lY)Zts<^ft"KLk^O(?#RqoROQI_"(aIS+^'P"9SQsE0MIMH7;;+K@G=UNl7_#gH&=O[=3A'J@@0%SBZEqS)%DJ*'E*,LW%"Y(]NqE=9t=!#SVEEOV0c.jQncQSE>Cn[a7?LchcY)gDKqF<<FP8pFbkNKT2kNL^?=IXi?@@pn'HY7XHi1#Pf"t>LV%atNkmb6%T`]5YtYfGPm[K4"e4WBUQ1GM&^Y0\;o3kRkjDQYZL2ms;#\,@\YhbV^\[%NS9Vl&@%THFV-bW$.'Oo\gd0B4k7V%Oeh'%8SQq#1h%RbY4eM@a&=VN@lL=2lI84gd_1??Eg"&$j=^;=2e%62k$ms6DdrR:2g)Enl,JL#,EB+q.Jgip+:@B#fZEBF_V+RTO,q<,%ZScOrd-+8a+O\SOF&"ND4qtX^21A#KAC_#!nuI/G%(#(("559'f=_(gQmH0BajafR1Q1][f<UPS$X1oI.DD922Tbc-mD%$gU6Z2t%-2BKe2._)3&+Q2^dut]>StYS5k[/?eDKiJp#*(`,_*BjRKqMW\b22_BKsKsEl0dfm4:aP^gN0tOhT^EhJ@4qs76M-6PM(\;VH3\G%g>91gC2JkErWW3):f.cPZEfoEfRmYJm1o!?Lhq47W/0WnrT4"Fmi5i?<2GJJ.b3<e5K<kiA7`0T*HNk+a41T8m7c?_:7]N>6bBes%jPc2oko!YgcSO):83aT=?2`G>A&CcYqu6E$qDFc@f%Z[0!s>QDrmh1'3EP&"h.,*Hcd1XDVbt0uhW4-D-3'>g]Al]2^pNa0[/)EO%jn.\5gbr4TY*VLWVbVYMS$.`s%3e"p27M5nfYG&P5BD1Js4hH%MYs>M2`FWFHq=8G5BlF#c>K`ST?%*P)<olkE@4CLpWe_(cp_6e%MYI"thUk$2"2!m9^L'bH:L:,plIcES>e=G=cTFl?#J'j0a3'[=%b@,S+\SPu@c*@(*i4S`Yo_GZCRL5GrpdG-\G>T:]gC(G()o-N%4t61_58c)@>-'A!QHm8F;^[ml.lI1P;!mN@+J1h\=Vn,J2o`gO4*>eF8QK0dp81iVT[5R=b"#7>$t+bXi;*makXOk8Q,gWTM\E7#%J&Fr,lfHjE2T&0fG\Fcchq7epIa*l&=>J&;1UERUFI"^pVjjq>QK(G=4`.]X\s%NSY^^Gu<AN/q4&._Y51Xb73eb#!O.BN[BWY[o%T?9rRqCV5O:?BU*F(6-2N5sN;Z-Ai'`G&oh]fA=(RsKL!q!98]qg0u"RL2h0a0IY`,e*&0T7I77@UrPT3\o^Q%WnLA\!4$(k`um)%UiK@CN,OAd\:<Z%G)_<h6e?I=XTI<6mdub_Qr.\ig="5U3T=tc._U9)qpS-k]r3tcX]n/)kMNn2`c\t/>oo)Y$'_^-qu*Qm`n/n]%c!>'p!*srd,m+]a@>%ac@fQs!be'(8o<T=,^%V$m6X?%X-=*MHo14^#\8*%*q7@(#9fTj:)N#b5rjhN6B+08ZK2!tFs.ngY/1le%%-d/pM%!+!JX47fch[FP@qr2):be;m98)0[dIf:4%UlFjrd6mL'?N1V0^mAHTD(M5nm*4>F3(Cm#6'lE$,N+eZ[Z9s/^Xo[*:Gt&=%e/MTKWGHToe9,:u/.ZlAFN6/@h9EVtr?gVo""JcQ!=cKo9/kAhF-"/n(4Mmd`=WdTcc4E!(-[i=rYjuS1-7ic2Kc*ocdU7E9!=jf%V17@BN)c/-OWS75V<tZ,.q_ABQdM;fkPZPYWKCYoc_G`%j2lujIbQnXq"2okVEZ^umo'G!h<4GD=h:nPg5Ke!5/6!=HefR/BL%1o%YDE;(/N.r8AXO>1_e>5f!1B-,\(G/!7dIAS:C4V0SU@l*/rO+;5CVXLdY=@)\^opR9R(-c*Du?2+pYmmkC%3D*Lb^Wh<)AWn@,-s%.jn9ejIKos"t9aW%8i]OKO/.MK9=%M<ot0%\'smNf!SCbHaK?C,8G%V[+t!0N/SqU@UiW52f46sjo,h#35W=$"8X?XS`(r/^eofj%2#+c2=>Ch8K0AqsiPeZGE%o;`30hgMlDCk!?)e7q:lb8?a(^P\Zl4tUh.'r.&i^h_;7tj-XYs@rFUD)&3Cf:1*rMF1*6j5lE&@C.%j+XHiV4AFOE4"KTQZ\bu7mef)3Ek5[)qiNh*3H7j%C@oS7medQ8*g"'X.bk-]f8d#0$q@@_^oI1*-QbjoifMal;@A(H0)D"^[na"%!4F39lLsYlC!>cR73Dt!JhshE/tf2[E+q[eIl*W`A%!tY.FGSHa8+<@\'9Y'bJX65C)=3iVr+=n\s9glm>M@&W:Rp2SQ7*1aPPDK%O"(au@4M(\A)fST<r2>rK@98VYLCorBOb8sobJYEf_Vrjhj1L/SNe>M^@ouo1n%mV]enM/o3p)-duuFHY@aKcbGs+6_XXH>g)6dF%\!:FNc4p,'[?XW*%`Q;mBW#4PDj#fK;4d&-I+:P%%[VnJ0ttDhf4q,?:0T\UUFbbG8peTGUgY!neNt))JYVX.?R2o1Zg))p%V1dD%@S8o]Tin/WSSd-u47[JdA"QsFaQBg7odWLB?^namj07pAJHJ(i@q-CCHcN71hC_F&f&q_(cl(iS*Wqg#]2C[I6tIC@C(?,t&&/@f%'#4"rpMAWu0I^cXO\tE`^oiZ%Oq5<_2uues0(gYNDO0)rU2?a3aeC`%rOQV/5F@FcjMUFeroA)GnWa:m,1^eJ(&4)S25hA-'-oqm%Y^JU-5$ThhV8aNA4Ntn,V$Aq#$S95KXPU8HbEg?NH1OgToC_h#B60!_f2":HgcBn6AT+"W]&=NK"4\>;cCl2K6)P=Ol#Z'CB@&BJ%EX"OG__^NQZNV`&Tc9Rh2n(c9*4k)HFJlDJ-d88'Sj=aZE[Eeg__^LOB+%J#6T7,[Xq*rT71S/C%(cF/@f0ql*4h:&b3=!2"oucC%j`QE2^Nee]cd??C<Ng2`^tN)+4j^$S.5nJ1AXBi[k7aERA+/*s"r+o(a6.ru"q4_rkoDo_%CYZK6##5kFJTeVeN>u6N\_WEVhUQu%1<]LtrFor-oVPn,hQs!V(uI1IBbV%Ma#?%lA6@u!g[V7=l/jG@eJOK6d%rdB?[lU^oq[Z<>R`hLj!;l,WQhj*ob?+\g:fY9,VuUT%n,9?heln8CgD1L:]=-'E2E*S3D(J'/D37FI@VBh@@t?q7P2/S1ro[H3]8c@u\+'#6fkkJ*eaD_KTfR]#M.mGZ$o^Q=G4Nmi^eG3+%VB:D40l!q@9#U`&.%@jaHe9AnH>>VgmEAm[WGROWgrLbi&*^9+8l@1[=\lYkaVk3hB]D)<&#-UlpV+h7^ZNSC;(#mR4+eNbROpL*%*a"EUe[W18oD&/T(JMnRRE&BfaFD%W?##LjerOnm^qc"n>_k#'D<t/=km#_B0orNqK/p"i_hdu<#BOS(HgC;!nb2IB(tC4YBP_o.%KSHAhnB#?[GSPmOq?<9BZPa^N0f/6V%1.`I5@Xd8D7i.E3.=Z+rZ\5K07.;PkP]X_A,Wr!\QVSHY0RsM*VP477V0aP1f+i%41SBr%9;L:[iuQ$e7W@P8SR:RVUS8D@HZt2`HY#$BQj`T4?jsBpe8K*[1l>\^8iNW$NC^;4$H3ihdm!Rj,Yu'[V5Z[f88oMrp.%nK.hcek%P\2+3DR=Y(MFi3,,H#SC3PX3EO0"1\rd0u8jNnmIIQatsdq=o:dG)bfdZ6kna7XME;[R'EqV9N$ApHS355+DTEU\3PoWbYrr7r,9%^-DVF3):nP(T*Uu?KTnqicsm^aYMo=(<>^iGTN8jQhihXYu>.XA;52?YboPWo@1o-dpOKpHXuKRip1p*8*8Z1*gpobl.VZ21Xioe%^>Gtn()*M,<7eq@5Msb1d3:a:gkN?niQumojnF+#HXr4m<pOuIYFa1U#sC$G)6$.oS(8h%m(@e.9N-q_;%r!19$Wi/C]_6()kNWW%<cS\iZLR^#0G!j1Mo?9ARPr<ok]1=6cUke,(<KCh>W#Y95OVBR2lnNl2kDQpT8(o"fqV'BjUU*kZHrriE-d"7Oi(;memREEH$-#M%ZaJN+aLo*(Z0S<i,YUn4'U"S\%*VGsC+$KDXY85C;4iiNf@MWUei"Uf7(p;Pjhkd`BeUcLf(j:Fn$,ITiT^uSaCLcW527t#eb8fX%__P,&QOa=ZD\ec!_t2j`\Re]Le)nPjX(o"8eX.m0XoSVhj*\AcQM=!AhZWaoUGM4?Klsh!eLR4J?Yg'CjFD-)jKhut,%'udk\8?A%b9(TopL0Fq@7)OYWY5K:i$P3Jb?D-@i>Ga=mG"$Qa1eofcq_b\hT/lr9Wm\CKEKc3`^`/[r]GT;L":_ZlVI`ONo;sbL;o,"83`OH%1mq(s/$h9k0C,:Qj(dVAmg78&^-"TAiiCNM6aSUf#Ucl`[@M:M+e(6td*B"p0%e<[5>4/h?5mYe]/EZ`(ugmr:f@uD.:*NSW6tc*%LDr$Ihu9'97]JI)U52G=N)Xk1cu,?t,Lr<(D2lnN)6*LG%U147$s+6ObpXh0eVl7]?d0uDp!l_k;I@t>JZ`+&/b7Ni(Mo`QF<=na%#%Vg*Rq(@nes(_T0%Ps>!j"!-G.+Ah3gMi:;J]C5E"g`QSfecNH[fUDA$\d]UYg+!ofcq:>ch9lo2N4\YJTX)iD`kOX+mBJiS#`8%]ct>$\^f_?KSN;bU*=tj2;fW\@M9MVX'6BSCdo4:+F=Q/$tl<PCj!$aZ(r/*(ubH+21Z[h"BVnVGD?O=nUq"U<7ql^Lkp%)W4gZ<%46((bF'JaZm5P"BBjpDmakjo"bP/I]eo'.7$Z#Ko>I_t+$U=#2XFC0C3W?S'Y]A+$\$12Mkna97Q(#\&mW+m@k]$H6n+[=!^,!7^%[okhrT%^me-$L]l.-gEL/tY-gm(0^Pg5l`TQ-8Ei-Oh.,B@"<eq<^mTZJ4[g)0Wd@D#ZRJ_sX/3Si(uh]XbLqd.G_Hr>Bd2fiX`i%.N][%G!#TsYf@F_'>UdM3qp<Ld_Q>R\%LJj;46>mbo(]HG*2^Qn58&_p[ih/^+&MeBSP>]fDO%NX+.nNIJ!/[I"tAJkGJ.O3l=/X%i'QHojh1M?EHRspX:*Y;XZc,We\e-Z4F`4rZ+Tc+j7gRVGkT<.huEM$1pY)>p=K1G4-)ipk<I"8f<*M[UnbCX##ru*KX5d3UuD$>%k$+#6+Le7`WV(&22)1ga2b0/35:s(.m]h(c@Ct76aY3Ue*]sYhW]@Jb?NhL-\XLK3Ecp)S-'gB_S)ga'g`nbW([bm^Lu`M;%.6Qr%fP#<Ui;/2cq_kcRj;Pk`?#@5sb2B+Y2l`Ah?QD<JQaI:;CS6*Bed(3U'2No^-tV0)EbXSt.Q*%EDE'4_I5B*E)seaGc;XUK:1_o)%f`@p\0tV853epeo?(<^mVQ4buf2S?317PEV!&B@-S3EFF/si`?f$3:/FR?cmdq$qX1hEPb&5nih=-lQ=*2>Jb2I0UY7_RBZbbhGI%S,6dY/@+LiPLX6>Fg9Q_ZK^Xpl'cW^-I8RT=k2(!A$aIXX'=DO]g&Q6]"2.X;pg8tZg$aql,[:FRS?kmIQT8>c))GR.Es91Y-+bD%#k,^bFEL<;^/K:3Cq?%ZfLVQPS/IeIS$$2>At2RsQV5pka/X8?>od:BRs?nt>qXsgaD2d9c),:%)4>%o?!Zl"`Hn(P2Vj1hZSTb$%X';:##!9/-\s@O$PhC.G,4@>3VQ2f?6Yd5j.&H-j+)?R&4h2Y3RD/RsU!mo[hArqE;koU'D'(?g_/L;+T5G)bcAp7(-Fg7^:>m(f%>tfEK?%[;To"M]Do5p\299iUWRs>pS=O_5>e+ZqXqu+(5T413T\u_R-VZ!HAg#&VaLUiS919=EL1k60D.QNH0WqC?QeYNN=D+b@;%AXWK4d?Tn]M[2mSUZ.R+ggJT:Eu/J*pdKDeW8tA<gl8gVUhT\G]]QBU[]KIdmNtVRllG',n]BfrF#O5ogq2cfMDQWmk&+pp@]O;4%k$#StVS2,pMhR)Xe6[5U2:t:(^AEP3K*aHR`fk!^fU-q"p=bG+7Ioc;b$>r&]AEkp*bT006a-o-,gu@$h@j>"A^(b+/]1q^7Q21E%S+)$@2Ar_DZI8/"_@FTfO\t:3Rc,)BClQRbg>BLr?mt>HC!4Cah+l<?4g<npNJ1,Wr-a<5-u!KuBW/u/>G@gGVg7Xt[CI6^7HWY$%eB,C.biW$A3-@:hml;<&/R,Zi3alq2mR^Z$F$!M4A/C^"[,RB''5Nq1bIsJ01TUp3NO?thR;7q)o"68)X3.UEWU*iUO6=tmpZ,9^%ae=P"h,;JIY6]8\G^-E_lgOPjJNC3&AYt9.)_pJPW13e+>$W`7mKUSd?^kK*X`#d0XF!'Lk2R<D6o1k7`@QVQCh3fN!nbecM%"Oj%%^o;c\^gn?$l<he)S?/]<%>eA@sAnnJP<_YT-N]hQH*so%<q41/#U)>DD:gee]A^+L:^$bnaUM,)k-R^q(_5O"hE0iBP1:.;;7T2%VTU@Ph3?N=%&^l!Y*Qu4]YV2X%<iIb2+RAhdh]nW7e*`bZV.BJ75_"3]M+o!qeEW@h=e#7\%ef>:K>Ma>an#gXgD!hbo.7:V<s6/%_*$fuf64#eXHch@eqG%r^E(qf2$]j#Zpp0-/^p*\N_^`aToJb]bq6@`L,,bfN>J_+8RgtO@N.rlbGMa>@bNmb>aL9Tc`sb&B)>h+%_gV!`Q(,A4DqR?b@5`;*XQ7R41$m$e`jIU'&l\_Ncq[;B8AAU[>t?nuG1Qq>>R(WW:S\iIS+:0Xj18H]iS(Uh`m&MZh"`uN1g>gh%`-#e>E?.Ga9N7H1f"$s`:0M=C/TdB9\d[2IDoujBh;clI%ChO<-J(DH)6's`EU>4AJCd![?&Kk_H6a,g(,"IYA=00J[(^/\X*Yq\%03imR,N,K?0t6WNSkmp]^1L73>l!otg:>YDeB=@K[c$8$V<5tYo#L&fF[#]+\[uhKa3UcYlaqphl,1'0?`TK;Iqm]l@5lKF?YfRQ%ZFq+seU;OW;(oLBZBt9RddZ*(q<72Lhu(mV[uY_`Su][a]X,AiT=7OoBg_IMngE%]<^,539p6H)QK+f[0:L>Yr9'!i?X<T_P_@YY%q'XYg.I!%*K=QL#mPH40L9leFf3`u?qWNCa8"!N+#u3DD`Yt%35M\EUpsFf)B>]Y)l!<C@.iI.@A%d5<?r_2'fD'Xj<2O(&q:O];%\]*J%UU,_m>!2E?b!M$LNrSHo?**fsF=3\Y43OBLDm(c&LsBGke"`fudVdu4K)oi^nbMVUnXrgpdj]/hq`-!6W&aaQ>$A'%(:1HY%I#YcnV@7Q\Pc$OLBe3ptUSc4\j6&o49\XlVA=ajo!mk\EO@/3q_T9>.>%a[k#H\o-!4FX4.rC7DFD5mmptB2(OQ+gkfk`CW^)SZf%<+l,#YO>@2ia\WjgN\pRbj)jjiO$1TlU<rpG(<`_Xra.F1PK/t)>KSC<sS>(-Lek.)U#ZKr9gKW[q6;_f'M*H/SruM6Q94PVPScY%GP1,UI]`1$e6?j0[L)A^]MYlhZWuITmBQ^>.RMlC.qN1%<O*32F\u="I[IQFEd)Gp4C'ITHN5g,)m+"s@J8%6r0`\,]KM`6MtHTc%jfTIY2kD7%]<2isoldk]::pLEgWF41_8k;Q<>Pl;r,&dpo&a/&>LeP.J<'rKQ'3SYSZY187J]lVnlDlff^n&2a\Ft/G-=K9[Euqj%44VC?8#-1r9a!R;3e+ne.d,38*3/3ADjAJuOJpW;1CRl7hd5Q^fm'M2`NB<Nq0oSg)VZ9]J+n1D2Cb&+X;Mrh\K#7DOe^05`XWr5%`:[mC72p$n%i_eSgD[C\0,%t![`nhh<E5fnM:OWNFmhhl-jsuVJ+BC<JDK[Ra8tYBJUQ<)^pZ7RF,SLX!Og5RS=:u9YjHg9,#=^4%fJWtRcpf'0$ZLp-fGK#UScosXF*^e;0'+%b"lTF*V0r5'Gsp67`0^&f=Vh%`0'0/,_Ti!V^/=X;cfS+h<bT6ndVkT"r)16u0AK5S%jf?WDRJE\,1V(8@jJ@5+ou;c0C5D;Z]bsrlC?g0EL>V8TK1rG9eV4ujY@%1\:t+4cf,NEPC-sl8lSmTL1oMctHEZ5q>Q#nK%97JQ%hf*dB;h!i<p\G?6eZ[4mD?X/_HE1CiQ0&D@op[k'CDLU&R)q4\7&6\arPlIaZM@hA1&R>9h!<S,jt1La)#IXSnI_dbh!8%.N]7pb%2t"A.UNZ3Eme%MOkiP?ff%T!Hf-2_^#5@tZq-3O$q@3;s-b\,Mr&ls[]mb+gLpP0Jn%[ImGUoQXj.#`lg[[PB=kr=%4Rp*(Z't5i%^YplUqC4>^hs35V;EKlGT'Tduq@d/kl8Lcm[GANF_l'dV8Y#3T^Ys_/\Pm+_AG>q[PEe&,]SF=-r>Kh%1%4e)k3TRlf5G>kj@U^C%FfKV>=7I-f5/%oi@s'cm]mdXqlG?S-.r!.QrJ'4pVe:MUHi8]r$K`+:F0As"B%L8cL1UjRENe9hG]PGYS)@VfEDQe%hs4?4:nPJP%Dt<f#`jo>qfR8-G*5bB!3.t42Ds6'D2oPaHP:sgRq\Jr&NE8tidX1qI)q8.'1Zc<!h>FD/"I#kYg=@QUGH]nC22?G");OO:r)USc%grD?'$b,MOI+*AIHM?r(GHYB,8pqKC=I?.XHi;YE_q4b)-b.cHGVZqgQSeZSILVH%hWi_2a2YgEDtpG`Q,ri%p\G=Xg[!I&r-SBs%hs*.Shm.aOg*%W;][s>>kG^HhERK44C:i!'^.21mDgS\FBuR<&X']A>ka;,@eLYNj(!J6fU?egX3V$Lki<cakqUia\qUO]%p"[ST%4c3b)lSgl:Fr'iK%1b'jlh4"nY@%$Of&#]DKXVrq?GBo1U>d16HKjb['#\!@qp_.dXTu=npo&/T!S;3ej4\o;bdBM8GcuS>rkueC%!L3(SeVEhlijZX3&!a8T+]cT&VdR%o/[WJ<s6._kJ1ZZ6[laE>_YHF*?>[D[&DFI_nWCN&XlJFll/pM4mrk$5(6:5[E+(!E?F]dj%foq,3j4V>89A_Wc=0>ji#+kk6rQc:C>CZUYa`_[iHF!M;h4<X#lCXurK5C-Ro&.dYKB2"1hjri]V$fJ4[WcREH1C?YO3,QQ8"Z!3%&'V6<jj/;:P#p7!ge?QfqKbAOGLG/9p?o((-%B9L\sWDDq>E)>/,rebE;]UQ]5[]Fa8*?fIl:'Yr'("!o:M%kOT10*SY(?n^)AUT%4FFEEQtB"g(ChOZIJNa8eT47$leCT$\+eL.^RoB(B:e!B=Bg'brV47[-^P@]8iI?$DXkT7_md,+Z3TRmPpKSd7bZVN_XWt:l\gh<%4FBbD^ZO0MZV-Y"Hn,t5^:>V>=$StEc!(<P/mhr>&1LX==e#s>nG2/6LJ(EtO*'L3JWk;ACKH_ekHD=XgLl!u55q+fqT)@YDFUX1%I_Ki6I>t^5T$a(H>IXT;5Q:WTa!K*X%Og[i8p\P@lBS!"(!eA)!7BQtT]i^hl=T&8]Bqhm)fnNQcWknnC1gshD>t#BD"$>T9=Rmk%n\X#Vq=g8bX12s:/M>I&d((4,5@:/6%o9@k>cet&Im!LSj8Q)\moOD00)jO1\o[VK=J4R/DXT0l\M%TAf0eRX#7_s_pYTW8e8i.c%hu:X!l]DkX3u>ImiHBsVgOHrR)h`!LmTe8S?]j!ApiSIn]%-''f1u(Zop&`7GOD+_Dsas!5<$'cm&umhrMj)U^6LlML[Qnj\d>LB%38)&ql+t4krj5Q@_<QZ<KC0i4Wdf8c*HqJ0qqaDs1nSZMhg8m[dm?cCnQW;JqoZl!eQglbQf@&7[oP#/fKZifV>S6e%[&%ib1s[9%_.5,*#Q=CXr8FX6YP-\."o7i]oo!mLh'VhD&r!pAq7\8tkAZX>"q33+NlgDX4?Acu*j)3Ega[<,o'6ZAHdSE8^7WKMDs[><B4%dR%qg;u:lIj?n3L7!%nq#*\A:=3g>5+eAQXBPmAi[M1]=GY*q>A71UC/``0AggMp>eR$h7%U"<#nK*pS]$*OBjGd4PH5uMek&[E:qH"%ZG#@HF,TjX,/:g>rPIObRs.*:bZ5V3N[Zp1o<c!rl12<sZaUFYr[QukIFfM7^3o%<L^Wq8d2F?F<@0RbP$_Rta2kmj]T\]n&+2'n%:N)37q"50de#UID<7^?P^+Fj2kh&:.g94<*iYiOcq/p=5^AIRt;Z?=F<*'$OW+$:?`r:AaBIeRW^L6g.<;ujcf4#`CfC+9R`bsos%^NB7"q4Fe8@JeI7\,:&K@3[al0e5s'eGDbL%],pC=[1U(F?b'_\&uhi`8!9&QfP&m;uZDDm6)hUii.n*jBi_2nS3ROaij(0b?$?.%0A"K3h#@30@R3k.cgUhXP'aZ>]WBYq&C9?2Ejh]%oP4dhQ&iDc?F]XD7Q$XjP&DuQom01HjTXV4Il:E)i6K4)o!RX<I.LT3:Hkt0%;jZjnmLkq^*1@g>4E;_UHhK6ZZMt:<c<[]F*]m'H&m3uH8\$^p/HGu=r:b/a4Sd:.VE+Zti>3,>m`7W)5<<KT6@.Ve_E0A4=QV*X%G1!TKhd-8fF4*oM`0]#6(!7NTA%1mVqilc1rcN]up$nprns)nYajk4<]:eWP&\*-uV*`p$F&tcheLg4R-)cW,2ntnDg?rr\Nodug%GhL8%>CV.9nZg6WDf71:D`ktdA[8X_UU,4B`DS=hp?@^Pqj.WpF8M0=N;_;S?gjMs^4,\1jWB>dngI@![TqqI[pPq9#l/,pBXIcj%h<[cRqITW5->$+85h1$WY?V$ngOf9/Ed5U-pLHC#Msdd<:Qgcs7lTPgj-?VcbQ]\,HPRp52KAKYC8\h'cW=K??%`CXoE;X:^Z_^6%!F7,PIC>lZSU[3eX6@$mW*FeIGM$UC:JNk=Vltq=kO2BJa?A"X#Fog3`;`G,7o=I(lCA[feEPE4Bo=E?[_V/aE.k&tj]'?"kOlW)%dZP3#QP]Y(h#E?1`4NuLhTD.*\)e-tdiYjC>D"XQ[u=c3U+#:Igm>`>:"HfJ(<W\T75I#2[\><%^ie=8^>IIFn%@tVq=b%-<mgb_%iAVL$p1J[8g7*!q@tDTE3FasooJP3K8H5'KMC?'tUPHtfUVemc0"rt,)e=X6R=mN>p-UhH)l>P#\AS,j3=27j&gVcfSkd-!l4g%d%Sogmg25d*O]0lF9.MZOI,TQj;^\h/O$LF7#-6KmtVYa6WYujTZ?->h'o_/:0_N4@o3X*Qn]5JV^5sL7bn*>JGNW!L`2[Kl[pRCd1%8_=od%l>oBZhUu\J:+23.h-?I0uZ`X@VP;OWedR!0h*6ec`On^X@o$0kQ.1J826Uoo9?<Gq!HDdHWk9kf@;2Pp@RCYL1AVS.N]c3%mW$Fi@9borC#[jtY9/0er)aflLKuq;6[Ea"VJK`9H`r:ecGSIjl>sRU]DHf]ZLGPb3P@TLq"p;&m+Ke9HgL64RQb\OI9W(ZO1dZE%HB7ImBZk]@)Ye:,h.&g\aQm9PptTI2L[VLOJ#:s4]6ej/FiG>4@V?Ds>'%F3$<1]un9DOpf_t`[\#"2d`naV+?cUpR16tj5*;u:G%(rq7V,L4pY_t\:br''c7-<ttIp?\aLRJqZiCLZ8>bKnM7%=IqI.g$oVgWm`m_d=)NU!##PI%G@WIJEYc>&O/pk[YSl`**;YVEEi[%r[_#u4ZIecn(7/DqcEf*q-<UEYFg=;rVH2sn(4>lID>bBl21/7:]FP2SaGac\+>#Rq6k[Zn(6*2V$Gu)P%qT.Cb-;9kJ5N8M[kFJ%G8=5/rHtiRqJbU0cb??UnkR/:LmgTpd29I#lUlpb$Q5flC;O$,J_PNuV1\=.O4)m7p=$*lqK,_dHMOW-;u1fpf)%K#f85'cc<h0"%?&ClFH[%8+#O!o03=#?F`mU=L<I^9Ol>-F4fFXVo4[f9edPKjG4!3nYd$J-@PG>n)T$WBq([9N1L[H6bX+,A&5'HtQi?.1tj.AM@%3JlY*qOmDm!V;pAAFa_SBqqJ0?`EfqDnY&<>lJ/YXm1Nb/jZEH9)mT37gWFm/()u%1]MgY]Z45,oSuCB`oF[HV<RsA@U.4!%m&u@%`F[seQ&hOaY\K-po23g%iuN!f?@.-sCR$NElR^*LgV$5jm7MNoG9:s^qr>7-VK=6Y]Ppl3:!XojqfKNRLTf<9hd&.<>'uJ)=q!'e%Ci%pPEW4DD>G&8!5Ar[!EV)m%Xda5]^/ogEo"iV<EoEYFY1*;eqNSSWqr,A+`N?/#_[fO)l;>7fp?&[[["%57H<Fh-T3]s=2IG3#%E(00BYJm-n_LD:@e_@DGh=+cYFFYGhZ>TIArh8Y3>H9gB^[A!7hs':h(Y?eoHue>JI-nOUq1,`_fY0/E_\uWIrFaJcICZp*:Yr1J%LE0Ee]YRHhUu1oIoVY<r:Hhq0d`pU5>6DPFYJ8ujG4V?Fhp8K5^:*(O=aJW5o:d!b;3kY:Ip"lUc[H`CNSst#'2(jW^$kJ6aU0O+%gHTb?/$r2<o(!Tk(ELG@Q7DErDMX&5!lpun9>'4Qrja5YgLhKJ@"-F,A4RY4^IiZkI>u3"_6.+J>[;c'>^@X$bNc2Cme*HNHM0Sl%YJ6(eVsZeEK3>nWH$petK](3L9jD@+6UGlF$JSIf,0p2<m7r@TSL_F';s3;s\\"KWh>c(^pOUWVm0@8bl-6Up/*(2'f;;7;ocI^Q%)Y?na\F;-HMZ7W;1#p$3kgp4RH>T]^0d#7*Y!j0%NW8J4>\8%5T4N_E?[qq8gYq[tj"I%=*6k\4?(,!4ES$Qo7j!4s+!2Of5Q&8D%2h)hFq0mR11;>QYIcK,4h7L54H$Ji=j5E+ADZ/HqV8.U:K?-;oP:QTpn@k+2S,X23^YV!JoZI0XJ!/WgK9#X55G.t-U]&Kn,/!)s%OK3:8<n$GK$VP\mYN"/>eNPt0rGrA$k4[BHc/bM1"V_>-%d)(0bP.I0qh#oW>AW`MZFt;_rr&a6m9a1%4>cf[ZY0&U]BmG]`BiEL%-"LB&pT##8l(Ya-(:X:uI(as<F7\b=5I\)Xh0upKrn@3nk5+qrja5V2It,,<?(ClipsuM3pALi>&!"S1IC\tC`gs@'J`j"S>1%Wk%Crrc+bq@@Y[emeo":pQ>J\W>%'jL'p1=@rS\f6])2mO!UZgV-IIkjYJbt@M]Y>idnh"^lkWeM<JGM_6hDfs2=\(A6#MPPQA/q!)%%2M26O^Z,3a,S"&S_p>G\h*7:L+)Z#rJhH]I7JTQ0qI6G)XSc'u<c3D-?"F1:";-]N+sb=tm]:7M0)Coka7.e]r;,J`?Zc+]V\RGC%P8KHB31"JM=hFP"LU)G_[4Cat5$=dRfc48/MeRMNRlu#eK$@Ig?T%P'BCC("C(b<"NAL9UXW"+MG5Y<_]0G-Lf(jFX`oD]$*o+DX%GMu\C6[#NuDY6@*(],ATS*BL7mE;MNbcJc2&$GO7Ud'-PmdTq^fD2>T`>d/&SGR?mouG+'pcLLKr@;@UrUj&UH>gCr>#uU:c"gI+%X1V@0SDJY!"h+DF^"i=b&m@0]E')l+;bF&k6m2HD:U^.adjAs<q@6cQle(4R!>k`X(Urlpl2G4nX.TB^^@*O7YAL,2J)C0MY)L*o%las_r:j/*TT?EGjgU"k'X2V@alf@0<PmUPNT)GQ;nTNcH0T/g]i[70rGBt@=kEd9!;W#S\]<<?;hjNn.C%]#lT,_OIf,HaIAUg:f%s8?t^lfLgR]Y/aZiQJlmJpmC8iJ3CX`P\:ZI/.^EIBQ/W=X&N>PH%56Ml[?<<o[H:Z3qW7J#)M`X3G!)Kj.lr\PdZr\`B5EYK7k-%hRiSrs7%?0_j,#l`OVlg\),q&Hfs[tF5J((Tmu"5B<B/&kqE4pEX#]@SIX,XqD6N.l?&E(`E?t2FZRb%iXd]="RG^_CsQ0kLSpoN%<RZ]2[[8sY4RpXiYB@,%\<CPBIBAF@1:fTsk\FJj[IaOE0)A`fHS%CeZ\uQK`Eq^CB,uE&MnO0(B,Z3#o+0h2Z]2]M`EqM7So+,-%0(oY@s(nI6j*:SOO1s2a?E;r_fgK1OHN0n%^=L80a7fLnN4t>Grm)eb>3GJm]5kp=f:ha0R71KK@]pI5Yp%NH[X2i%k\FJjFo4B\%.f.k.O3JgDg([taD=huG*h-1%[;I$h7[V2O^,EsjB,c9$'-\?#Sn7Q%0)"!5O.SQ2>'D`V`oAG(^=L80LJ$WaU9EUMasN1`f#:tm%\`GB:Y:[<HPgS*ofP@U\4B;$]0#h%7)#!Z4Z(Af1R_oI.?t!nnf?rpePdp$$6OJPpW&t=fEK8%4OYZJdD6CtL9G)62EH=PudEY@[%n`n-5$Bhq4BtSb?[=Z/C=2j(k=jp@mejM5fq9%&4kA4Ut4WCpqauPq.B+<"5A5%%A(aj\IPIB+-`[NupBU!Qr0ht^9*Z!k-9oO.2%EHm^h2DNK`[CH&]kA4UtF,Rr2S?n&lZ7a[prk\-<K-fYi*<4slhSCf_@grCqpte<]]c#-\3$Q@f8U09$A+jd\IB8/Xk8"kfo'Gl,%cVH[]pGNOHI5uVXs52f*S=/"/')<(<B#VDSoD-m_q8J!_i5=?uk)HM?\">j1n^l%]FF!l%dG3a<qMjO!RpQY#^AKtE5Q5SM"/MKC%%pn&)3PR:UH!sKT\2:rGrCZeE(&@_^U8WFef=e_*reC>hkPrd)OoNZ'NM#drUU_ZD8,i(Or,PS^pfC#dBAOp*&*Mi_9BJIuXf$6;%aBb^J2P"1_db!r/-FH20:4Iaiq;(9']baEUoSq*+F%Q<)k%Er,dYjlqrU5L`k<C!UJ,FncE+,'qP>7S/7@qc-,ou=",*uF?Y*0&;%F4i9n<`o0I<tn)Z1V;dSiB'V>4b);c1q2UQhFX9%-^1o9jMB/t]G#\OkAB]/T*4s_QCCW7d!ADM-o<%.2o!];,CSA&CflAUn+5jp%rA](KGjsbgUC71PDE>M78*`q]pV/lH5<8`6J*!C"V6(\\DoVlCs6%GmGPtHF3EaUf5<^(Th7-Zs8Y;ROp[)q'pK;oZI9=8Fp\<#/%V>W%d)q)]hrM*0G%Q?;SIN0FM*^>p.s7s@5@C<@`%k%5CdbU\um=5$(EI!$3`R,KTm@Qu5O$5G6rVXF&LEf$*"91;lo1sl63Vk.R%cjupN]cDmjPGSiH3W/I4o>rtu2/\2LZSgQHi`t76ot,79#+rSUo]>/WrjO8)p-0Ve+.Z*u-)5BkY36QZPP+P<lH@53cVr%W>T>Q7%^A6eZc*VutEU`Z$I/,qnri(@`N3fh[iOgS%:>p#&H:\V@iUKZjfFSqLr7l2anDhh*^ARHhg#md*mIC2GrqG;iCjiM<O0J3?Sc,=E%h[Y_I&dDRtHCq,io/e$!piAJ*J*tIlaH4MB_u.sRr6?f"Ud'r:5Ndt7dU&(2q).JCa(LfqW3OdDVekTq++P7j/k[aoM(ibe;k)H8%<[>P&XY#4dVT&K5j@NeI8`:"QZVDn]-VoUV6HAb9lb&YC`KR`o>>hTljE['Na\;\?A>#bc9A-*lGj\-s$R$:1YR$fT33Njic<<-Z%UWSchJ/"/"FE.saTOm\X7?]?d-ERoooF_Zqa=C=oV<,u+2!GY%OeI>@Z;)1@*)@?@O?/?Upl:P5ZVC8-2*"-DCr`?NFOR)7VMkkh%U>sZIA".2r@&T_ZR4YM8Za-W!me,rupGpumRE;8"8p+9oYKL`pGoh<s-B:H;c?HA!k`bWk:YDU@43$gNdWcq[TLkd!0N1m2cQ4YB%Om4\`(qJu>la3"pG!_c)m<dj!J1"o[Yp\U(Oh&JNc"1O0P$Fte=AmF&$eZo,f4e#cco,I](mDpaQgT0F1(1DJ1=!N0jE"V#4MdU]%omQWt^7M5CR5XImlnY=\Q[P)8;FR"p76/5K*^*Daa[<(&AhkB<Ma;NhOlc!V2K00RkddjA+l<S1<*?sm=L;2OX9K>[Nhh)U-KQLp%C_jNE3VJSoa.%Ug;k8mnc+)NA_8hh0FFobkB"YK'7nY3c9e@aAVg-Q)8sSA.8W:M9c!_p+8W.0OZ'umE4K;_2Icceu]B$Y!]K@VJ%d/-MGOURdB_:uVdAI6)Ci(4fVn]l=+/9+:GV,$h4TumL<WVDX?Y<o'$Wfs$qAe:DtC"+M)8,gQJoHL8FX_!?CBm!)r]eeNgd7HGZ%//V7#W<ZG;DtM.>eeq9+N!-!!_)-_`c$O8!ct&Um_O?FMD(PUhLpTjQGZUNTk"'&V"Ga*.;^.,,`fjlta=1SFRF=MV<*<V^_"+<!%Pf]qW-4DSp_iGReR\sG+k&iTYSkUtX"ej&nO="chEEEVEVTU"B,*S2rc?+TGagk;GjiA5RF",j?hEg&*9V+q'KKtgk(k#:a*82q`%<,@YlEUZp98=6+6Ch2=,fPiUD_SJiJ+maq8B"IljA?3o?@i]-=JFR0Ca`\Dq*_je[(A;Q!lQ3*jag^B%aDBuUUPKCiOofJ)fo`"^%A!C45iT*=hF\KTF5bfWU2MHW"'-EGBOD`3lP:`<06h1TZ$(?O3LfBcdK7O9dKjn]U8de\F0:J,bBgm+meHZLg-;((:RVA7JiGK=h%80.nt_T,U6EUodh2IY]J`tQ5md%pRjm"^#8_87lr!Kngg/!3tG7mZ:a=?\0m/X<)fh1><Y8/8t,(sIc>825_UC1JO,pn\C7$0EJq%5h7k]k@LOsF3O8L.8D)$Pf`fZ;D#6Ufl8dpSI?m6hat(_d:SD%'tf";)M88N/:l7TXcH0lZ7pQ[K.fX1PU?i0]>1*FI"oZf'@%D9%ccLQ\O*-Y-h$M^6m%ss(OZ#"XEPWrhIS"^6F>K+T;e/(*f;3-6VXR4j<Ba0V%qnlYSjVsk/-BDng;FI5nY25;V8C0(-EJYWc_VL^%>UDL*Oqd,BkTI_H@=1,hOCSu<a5^9p4br(U.mtP;HBPi05oIG!+B@'_0VUmGrW',/]/Sdt1/W'OK"`bp[SSTDb8BmsEf.t_XJd%/%&ADR.lp+5"#!<US+5I^K/ZaVq3C%4CRmQ_$1m-q2aXI=FaU&2%Jr4t$@KoU4W$bncY+/`WYutC2o0efUPKBuRCuJ?UOf;lTZH>A)%`Zo7MEXr]'VG(e<[0ue1S'8-ACfE*AVr?[Qa?i_Z-5Qk.FM2_jG`f?(!Eu2`Wsjq<<K0Me"'@_?'Wr0umSs*!)(2EA.JBc!(m.+#%',!=5<e[7QMir^Y6aK_Y#eE\^<2#0.kAm=9;h:p30+#7U5,ErC?GrHeHB(19<K9K%o:?<pC*q)SW_C85A3'2pa-\oON'3FjZVAhT%jD.'EN]YbO:f'R_NO'l\au4r'dhG6N-s%:Xo['q7/pi>:KJkD!;JL?4aF!]nn3(2McmBB.39X%P;j:TK1"_@[+tt/+3Js('/AR?3%jrV,nE6I6_)9e5IH&H"-i6HH#E``F#iPCU]6+3*bXHmiub7h(mPT:sR_!8BB$8><kA4q\WgQ_*%]nA7.XpM(m(DsYqpfX3Lg169_%A<W*J"n\"CEm*so*%W;*N$9[r/S*6tkOD/=\EH?_Kir-,ClCt?BhnFcob2tk%jbLt+Hb84H,-G;U<kg[/PD9tFJaTU,K?N5YhZ.f%APA8+3XZc*SskUh!c-2\_'IAe8tc>$gp46Y3j:%)E#<:]T&_g&PoYW,ATru^=")T7m&#S7d;JNRHfKXO8N>(ule@n_PsK$).c_!E%s'_DTKuR8lMACk'Bd(!llV?i2_@%HG<32AFP>L$YVf8'HmQtGiOsgD<cn&_JJ`bD/j=*K&@?V8`&D8%KP0;F2Ro3@JM9I.^4f6:S%3#alH99_#ar\*&oC]UT%_Q<)a3P.dpGJNl#]h@r\O(g0Xg6k7m+GqQYV)h[$jBshO/\nk'8sA,\Sk-OWl#MY3BF4c8B&UcWTf+1E%=`dKC]-td/5d$j'#u1%n7h&%'(A!2;Ti7bq'Pmq0&nkiZUrhCX"[\]!$k:N:6oma>?BG>^X&KN>0PD)^c_Wps9FREo:je1[1g&_^%P:+I\_io(,>QO/L*$PLZkrsq^jVU&?1rA\jD0O>pPpEPaKFM\X@qcqED9ed3&&:q_b'tsAAI:TeFO>q#jWMAR7J05']<Q,GkS?"C%;ME"*4=Oc]9#JS^Mm+bSe"iPmi-ONT.qm\rYX?4plF4*aDkl\"iJ?kODhlJD7@S>kjP/&lPV"BnKV)dc5p]AV;P$Q!AJsWlG$kYh%@.8@X:MD6s2,%HQb0M\41'\1&L9%uSe1qbs<SPHPbt?_G[csH"#8N8>aEcE,q2g"m.klZT#+]'W>rZZa>RAaieRnrA.j[\#nKWP"%a$#`OQCTF(%\a#A"pea^(`>3al^UMXn7L4))"Ie^X@+>/S<RQ5X[qMS@HQK>2/]HP,L]h@/3r@"H9)_0q@Lu^W0?g7hriXT8D=3/%W;b1,PG.O8Rg41EG_"+K+#GphabE4d[io[)Q?G2+g2,<!2%,<P,Ecr_BZH&-GXi[ca9[1<h`*[mEoYo@rSLtB5!;"jq>B8_T*I*%%#I3pj27-Ek@`_DiDsgc?2^EuTFB]\t*eCCBj+Rd`r!T+6$5Ik14WKP/c;L:WiL>Dt:rqub:9)Q-P=T7DDopb>d<nP<8_UO3e7aYB%95?pH9rQId.7B4'0EQ(qmt8j0_&W-'4Qc_ZAdHs;&&R0^oT"aH-@;(9=a3T;'T<eX/ET2tQW,%@IZ^A^Gl[0nTa9"R`&*SI%u17W%(nc^:dn`%Re)W4aWXI=0>`OS1H)EJZ5";qFZ+M5YBi[iaGh^#b5Y2=c1dJI$P$#N,_:]Hpj&H,G:!!TN,9rEZb<r.&lnYIZ.U\eS%%9a:1(=]^Qi,,E$1s7R7_C@P1/3s.[;1;%k)C*]!'NUWUpC4Hr_:_@6"",]QR=f1%;)Jt:P'W\?Jd`,%FJ_;RL,@kN.CgHW^)-s"%\`Bt]'k%CX?7\ToL+P_9?r%'QM&oirn[ZSYT4H;m%@&Nms"b'`/6#a_\:rO&?%@HY):'nn8]+`o.D?hd?cJ+H0W\ql__t71+3`6-%&=Q^<3G&j[&V'X4/8D[Jn?-F13DB2NQ9u-#S47H>a?&Te/7<U>RDo(U?)]TDJj-kUTb;G>Y`:/>(6K9W0TV.4OR[K\T3@r;*T3YM%?3]j]2,UXRF0;j9G.\kI=n+&LS8Ku@6`/.@oNrYqSh`nbm!.kN06VrDN<'CDP<R1(:<Q??h9<bcT?u*q>#%:g9&lmuXseNG4PZWe%O&U&%9HJpd@H/t8;J[9i@u&>`DJYs7dnXMXaC=m3#f;_L%7Cj>?BKaaL-IVj57.3j(_5qQ3/Iaf*K1du"h9qFLoik/VVhW`Wgs2<%5=hN(nPD1uCdF%kqC3WISB0<l2rW:8$MsF:SP#R^?ZQCK>'@UG;bdi?%K.*g^l:V>,0(7&`*iU)H7s69&n*8;40`d&Eql)>N*R\U%YX-na&E;>-"_S6-DL!#d$C;IcbL8!]Vr28YcX]*u4ae1fkhlbVPi=FM=jE.j5Qa8FL8RQ(-<$JPJsWSGit,N%f+QSkb[A=t9VSn6%F&J(@_=^7)K9g%J+0p4d?s1D>1=2^Gm!dBG<9G2]R$^KKHlEt\e2Pcan/s<eH)ctO(\,kphUZ#Van3UBN!]Z>@74;'=B(#lI"J'-%ia]1s8(?QEn8/C`C8PemJIFJPUbWL4Qr-\V<br=Cp+Di_KnB45<iS`UYmFKbMFg5sK+5&^nL>Bk:kUFFD_+P5n.4BAF..GeT5\,Q%OU7Im"K0G3U6e3ii)S*Goo"(#TQ&(u]M`#>Nt5sM`_@5A@2SdOZWssBJf&d,Di8%,cm4r0>,58:fJIlH<6XUaV(!Q[-%.#T$I^Eh%?ugq=Pl$rM,.rCT-ufgV68EMk.[(#fFZ.j<;n+BC3I.Q^1kAn>'Fn^e<*,bZ#+%)0jG?XA7mtV?-Z-lF'i(7=1FPndF36lh-\2[_%@jcB875ZYpH=c#OPW=pTiBd#+*l2K\EsYKd:j%[_?`mjV^(!DE^('?j%UQG%%I%Gf>&9/_`M/.K^8i%XLJ)UOlL\Pk!7Rm\;IrFQ%CNPhOp^?VYHK?"3FpGIPb-?NdJZO2do2.r2$B4@Ss0T[U#M7UEeX89JgI.'*;,NH+ZO&?o&;C#<:B_Pg:U*.rLZZ(`dA,ls1tnsS%/r+'QqPI)#hi]I9fg(c:5UsU00>/-pkn-::4$tP>UX'\=fp4Z_Ef7hq-e8*"Pi7Z\6m&DedVD1aQ>A6t7e1+N>7T%?aJosNW&uL+%35K2BFV%tlYDTWi,<dKtL%&We/_duFi#W/oVN;:n+Y4*'p`:\$glcdRd!NX=1EEh+kCI-a6-0UuNJ.PNJI`U)*/p;mN1'm$Wu:io%Hs7p?kEd@7po]R/%U`+R7%6l$a?)Lo6;n?b5eU,TeX;*ncJrJ^qmD(G)4*/b2\>.0^sR`E;m(G\NEC4ur\ZD]MV'&B"n9E@8VkRQ%][JUQZX&+'k`^,K+oGl0%aTI4XV-:hK@=]Sco^bQ<5L1XirB\:,Y`H8f814G,ZA?NYU?k-r"=H8^?lI8d?t`@N]of%#<6T5$I;C@%s'lC%*bf?L42SR_C%4"/<8ap38$nqe&\Gut-R:OYlUgZ/pE!ZGdHR-p8-Cf>/7d0IK(YGA7][3dWj]o<<dYWj36V8SSH^E:s(i%u%"CZ]`d4_q-U$a&O;PVAtW1i/+L49QXANG3MI!L+fo%VN(kir@H/AtNFL@P`Z%'&Y<4:)5WGm^?3!PSh'-al_bB.SmlQLc6IgaZ<W%5E%LTLNI_b8AJ@2i.)jZSeeC3hhJ,!7k,M'GS2`:NWrZD*Cr2&`UXGr>Too![f^H%&5QM^@"CAbD9-ht*B1LL=YLei)_)FoMW70b%2:IaXUF/+`?/jl60SiEom8.aY3FYRbkIubG"RLKP,(p`MJBK03%]rZ5>0os[as6,m\)FWEE$Wsh?m;[4n^,(n7_Q6D0NU_X*kkmn%%3MO_NP7\[#>LQjBoI]7g[L_;jhV*WA%_.>K>a@Gh.bdIUZiad6A$VcO;9[NAaeVXXEjU:^!H@_K:igULu%VP(5Ea<5A5c=1q'>>%#6e-u%I?GILHouB/T6dDC9r0KR=R.HcS:fsk'?=B6Jk7k(1%8C1Fg)K"cp\$i,,LK\X7VmmN@l\:,nENSA:?VnK:dX`eXW\TIK=C%ZK"7r9IXgOHmF7&i,)pmMR)7`5$E1C/AfGC0W,o%.l8B0HlcKcQ(R0rI#Jj18]LqQW3),EQI&DOYCo#WI)I/kN3i%^F<.GqckZD^%WqGp]$K$G].hG/.F2D!l[kk<`&HsVR)*0:PopkFj%uj[b!P#@^g_1mg3G"ijht+FS4PVMTo4eN1?rfdQ60ti&#3@7QZ"09]X=.$a%JHnP57<F%>h%]BXTu"c9/d6.UZM639+#sd(/97?k7Nti![6W8b!WeD$o1#=VV:!sENeGC5l=%g!'8DP*kq)rg:$=qURSBm8Y]:3e%,?:%kUl6cJB[/sj&'AV+>g!^OX=8j:P/iqHKD2A=clq2\&3%ErHr;M&[[9II#H(%7)gcE(3-Q;&BZBLCGVI:n[^8gc$VeV%\gj^g%A8lTMp4q!EL4h/NO1<EEL&IMBWTD7cq,kWG-DsMDGLbn.R$-&KM-Rp+OWWT+=jWL`Q]K7/8mbTk,Eg);n,U.1GZ)Q#\)HH2F<eL*%0+$MOISl1D!&;FQ(duc9i<9AK0bhF$#aKB5%6AXM)+7kkScR%!1(^S577NLR4THN'-%KV]o7\^n=ZPji:ef*:I"M,tn9Y"Qh4=os%3m%T14C/8`+OZFa8>UMR0[^ma/`[I)^i6)=R:$LNNggu:1Z=HYcikBu?Je3`;+V%8#g#EP9d@PrW`Oa$Z91>8W=oCS]*t/E%*pVP%&"4>FOU7=/.f_Ru5(o=Z"edFiU4,XSE&`Cqjtr^r/Tm_SROZ]m)^uOLf9\r%<Zhh45!2]AN<@I?I!DJ+qLj^-ECj?^3!o5EE_ug9%a]0Pn)>m\u"5^iX92(P^/^JqO[%?l:gEZ53.'4ogpbmXT)6(KidtHURTtTO@@Y0-EF9"!1UEhks<3&FSJPtIdVkJts,g#XhI)a'B%%9i$F'N=?QYJUiXig-33&4T[dOs-P*,BVL+j:eX;OQaj&]<KZl#K$fdk1V'Rbrl,0%cXs>HR^;,$`2#Lh#K>;(K?t*#eq/A$(QR$%Hdb8%,c-_6apUHdaAA.Z'>u8>h1c%rOchH9k8@o+S@Vo:[EaCs:9UlS#FBQKBfo:DM2;RKPm%#H^'qf\MF_F3F>1U8&<_9[75:P:%2TGg1$<RmajS/bE6)IW6A4Fs_@Zn`plehpo9shGjQCtl(*oR5lJc3[s]Ep$o@p?l;4(oP*3TK*JZUmop*J>q(!gQ@Megob*(3*q<%_p/:!1=6a=/@J_3!PU]XM7r*^$*XLuUXu&l70X4q[F!h]?l*CB/Ne6%)j/QJG7K#fi.-AL)r7c<N'YVnL?%H<FJdHd']:4[9mI!a%d<[qBKl1"bE:Ir!M(Ica5tHa&L/d1;&?8`,+H8:Wk9;(h3-57DSg$H8)E?;2OYrdMR_GT6e[>\&[_kR2#JBV;RCrU?^pdlR#CSA+%\0W`W),Ik[%2I%O<snUWD9WZM=YR8fWm<H;1J=)8BlF9?(3oc,pE&s<LC#UX'u==PM9qot!a>*3T,-?<lltCX7BUPBOMj%/-9rYH%F=\!gE1mUJOB&HkooLb3?cE@[*eMO%kb/U,QT^G<KuP=d-K3-53T=UJWG3X.N&1R3&_d^tJ/YIFqD1F\NJ^==aJ.-9-46s$i:aB9%4@i5!CB75nck)\n(M*aeiUbR?/`09R:Cg&R362Hc/Q,=ecARP+>j1T<1!n\n#K`>5&0I]A+>'m*Rja4M7UJ80Ft@>n$km;gVAkb7%&8@QdP,-3A'`'^1&`cA0Oq3(hnJM<C\oB]Wb[H6cX:/EgB[d)H4:Foq^fK$b#AJiU@*<2SphEpAWCeMI&/(P@$n,b/F>sC(E"aIi%:ricR3MG[G"Hc?-"A^+G#0&R/nI-<Q>!`=C,E$"c.0tY4i7OJH_i,X0&fC]M6a4qO)6q<sNWmKR7;%Nl,+]+(.1N;8M2<nN7T(];%NZ1sIn01qBLO^#-CL.EIVp+$$Wda^u0U>]64FKfJ2F.^:FTEut4sqO;;5KQ%c'J5?TjWBna[?6*e-=Tf)8(6*\+H^L7R#.nU;Md3%hhFlJfsfG`!URls%?(2d+i0T2ZE?=:I=`#q;_\R!VFL32F2I:%js.nJX4J%_%29IQ=V7UD#dAZD$q%`q0+\h"6<19F`?:)IUW3ae%).Fsi?V/TNkO_>'KRoE)5d2cNlEJfp5;o"RIAkDA[O=%F6(\dAVf\V1\I%n+'j5I`YU>'_5)(%H"(R@#r9%eq=O30<!1Sn\?fTW[%,ght8#R(+q+T0l,3uXc;5Vb<?V.Tr1&Bm#k;aJ#)Ho:t!S5&Y_iFUh(^aJ89oX;8']sh+%Up/86/:3j@:rIQN.nj%S7\-40l6h`N%TMh6Mc>4VjFd^iW>Ga^5,g<c6eEDq,etSBf67'"$:PMiT?_I(]9PL5a+rdH$'W"6eBOD`XKg/F%E)><t#$$N0%FH\!TY-uGShP%Q%do"Y5fR7K+PnW@NMIF.8_opC^Bl_MY$3[E(NWseB]hV^Jp`OZL)nc8TU"qV';baXui&B]>5_J-;q2$SoH1!L-J7HZ,1Y>I[Dh2;)%SnfGdM%*%`s'3iS,rj?\p)EEKE')JLKeX%Z#RfhMBo#`lO^tO3I5dfZpkt+MkU+`*&`U:Y,u<(8"O`JO9npaoGV4VA`kXCgJsrtK%cuIiME%F&J[VQFcOD+^-8:@jL&ZaEo.q@#%1g;gC%=DZid<C59#Uk_K'qAPsI(NnX`'a\BIM[GMIVPVb]'7R1J:+UGo9#9aHuP/L%1t64Y"2f;Tfk*[9`$V0POHa^!E'f5mqtP33SgiJ;JUjAk`&i4cKSJ8J+$FEHeTJNlVGrT^M@[83SZ3SpC(@a,>82K;Z=a]&+uJ6l%)>/.2'4kiC:5!H%4B9d*&=JMQ>7Q;TEi=,J"I#(%b,-e?g*-Th8"l/46$@h$PtGLV&sU1.3\A`YnKadi6"Mj(;W&DiE9^G:(7KXW%Qj)LiPcgFsAj#9^():O&>cM('/JU&a(k!$p5>-o*bCf&&gLm?\Oh!<o:7eBr%!>:ZN@eV7G2,7*=OO/1^sU2N(i61j6#HgR)r;')%1pF<=ms[@Z;+W5K7HA3/N0[7oS7a=e24R+(0S<1s>0'>'/nOSdSkPNE"^9jj%,iDoF%B`_XWg,iXu:+Sikek$-CLkdCa*m.["Jhq%+uDSZq`o-I@f&VP^*(c1:BgqNW2h[l7[#VWM+,I-Kt;Z&W&-LX+*]Ki"76[b;%4BSD_;l7gP%,l:?<)FVI5=#.p1B=1+,nPSLf<`%E\<Dl<S@esJbZYurmSmo,$"t+@@Y_=Z'NQUW_2PV",.bal'.*4U52\1Wn&q^'7NIVXLR&-[5id;N%$>(okfO<%De\%b=6c4`NDem%:3/Gk04m$kU@OeOC6L\P<E)s=+TLXbr/5l-R7BRd:DWO&4T0k4(HY%iT.,abkQ`6P.4Y'TPu<B%lK$m$9\""c$u['D=,:m;1o5?7%6o35-L7CsS8HpfV"%<dS7.k0MK:0\/k;gd];4^LR)*#$oScgI7Wr!tBfpM3^.<Ccj8\A6&7TCe`MDUC\")nQ?R%`+]dP?gnmN%%&%5nalc@]2e.8e]`Pf*Z83898?@<qCXZ!)<)#&4@m&Gl,q1*W\,g\!+IH:;YCD+.>Nl#RE,E5p?Du&(Bdq?;TGm7)kM]C6fHO"])+A%;%5H2-S9mcE)AJG2`I[M1?1sH0f-2QPDUmt+I`e%L;*;TjGBVE5dcmsfd$nO-"+osQPNBFg]Pg"N%p0X&ptXYq_WW9&dGoI*%I<`%!eG!8HT(p016Oq+#)GKiY#JEriHui^)poA#hHZQ[U<%D1M5/ZQ6lV^?TfdOq\Y)_FSJ]%,huQjg*]!qs69(i2&RR.(X@USB%En=@%NH6f'q$G_c49`)#WHT1;/D<M*XTf/Aogoo+=At1u$\fFLeV3Dd4Y.6`Huqs!:WrG;/h:!=qA^&0BlrS@.\f6dVE*qm6R7FmKYkUH%J-O<ZWs'0m]V[)<r@[BcUsUW\_LPK7>u;Z;Pjs$.'/LS%g`5j"]H+4*dV)2kV@jMkm*]Q=1X^ip6H7QrR>u/J5TjpNUuBkb=oh51%SI.nIJtW;EUe#I"gbOZWj4fs6giOhh7Lb@!/&.nJ)&1(doVK,JN2!I?bqjK+_)%5lI60#Ic^,8RM]n(_Vc)ii0[FSJ"\M5d'K"!@%1M@gZ,'"+oMcrpc_Qq%V6$;JO!n^>AN2`C86TboT.SI8gO!\lcEn+WMBS8$dT)Kt\XDcHr/*-P@RY&b>E-^.,i7(3ueIkB(@=(-Y%TK0$?O:;?j=GN]71^Y9?,>$JJRZ=00)J=paYq721p;G3Z`ouWb&6e<X!AuMsga`]kIeZZQ<Ql]qR/nKF3U!=>5#Lj$[tF)uk`h/M%5]SnuU]8&9"US/e81g*S8.<9;nS*T-HrNWGnY-e4N\$bH6DKYSP%q'9*5'YF#SK`:=%$u1!AMP:SKnbj`OG)&8,eD?=o!6@aB)>^%@&aT0FUA,[OK>2E(^irWOAOTFS&dW_5:WVKXs30dRPg<b7M<W1r#YHDU)+T>"n4O")/ci!C%H9oBo7r5mXiA5bZ(/XG;5nZ(.nE\%<4Ogim4F?9I$2+02%`/#)$MK4HDp<:VN,>O%ad-Qhk_q@KCde<PYJHhKJ5i+$D8#p$tIDBQU-s^=W,26!DFJN&Xb\=3DGf)?;iNr%M'qd4T94OE\u:NDq!FJ473jVFNq%(S*)VA!]J2DsX;D$<UReJT=0NHF/)$<:5mAI8B#;t'-$3-C\4TpYjPKrkk=)anF/*/X5^""F%N_fgk2ol]V'Q/Tm5Z]<Boa@#HJ,qd",<Rnd%YqS;7KSG&JLT,+D;d#jA=$6@WV(4"D/!TeU)rANeW^&<T@g['U6Z[n-.+jJl3Q+l%%(tM^#XM%o)0e_M`43"ic8<bVF)"`#)-e=CTEYaRKTM4>Jp8jZB^@[Q^.:3,K8h"A<7=L%0Bb3)j$^m$60hdG#.U6=s-oH&%PAS-%r%Wn4U"S36ONPXc'K*\En2E'n5RM-tn&LG"I9hU:=D1/033^i&OP>`f8QNFY38Hjf;fiT0+5t`fHp007MBJ)`.Y_i57VkR]s$o[W%!o`!@8JTe`5:0QqJI/R(PTBi=EJ:!e=e^t`ka'BA-V9b*rtT>8`90g_7smd`e/TfW(+`kV[&f)O&l@-M_OO7YX&=I:ZA=T9]e(DQ%$BTos<)"[O9C)laA1803J8dCYfS(SZL^bJsI9K%3)<%%^18:a>KGkaUH/Qf7EZX/HPbqXliFEZc$BUaG4%O9!F=0$t=PV$f4Vq7s%V#]6V%@)*]<\m(jFO&flcKPm/-;j'fP>4E:)51T.$'^>kBSo'h9_gWqD*9[?8>YDj\f6n6nk!G#&[.2<9%(lD6?Z7)@MRG^$CXaX%`![oJIZYBiAi<M6,2^['VF%<HJ,B_>CuSMO3XN%./KAY"`%'mqW#YX<rH84%)-CHp0I7RO;8';"@`fF^/C,WiF-IjsQBn9MK!pFj%LVk]WYIg#)Z9"r"dG[&BR[r4[+`3nY'ag_qYj/6,68o@@[0hc;[q[RX&/5Zuk^*u''pb0NOl.p85-:!(JC<@Y%m?!7M^%n\k>4lB%lXf]ZWoN7?Y<pWY8bE`&a<sP[`U!hG=GW3U=+N'Lqh?$=cdDJeT+IgRN9ka>\c](3#)h>oljkOqr=EViq%D?KJAQK;_#B9qk!6qu%!>'ZFjD3=8oHT-_Y4ob&F/YfKJ/&7ZO)AuZ<0OWQa?h@C4X;*g`IXA*+/B+264s0iN,1P0"Gg-7nj@O3eNt^c$C"r?."qYL,;<<r%J15023;@J:nW>2&W1sZq/\EDU(7'IW-0CdqEXSgj&c4mH#I*pik"_K0M\XkJWc=40(BS9th2;dk&?l<>b!_e_(?<"1b/]p3Q!NJ*%L++U")n#g3&.lZVVkQQ<@2q)QJQ1A,T"R\&_M&8\3#5t3OkU-Lg+1DM0m''kYF9FG\$87H7tP75j**7j!p$pBjgY[%aXG`/DCWjh%j-mndCP.]m"=sY$C%\_47E"iIYacRc@;.B`nGlDK$8t-b:-h,tCD45QOehn3.g@^.l<oJ_j9m%bb:XpUBmJ93PD#.[[A4GlKekPE%R8Pgh."j)eR>DT>+BU$KBL/N-fL=$8Kqo+<[RD>cTcr*Eh@M54Tf$%^Vj;-QdFHC-.:M7['Y>k^Hug<c7p.dTr#EFGFh<!n;c:SZ%VbCMsU8;^]\hZR"koP:"K%"-EAS$L^e"@p>\lO6Qp^DT3\Y]f=D)#[o*,IQo),B'gf*ZYDEeP6RXr<t&"W.ibR4'3=M*j]W.]'lJ%@k&GS7bgRp&k(-0s2$$kPOlkgg]c1HTs9&QI#_CYQ3)7dosflFT>Kl&d@n@E?!>m?TM/-t5bnRa@;Q]<9rs1i-]$uj[$!.)C?4UJ%gGnJU@"q2.WP:[(bc(5-e[.5b7"%D!JAMInX9k7RVGi&37nA(5bF#jeKO,"f>\FD#G6K,p@u(7Yj't!]%'O2B6u(]fSO0QgTP;4&%+X32%TiAo0_3P_ja=73_2)0.m:DQpCJ9i?bNDRkd%:U`R)D&[V_AR0[Mh9kLJ9s-hK2_jk2l&q_"Vd]jLs^GrW)es:']B>5<:9j0%>K!4h,eC)^"?l,)L`jkY;i`HmR:(V_CH=@5Za+::bE5ajRa^gk>7(VC$%8e/:,/CVO<VPXFECB/,7PD?pFW+]@YpCq:`4J[Dd3)3%R+AD=In[<Q=`XZ9\Y`^3fiqWLNJOerU/jBr>f[4`Fs)G[P@ReJ9fI;^(fu^]Lnh=L%HP?U9]dnF$#iQZL_fVc/2!qEdBGZid:>jZ%MAe4+]$*^;8RaEe6:5f;f><_rdiniq7-U4>`WX.2FA7<ZkIsNU@&mSTnd%YfKSH<>5u!cJ&.%[bR7;`hT;'.)_+";.CE$qRGsO,S%SAe`!>hkomHN]4)V][U]:q3K+%Q+a0"u7$_9TA&'CnTi9O=2oBO0T+#7_$f[c34eX/5cg)1@#YKPd?#Z5&6g'Od9a,)'NRqXolX0%3L`L<B0dii/5NiN!qVn%V<*Sr_)[.)a)=J4SXsJ[Rfb6PAh[.!'uU84;\hS1$4Vo',u^^h[><I-QCuH-jD9k/?2RZHjf1j/a\<(r%nlZm'$sI2*od>X<F7N!RKk#JGC$d:^M`P3Z4B:02T&kAp9XIL':,kh6m(oudb(T7s<.?;lRUWr=^67g*%[pOJNrBZaN$Ei\#oWSF%,RUj<!3L)OT6!Sil\LOl-o@h`gU$lg&ZMAp%fts9b^@dFca8(u*/dcfBqjj)OPg;C8WjuodM0DeNQ@h[Y?3-eMer;^@Ns5R7K'V>%EgIbP.0>K,RZ:X!-@cYqbp3O3S6R?d_<?dFLYh$K>Y?,/T->it$LJ-<PNI>8;>gDYYrs;h1L91\n2p9S;%Rts,;KGYBYlmo,_Hds%":a&EMA#DB(0uZA+9q,PH[Mo?5T<;P2Hn]6L8bRQ0d:BA/=FicCDe;hE/\B`e=PkQnA$".H6JRoR*CMtA^n8V9SegE)7C\9@[K'@%81Tf!a+.gRdJ*iZ&6&=4$oGH`=9]a`7O"C8.StJJW$LM$.J&8nLCnrZm8=a'JgHf,+sTEo[H()_$R1=kW"ToR6Tok*ctjD=cD!$3%,sl0">ut.!l;(qe-e7/uog"-4ZCV6uEe2bkiSTmaaYIE@3V4]lGU"?H]#2\Rl#-_Vd+Hu[@'nHFWu7f2's%*e\E-Z>JKaK<GsE86%_W=Wg'WLrF_(nBB@a'q2ceE7#.)gjPhE7etGY>IMY_nK1*&PqC=daCqa/h<-RV0/iXdkYFVOk%4(/$cE33bB[+g^Z=-ok6FCN5'H%`q/?Vj@>$5]5qdlep?hj-7W"U6Z403EdZXg:d!6MS#2<@o9:5.`Ih-$^-ab$\5,tlK:r9UZ[2:\d[M6t)D7o1_-7g\,77fooIn$$%VI4U=!#/"$^SmS]XBl]8#AU9[=?]9B"&_Kg/dns/B8K+)o\^rk4]QG]Mm?q/"r[#P$h]djSt=)KZ9]8I<AXlfG!s]O7W%.$<,!0u%0Nog+*4=G]:2-,2%.MkPXTt$;_3SjY;e-g2Vc2@;2lA`)ABAN"j*.i*`-\-s,ZF8:1r>Ab+Y/mcHZkGg,fF_fF=H=IO->Q,_t.\@%dq.cVntjMhYelEuVbH^Xq&)o[a]L@4harOm.&"uIPp**Wmnt*1iM#T(GgPOCZ$)O!*Hh):.!cSBSNR/HDRQe[!lKZ=6$<"a"k2@6%;_^,^\ci.nV;J1fl^P"[?UM+l%L?jXE*:T%;uf7FTb%A'$eWnKRnf*@!r7Z..q0Vsi8?k#TbQapaIUB/k'-N/2/i=>^sjBV5Mq_E%,6eDoV$-(06mGeX!8tSeUcHW*9&OKKW2P:g.ioPH!t"XrfgcdsBp)auROndM-=Ai1.[$oeZI"irNAg\EZCsjJ:iOq=.C;94a>MXN%jf")+TU;SeP0('6PgogA=or!QM'D3@W+/u4Dl\#S&/p*E#.F`RH<Wg-E&)6YX!M,)<la43d+DKd(?N,,#B<1c+)1s'7@#aBDI]e,%Fe[8"QY;p=KHN6:KTEMdD8m]"56%6aeH8fT<aLAVqjX>,$h%PUZlFWS:bB4PWg0(E:f?8ld%Y;&)O?'Q`V6WCCaeW.CJ5\7!69D!%T#D4C"ci!np(YnQR]<0[b5DWOU,bp>5bL"AO[Xh=]i2rPMtSsg:hWlcn.-3]T'9MeW1?I39Jd-&4_VJ:!Ae1a03ps(7;nQ9?jJ0%%=rIuL+,gE0dBJcur1+-o=h#@W]upI;]S\iW!f[rl/bWljJa6@c1eC[e$M!=27=m4>.+f_C9OD+j:^6/%ib!!F<1D?U_oX%p"q!c8%n10*OQ8o0EMK_oN7m7l-<`t_W`M=dkXXm;%]09n,-&C`hPbf\u;Kl/.+GnKC'1[YI@`D4g8-ok^&_ZN8(37r,=>>>KN*NCW*U!Y9%XSr5(W?<Ap`QqX\KHQ(;bN]`AT<K:VM?kX"/dL6.?Zo8)M8BHTNqK@P^do\b'<(04a!Urs68?L!$72KZ6mZHH2&"kZOT%L``K1D4%OW"hB8E=.n,ZNeU#WL!Q:mRa!+qQGiheBjU#\*_QEN*3!>en`%_<H^7]7_h(YLCZu!!&nu%>0k[)f/=dA_,$e#_0/h'up)aFH,M`%VOhZ>:p'F-eCfG]_Z>rQ[$EG:NKNB*kaHkdAT+><%:#o670C;79mMMkFZ7,ra^a-c3nmTp$2b"_\V)*3&f`E53B.$3&eHH"5&M!F%D/q2?N.a*J@lCWNAY0[bLuRl^<jV-9A-UoQ?M.JZ.V:U^]Z7Z#ip'@8Q8Db_/CNY-<PAmk".:=F==L-`!JEcIq&t6kL^&qXJ50fP%A`2<:qM\54L#2;#QH3OU2!iAoXW`[(HI]LJ2H;Ld.S`qu%]tI>JQ2]-qEKB`e\[)ULZpShMBa5RU(D2^?9!S-(4nPC2M,YPr,fg@%$but@Lr4_rnVjD@?AHG^.;75TJFd<^kPse!"oZc-3Aqicn,D6t0H*PsDebNVRK\"fiS%"kMXm6.>R!oh5q[8^>t"SqgWm&>D`iT,%&pe/%i.;\M4U5/p"L+[e>n]L44HsJU*o8fJU'"@1JQi6%f9.^q9/0DO7Yl#Pa81>//n)tu@U'4fG-'oD>(MQeFh*g@?Glb5_8n?n%J50$,@pfV:DRdrH7O,q\JC=JW'gF/+"Xj[QN<Cnm<Y$*`3C)&+P5mi\!eHhF'RIri)j(o7e8+_L*/?kIb].W]3l`J.dRsq<ZI!t>%7c[]W!JObi`K0U0R*Y(pkX*,ELgS*Q4Y1Rd8X^Zb`H^!c6AD$["5\u4dEKoG@7(p`S_MiYRK,SiK?K1/cq_a5QOKG/,02goCaR(=%LrN5C?N6e27nFV+VP99><6>_$5MR&sTbLIJ0Wm6O,/LN>-GOf'me\lO5)e+J"<=VOiPAqo*&8Z*,L-c`;1Bp[?]6a(LMZ-13`0:X%k`aZ*H22!BQF)TeS?sJu1ut]S.FVk>]43^1Xu6>2>&GW/FssHW5Q+8RE&`B5!Wr9oWL;q`Ji3jo)6&qA5*6&,dt_keg(KbT#Nl&.%P!W?HN"!m#E9Im9LEmu%b=Tj/AdBQVKQ(c;(W8^kMUDI`FK2eU3fbr7jOL9l2-"rc!gbDH>rX?5anTuf0ER?$\i=h8N2oA`&ADEq%)RLt+V+AGLZr_L+iah3AD?N#rdkW-N5sTQOT^\t>3?<gn%:DTQVZ^18(efS`N1n8#7JDiQ#6p*N7WfA)a$*.*5)CWF5Xie(C)S(i%Nkm0X'!(@E?)/n%VS4`6a'8bs3Qn/'&4e#TQ32cZ&s1c%)>,9$P&uB844Mk>nKTST&7os$b;OcFY%Wq\NlC"',)^Xt\n;:*0IePd%2fO;WUsj:/'H<Ml7)ZA2$8_s>P.dZ&U$*5(A^sMPfc/IM=OT/lM4hY6Rai.oB5rnC6#P?%FFY'Q'F"4u9Or3>588Xcd4<XATou67%6+(FYSP#02eGp$6WPH_6O#3MQ9+2,Xl<.)A"!XCgV8<oK=ubV,e2^IY,sq5,hunJ_k^@PgSk"af/[o:P8tO!7IB5q/%E"rU:l)^j%fDhX/9X+1&3b*HW'qIHImgW6qP;=qZhA4lh&`T"Bk."s/.J41^4Sm[?Iq*'r>5-DrBo4H"R;#MpL4F\Mf')el15>Ncp#SVYTa]0N%Jk_r;CXNoKhF:K\J1c8<C>u=lXC<B=>6O%1s3j*VR#[0m]9J=rX*&WnH4SM-2@1nL`mPa8.NSSqg/rg@TksQ)e7,[6>Ro\>@`hln%hNsW%JsE->5@mu#d6RE6Rc,YRU#8\(Xi>`r_dkN7B-BfOdXpHei6mU-VEldJ$%iUk=D+7;3RlUHO9\uLI66$p&mPH6>.eZMGoo2A%AJdc*O2):6]RsNg(a0kOQ82q+]B4Ng^c<7,6WT5Q5Oe+i)Yoqu$t1FbYVM'H.%RY4U=TP,IGX50+EpN07L=iHHBJXn_4e>M0u05)%Z$\F]^ZO@G0TIU2XgPqq4G?sQ*jeo*o^M4D+W@K0]blBTnrU0T!p[Ng?>#D5R]@%f2+!=-/s=/;;jf-7Lj:h''d!ObH$kcHABZCL%LaWXdX'NM6qZ9PK<#!Aa7%U&`q85is9-8>$;YiniTTFCF;V37@PVWM5R-CNF>EJ2;fImV>B`8pESLt,PODpmr2M"FSr!q64&3]>1%bfGH&.e^eYPbSH0WR1E>:eR5d7^rFJqIcm'JrVVr)n6Me:O&P!'':+Z-)MuF`<:S.K8c$$Jq6KdI,'mq$'eq?8$d#Tcj/SpF0%VD%7r8kC*<?cDRP_-<R$uub\f)!c+lOQ%8KSEGc8\!^"[ei@4B>9D]n9cX<o6Hkal,C%9Rk<scs$18R2AsTEQ/;8E_WLkFcuYTSGINT%fjKAIm0fbdTjt;'Eq$do<2EY@!lL@=\cIh'Lbtlh9iUd8SWmit@LR'4Fc`=iM,jIp5f>FVCTU,b_]@9`1p"Qp,)qn67$t.(4iTP$%W`Q)egpAuE;(KsjL"DDbVaNGLqFFJ0n/.R:]L4<qPnk3-@[aMu0*>-l1Ff\dke^o4X/bZ'<;U)%,OTj64NV]u/2c6X`d7tk,LqtX%h3I7i1r@2O[o7V#TMac6<hVh((+nV9RA0"Wc\W1*U5p5js-6n_-LoQA8e2`=i6p3c-`Y])S+n;@MO^F*r-\=24;q:GnipFLSCLt[%]4jEWb6mTuQ9bCZS$[TLf/Veo5Yc8A?+aUgi*<("?f:;q(8L%eSiJsiJ@-]nE_`Z;CNuK$)2\rf'>m'D0^*!d4eo6U_aI/I!7S&C%7d)WKipbD/qMe>uRbEQ]AlM4X9um\XJ$C/'J')k6f(rnd+>qIS_srk5+eas7$0:>"C'!0d`He5[-'S8;>I:If`'G/eS4lO*CW4I@%LU^eG`(KQSBsBet>'gl9\tiliW9lkN2rMhPGgZX@F:J>>R:o;-e5XsjnOuL!]DF'=@rSbh(4.++<T>ro.Kj#KS0?`SQ'=E:bapm%%KiAm3V=p"Mk9Y]f=KTOuI-XmI2"hofG@#A^+&/V;''OQVUF3V&('+c;l"d6V`!S1%P$Yg_DHt1C7Bu?p7*IB6M`_Ri"h1Xk[>*^2%;m7gOQ9!WS0Ca3n^7=a\(@8c"a`b<1!QKKABmI?U!#QFmUD$DGqss_AE\KM>4BA8CM;"%R)2"@t%W>Sp3'm*(!9`HX`7C<OLb:4_%.JS&rCH;Zj=B$?;4Cg1X'TsY,<sE,4Lk=16Z]k%Lm7HFNIXM0PMqdEEj4<\pmls"%Q_afX-(?MkSmO-(&`;BVEH(F1qpQW7qe33S%),Dg+iRCY=OYm&CY>Pk3Mi;bl!rfKDl?(<']ud53:!<jF/*?iM^.\*U<)=$h/PoRdPR_:Eie&,X$f&a^=:ANB*F&`++A;fC#BTGC%28k#:,)LW@eb1acT6';)*cqA)J5aJb3H3$??LpV$IdA<FoqFe[M`F85-fpnu\?-ntTZ48!1ntF,Q^MS/58Ip@#aC0U>"tdM%4RrY%WtIk#fhHdN1-']?Pp"\9o7Oum,1U?s(2s$>R]ucUIF-G1KFGc:P%EQR'=Z-B%:'5FGOTe7mX2@%Gt1*TRrMD^@J(5WT9KNYYAZ+n%D<OoHOM,4]+G>!E3H)'.R=<54N2IF_@_BpCLj@#F:Mm(LZDDhaXZCE`e>#<3S43Rc*30DphhO^Z4tub$EAr-Tk#i(K_=*[)e7D_^%MbTqS6Wur)X^tTN\k8F0,$&*c'UK@MN,>9:KOGXa764>&1oiL.OI)/D;.(R%S4&S^-bFqHBqc-f#IQ#&KW$ml6I0A"5o:4s7jfFr%;ub<[B$Mo,TFpAo+nm70*;W'S.#IM.Fjgp'*5Q$EG;L<[ZbMF>4YrX"<8[G7MeH>.TE)5dLlQ*ocLNFcC,uLh0mLaUiUj_nUSR`*%ZN&(6;9k/A+)[#i0TfF/0pdei$D(C+qQAGn]aqJT?-msKJ7YYsAH[Q>qoN@Dk?7E$o<(l6+TpY.#8&[-eLKKHMTAQWZ%5h1Jc>;6%5"K[EW"Y@IM<Z=1aYA`ScqQb:V+Q!"#e],M+<EoL$jV,OR>0n+W\@Up3qfFY+:?(V[#clA**Q^0AJ744NPn6VD1lBjFsYJhPo*9;%or?Mdj1&DhK/t6f!Wlc/P(\9uF!5;tPSVobh_[$ZWr0\%h]0#h<eCI8!D^B/klt__Rpd&6"FfW8rmrEEQI]FR!OLNQZ;`Ou(]V^I%q3tQ&QC_BRO:8;UmrQ.B3mC#uTg%\8!]oW>##0WGK@\8LVnrV'GpOYi0f9D.![)&\87Xo$hE^FS*VYs:[Y`Yg-fbPIEaC?*3`b5h%rSS)`W:32eK+7I/Q$KJXFrUBM<eGTH)kKG%T0-[KLl.m*<p]Kkk#;_='-*[S28`51N)b0X<8.FR9E&C5Z&TGIVAER(8U+,iI$=XK%m8W&\_8ICr^("[Pk\\R0KD?^G$PT^N8!MM:PEs>&)(U*e8;ii.ALsRT(HB6]k&k`#^a.P*!,u?!F8.R0n:b>qX"+Z:0?#9.$9EW=%<F#,),%S_1>+cp3AV(t*8kfac<26q""R)L4(=Qe^YqW3,B9YVSSY=(-&5oDI%c1FW'X`Qa:_rN*2CoDK[Eon#L:bGRi$Wc'q6CEX%]Y6!uRtihq<tV\G.qaf"DWiBl7]VFek`('8ZS=0#G\Kml]2!TF*dt/loo?WUJA<n<>U4'*A'.2Q'D-ng!E_?qc>'"5dG#32VbcF^%)+#Wc:&;t6IKgHW_ud$0.Le?4`pZm*\1muX$6-s271]G:R+d!-;+BAY>#M=(Y[0P!G!u_A0YA)>+:"XQW;jk@6D2?!M_.R1j+oBE%P!qK+MI'bU_i[CCV:DlS:@D;oK]#5:@l[*:S;ulq`"8b71Eh#YI&^7?&['?)f?lOj0UC[0%5oD=M-dm\gD1*7<.U_Y-77k/`V[SN%3B=e^Ck3rX`pdGQ^5OY^m_IQdj7>Je]H?dG3/F+no:k/;j+=VAB1<UJ<)#E*@Vg*lBjfn7-`A5/HN,2DjHacTVJfoWE6k;Q@iQ3l%4=eAo$&WFLH5ggt0!t[Q+bMbaq,bb5Agf@+pKB@/3M?RFC6Vh#TVD-/9+>E8Yp--7J3X:LNm\,X@2NLs=r?/;3$iRb#grRJAbEan%ZO;COgA[u,0t]7CbF<0fk(6\RV_jb(NP+J%QCGArKM*L(Wo0GhdHW.dF[j64<edo]nt!d_6Xf&LU)KD`\PSTYMo"FDkSE`OeFh"r%-kU-H9Icf]q,q8i9P-oi<_pnCG;;mR,!LYV+$g%DMlj"jIQS;YP,Y`"a*IB,1dnjsUnS3](Tq8t^]7:ETu)nW6UBE%S<.'/D1IR)%d-EDl:*'\/Pd&qi`e+i]2EkW>&ku?n28.s#QH)eDH^,0nbP?<0[-A&S08<jp8BaD_2$Hp-oPIG5',J/e[4U6KO*iO_plmUIpOa0`%haj\YRe#Q>$]De(_-IdX6BKKMP^/fc0DiuCIE(QmWp'a8&dB*#$#alN;HTe4@j'+90`;N]9K=,].8^bi?GQ#.%]R^JrQbFmg>6pQ%POuH3]RmeOo>cAlTM"Z8d(`[SGFNcumUirX//SRg:0(#!=-X2O/0XJrj&p04hhdP\8?h>6U!0&>n\su-HWYWsLJ?FtDVJ"GC?Hah%)F).(emn[X6gl8$WZgYMI,*GP$nuOP,Xb,EVra`aJI$ft?^MT9-9o1'NpLAb/d<rg*;AmOh+A.^+$qat:>,?TYt&ke8OCV+jK%Q=%c7328`++47^3>r=fkm'B0hD1>!t_1E.kBTXKJG+=7^UkNWG$(dAm%Q;TR5a%0;]&'QZ/&PXECChQ6].$pZ(::5V$$tiq[+MNPjH[%X?a/rl1+7V_,hN?0YF@O&j7p[%@(t\mJo,Npj4<^\g=-kU]`$6PDBFOjtf<;`i0Bo6QinWG<CTKFSg:/o_H"n_ALXtLpj3`LX^61%no(&teh+`M2dt=)-@0O/Vq\PC<;Wp!0+q]'*[!rFh/!a!&[o6aNH)LI)0e&JmesS69^FQ!T.G+d@i+p*@?)W!5aLWu[0D-m)q2DJ%^9egnaSTUE!CU3s5,\kLYGSf;<Uj$+hN@+<R?VSf:o&0%bmhY%Ll/<QO0.pl?CpA6l8$YYCY)9B3kL/R]i8IJl]u#7N[tO`1Sul'%qEae.K63m3;i$)Nbj#n/UtSSPoETbel),hJ9896GDFZZ'+VNM1iE:hg(&Z9fV+"qNCl1k3o4!QLVSkV4e>c[r[SoK2"YL<Wl/dfl%;GqnW3)Vbrg?b()'QgBN=CiF`\tZ#+KTnTiH)O2`e#EEgd=V>\/u2A2KoMbKl&;+>D^U=<.\<Zj+f-Lgak]G<MA(>\.s`+TL,W^\%OSIGg5Z=V`R_^*`LNdapKa9#!?ROAi]Y<Gj6p*0"K^La[[HGQ%Xf>qs<0U"Zi`D8W9_#+Ti&P[(5(eHdVbg-^N$,5LV]W@7I,fNI%Jcikq=-mgo%JT9VG,-IbgTQE;Lj1Sc<G?u?:V7H)`Ff<EOcq&]^*.af*7;DE-1knd83KO&2dGW[5o$>%7Sj*OTF@$MMpuI=3:2_e%Ns_DEgi01rd$E"gid\=-6^EN-I(^Gg][G0,MJZ@GM3D(-bJ#X!P3OeaOK*(U'"j&JEp0I'9.,T\5gpLq4-Dak`V4S<'s$X&.bu!`%F^G$'BbW%t)6\]3(tWIPg:a\Bq1(h/ZtPA]^7oG=pZQ93,LQdH2KmD"Q<`423J5OBRD,/I4RVdCHFHe<daqF8\q)6^"[EC"8`iI<%qc8X[Qnnn"nMUnK3@VJNI27nfBa=I<fHK*TpT92""j@`.^Gn;n@n^4]"sncf'fW2kFZoH&S<GtU6V:,O]%))**)A/\b')[iT<BUW%2!NReQ"G&%/9a$tK:Il]4`A'Qm;0X]ahqR\,%;:R=+*3<\7QiE+WWM1P*mfh=Cs3b,7@"5mCan>[P0:=[aTdh^:lu[WPI19Gd^Hb%Y;>VDft,DrU?pAFGo\>=!C+X/9l&)s8+cI)=hBc__W!'^`)CeA$f*,b8I41]CBVPF%r]]JOt?mSIcFg`8d?X>o#b:XC]a^):(DJ!%\OR`Pg3uq\gFoY]e[DOG.&:0*iWnWZdsO7Y!5CHVG1MH'4WNa7E;nIR=bcK'3V(0fhtk0lF'3g?,abq5)d#XraU)ps6:oN743Aoq%4)Zn(aCT<N&8grq/=MW"!>bASFOA%Eo7a`^>OZQAQO7P/64@(an;1t'bCBI_JnIXa<QuLD\:.B0JaN[=U,_c=Q:i`&\'A#H)(]g'%E_j3?9&9H"&`ui5mNT2'KKnSG79]3#^V=#j`e2Cb[sVln771MGjV>)B-(aN`-!@7M\3UWJCfE4EGZi_eEY]mV\g*_nrYZ8kjol[o%&N+EuOV[qO^oFENNqfl<_kjZ'&U`6fqQ')?4udReN*%tue(C`k@U&GZRg0f3j07U(Yr/5IaV%Z8`#fk:e?GPQ!<;c]rg\SKWX34<%[mZ<?\s0J6)<R8h4:#f0QNVWRC]OrRbDHESH:YJM1Ip]ZBeiI)Fa]supJJ=_D!ERiQEng^`-d^hkui[Yp)1m&l9<fqc"D2]<^'HM%=UGGT+tZG%7ims13F1M4\X&C[]1..^=sW)iMq(adMAV:f=nA+sj".K=E5:XM[f\b+_fG=gC"`PYW\_W=e<Z!29^e4l4&EoeS=-L>%9j0jD?C[LNNs!<"U^V=WQ`B@%DnM)C2<F2`r,Reg5_NM_6*O*!c%Ns>q7Y-*j;85Jcej>N3mJ]d&!.tFkF[NNj0Ip/Y"'lM!F/`9%A2P'fIAcZV`H^UlDpQI$[bsWHG7tHF<($J?;SNGD"HW;m]7P@-4eBZ#&?,>bNMOjAYp,+AT6W?&A>3$R%<Y_T[9L_<Dmo,JJ]7u)%:"scK5;5i0Ed<$gO?VVcSYI=Vol%:K(=eB09R]n`=RE8'UgY3knZeAIDm\N\e@jZ9Y5>5MJTAYdl4.gC8_n\pQG9mS>iIl,S>>ro%UFG??g<MgL>2Z*qmU,E[1GkYr?h1b64jI76@*lS:`%S>dGkC?Fjs+P7c&lk',`OjWG@.:T^K:i.OYO$FH#jS2rErg3-?#,"pR!`R%_5a0p7C_=1*4+^.,U<@]Yg^'BTLjXBLgn?I+$c,\%8aLt`_E9\LQbp.Skf83EI1F#8im@W5t47f?:BjJS\d;VM$?UlkuOcRjbWi#%JG%P5N&U3q>A:*+<](5V4A%':-C>TnNKO3sk7O6`A>d#-)b'=fS\rV#pB]]jjHJt/0:f0P=K)p\_eo&QY$E>]8c#PfcZhVm=D\D<%d-aLnIe^>-^%e1Kn2Ar/L!.o#p'8iub8-EPVs778AXb/D]=HHag%SL-D1YcI1qf19<<cFQ:6]<Bc(I>!1*CJ!'Hnpn*<@7m$u4Ii%]]\\j4>VVuX#R%V[_JZ4]3On?URBrLmT_aaM3.mL?u,0`D<>N@&#Wfu7f=f"&["+#Koj!O_(^[\PMJEP/LR86;>,H1$^5nP&pB$m%]p(rb3N1>cVbDM'GbQe,I<+)qTItcLk&23e&I?>(*Zh(DNW#m)P#nUY*Io812Pu)4E/QLdY<tseMJg>u[%hd@TrOul.VFT;PW4N)%D)%$.855Yia2H*pb,R-X+326h+!<</)173PWu>K[I8o9;ZDYRu<lDG1CKs8agD)$?B]?V>H:>Nr6EXU99LUs=/$*WtbC'DPGlim%%eoYi1l$WSn3<HZ5m]-'G@Jecn;`,MO'J?4*bDr[pggkUAWuU@EF]uXf,E5,W1L'Ks>Z.@f!Y$B22R@l:-@r@-8X*2^`j-mX!4KnA%n'fUg]"jO@)pb%Od=ZWn%"NX>eiT^*WV.Y-F?GI^UaV'\qbD0%aVMUWR#uX&>^a4L9/8t%BsL1LYeG!01,W$Fm9oOQ!Fr%'Si,i`%Y9?0YC+^7"d[*DQ8@QW9@uSRL.A6^Rj+(@rTRWf]b-EHrcBf))`3Nj1'&16Y<ZM7`Tq6-fe>,Bf'4<j$qFF>)TcCLc(2/W]]-!PE%'7G!\Jk8I10c[@/QYF.[LPagS3VQqb7C_?4bAb^5n<'%aj]1<qLR"bR[$S_J1l>Z\R^41"aRU$>liqm"D//$^crH0[PA[:H+<#BX%0^(?B/dVU7%]F.G@(/5O(+EO]$:p;]BLaZHfL.e;^\tCBUa.h&$u'fOka@c+8a-q3iW4/XN8LMgF.Q:#c3;1R!hHj5TZ^7h3lBh9%Lj"KOSBZ.8OJO_1C;U\`%VBc>_2/WC%o"NnRRcXT'and,b+mb$7)hH"j\P(@@$PZY5%>=PJ(oj-.>n-ST`4ghEr3sD.Ii1mG5_du%oVUtG]!FZ.M5@kJd=#G'bFBAK<EHd%?QV(U-m^Z$.p;Ji=D8f]TD6EagB^7<Rh]hj&6,4oKlemAl`iZc<UXNUL.a%VWYFOVR[.#,%ORAJJ-(GRD\2e\e<E*Mo&673T>]-G0;Q0#u`s5uS87X7%]`/7Xg?rEO*I-=G@&YtodQ3fqC[?Hu?6+lHJqX-FU>=Aa6eX96b<=A*%Ub\go:g%Pn:cRa,<P<LH"a`iUfTIMuFJS+`VMbjSl99#^H!&X@\I%]+2^up81D+D`]l8\<pU60oG!2nl<B+.Tfa4RGXe\?p20C1D%<%$rD=ibTcC0k@UC*reerQ9Z#2hbVc/X&kWGA(X/2V`F'5%=OKl-[DZ>1EV*UZ((!Y&p)efda-af=X`HdY4I$/^_5L8);'-EQ9<8%@8i"-K&Guf?a`.rc5nS_WiA"Hr&>9'V&nI5C'TE([crZ:OSKLF)?*\Z^8B"g&[a<P188:TjhAV)eXW#pEZ`0Bq>l00M^t)_Cd2;=%L>IA]lIO.kW<8;Yo*J30MXm0K]!kQPRu]_WkMIV1^5]8X-?l\9daBE`&8EWfVk3SXAsu7ujo`d4,>8/j!f43d2%N\c1]\0m0i`RD%Gs)-N[@]1>H4E22M_QaK@!Q2(,!L8?D+ejt+5f`38'u`7dI+UU[LY=fgoVidQ&-NEM4U<SQ_WS7/6g`7Zj7s0?ZSZbU-q_%pd\7s%a`1O_Q'slb#3iuR>H6FY_tRu.YeWo_;F@Xn]eh%[&D5(G.%uDj.MooWI'[u([um:<"/f>s3cXQ=:8rGMOLlp>QW(:P+)L:WL*gAH%mV_)16DQ9h'EUPL->A6PQ]n4P_t$5gi78Sk[pb/)0W.g@ABW7K"h6$$S#s-#Lf6iM\Ea/(*`Nh7HV84;npr2'?e@p,T<fWjX;1.E%09W:LL@rGTp!;t^EXU8kbDIq<&kZ1->TV.>6BMV>-<XD/Km*>P5Pb6.<n(3/[!UFW<bU;e,'35V7nnoDGP&t<X.J:E?2a<s8ZhCY%.#)?gVF<'u;eV`(,$D%6FaRu38bK4jf=3;`pZ%!ae`p<+/Hs7,&PFN"a!q)"A-k5YMVP5uc3JcC&KOB$FUn3,:G6V,e5"gC@l@,]%>RqQ<['bb,A8@BIBA[Ojkeifj99eY7<E03jSCc1uS5o'k*QH2]@X-@785W18&!bW5DkrI?gMg_r6uXonQB3=D?8$&u94tScV!)FJ%p-5L;W25k%/]@ns?HsN%Vb?htat=S%*Y\1N'$?ps4%85%H:T4^c7R9a)`0i4#QTO=&:oTo/\>0s'c6GZiZMrM6B!:CikPVDoW)ZF%&d&VDgs+&2Igj8TFU)@!L^m;170Zh(&SLmK4nM=pE&EkL%cZqgkquRnVF_7t]kr>O.WIXgRPR'4@F]k=T._378I9N.lKSI+3Vdu@%2Aj9Z<"<QG\059:amQUn_c"6Q,qYA'Y:S'idQ4^IF>g-"eJ5VIk"WT`&\Laaf_P^HegZ]0O#9/bO>%H2NnAkHZ@9G[Z@/HpUt+WJ%oB*)Ts5rLZm(`Aj5Q:B$2t+KZh%sGnmpCM?&)[=6bH's0ks$u#eu*<:^A^>XJa'.DI.Q6&rRFt6J,Q#=pL!lc^\c?lGfkO7o]F2T%s7G4HqJY9hh(O9JoWtIM$,=#Gpig%"Irh0$rVLGs9M[mfrqG`.H1_D_L/1&6?e=37bH""cHMu%!lS&;.qSW?C9`O[*Xh'#ZoO%W&%HMT4+rT[D.1RU&mLKEO6nW!R9og^*Ds0E73lG()+nJbj6j%!fpG=G3'>`KQbUM*oFiA35l49:l.1V_6mCP"_G0ldm/H%5h2m@TEo%oG7\,&;ZdYIQ1$)++Lp&b29DIkuZbkoDR-FIIl:@IeKg\hu<VE+91<sDh%JefDkKT+2@d1YHGqB_a"1fB@Ur#O#o<ioB\,[r99^>%^\dD*5Q/jarV54'CSNtN:*2Xrs*j^W^AV,_ki_l95On<Z@_9>Q_*:cqXL$s7Y#ss&2u"K/rU(d,nb7OUg\Oiekl/$i]SD>f?,JgN%n(;"HptbDRqr[eUo+0aVp35Elq"m;AQh%obgA[`5If'"lr%hYII$ad'2dcO45CMUPJ,`;_s6%.EpWn?Sd(00Er_l!q*4uP^5B6V/%>($4Z?cR.3"[7.cf<P2JTAP%je$o>nmc2WBp4%J]]5N/nkBO'EVgeR&DQ!JhDgqWOpYYu<5@4fNa05ID1;JBrV&&E$Nt.dWEUAP)%KWfk]]m0dImI^<u0GtN@B/E)RXYpc;J94s(?"p"U7Pm^KrdOf<2:LM"MZnSKV:K=$#J5.b71`n*J5q$uO/,qb'f@b_f2[i&]Fib6%:/u'`Lo60S:a4cA6AsI=m'#DcBuE381`,>b-YZYIc+C"eWet$tTh*+#S$V@j(L6RQJiAkef6)b-E+_jRDcfWUp`qTFrq'q3->lbW%;f#;c)uahs:k&B.nr:@__a^@^Qg7lme7IhG<e5=S3i^KUe%WP0SDVW+QeJs=7Gnj@QUH2q.KUHcE[,1PlS>9peL^r)fA\i![f#hs%)nlgH#J[JQM'dgYfdV;kM-ZI!W2KKn%`Rg5BdlsN'EbM]J/DS;nI+`tlM9gYJk3%3]eZa33D3-RK;hSF9%o/`[GX-gY"9@ilOjoT%IWPV:Y3R3dTarU^M!L?EZb_Tn54\##rVRGU-+uGnOp7h*N3_qqS`0<L,^4N>B(S'93_\(8859WOc@E4lc"4Im9_GT5jCoB^^\O@C%ap$C^@HQoR=XC\bkbAU),-8:,NG79DDe)`P6d!F#-X=Ua3_cT$I>k]o;Mt[,Y:sCaDXsUO\%&fJ9<3'Va!?Ni#h5tT:!-((/m>#L%9L9r_EaKEeCF]h/Ekg0[.\9dpp%g8;8TuaM)*#6Y/7YBWm!=!t?C,>)CX=2PrCWq--7!Ba]Xf2Mn;8q7<V_2t>pF_)L/4?KClGSY%>;R"\+PsUliJ'XOP?9,'RJO&I$\M-JE/lQD*aSV1Rn:22^NoINU!PFLcZ;Y^g:+fI0uO8bAY/3dm-KR6OA+n5f-snN$KV;]I7P+<%[uj:7>i<1%UE9lCbA1D;:]`Qp3`r*A.UWmT9a_LF,)Z/g;P%:I?C(]H,uZbGiMNEuC`$02,<KKIV@IEQX+0$YJ[bEcN7a'd;[#;>%AgYJ;O.lQI%4eELPCh;lrbpFkB>!o;ahGA7MNg.1463b'>QA':F)4a4I\i5bp2sqd&7>R7EJ7nLGQp^Z"+Gphas0@q9l]*i2asG&%lP>6(FWIapnbMClhU:'G+gq2&J9.`_CK"p#',hSo,b#\SGGDe%rH^LFTNe5>^7@lul+50o?`p?m;Z>ETYT)ETVA&"$N*m@iH77-Y%n/'>*65Z#l?X<1eM5Lo&Gn;-@/YP34`h/k_C248Ic+7!9d6nS7.7kmUD8+NldiY&S.m#;X<>+$DT'Y3h#?]&%(<,Tfpa#U9P51WJ%"t)\hUR"UFd:K:a7N6,QBQB:J'2:h[Q9%3mC(]=;<]9gC)K-N_Jt!$4T%JJ#/^:JZ$IP1d5Uf?rkD@aB4#=PQ>RB8BJ>4qUQ6jZi%ETq0=6q(07DLjFFbCY6%<OtJX_53guMGE%P"hXsX12m]1\qlTh0^ije:V?oMN4ZPi,h@)iaA',;MU$83#2?Oha!ONcKGq9^*&S]T%eWn(9lUU:AdP&cZ1T1/7m_V(Eh^X&9UrSZ5GPm9VFlQZC$R5%OP"3/9bAWU]EIB$:M^]?e&O]b^$/jrA33u2*e+?8JV\\CUARUQ/%1^8s?Q\q<A'];P),r!!\@niE,>\Z,*,N&u)NM9"cg=XDWHjmeKfo=<`HnpP9=H-AFlNQKUdP_W7##"r,=diZ%X,rXXY*G3]"cF:$%W,>s$VY@m6e,Xi$/$l$Imtub;aNIEH9I?%$HnD;'@XKPO`G>BdddmO:s.aAS0ATr0.fh&oSAX7+,lIB0[>l3(P0u3=1X;CQIYRBX%99HGa*gIbCLs+5\F:U6sqQ9:R<Vl<3(/EenN%apBeEBd\IW&+_i)8Qm&#TtP'UPOgl9;RqS`-?D=jo#3.\1#fW.=1^qFb;koHoW$%[N3WP7I8bHVTKLboc1]J*kifh:7>3c7a*qK95lIF[[=<+A.]\!MI-2B@:*q5gLXn58Y31i&-ItmZ+iBlo,-t(5Gs*@!*CU[o`!b<%4hu%%n')fSj9i'[7\s\kmn,V>oZBdoLA-M@;"-62"8kfbVP0OKbs>2oqQQ[emH`[Qa50)%a:K<#4eHL]@3c:2bf5shU9!_;lA]Hc%'lH8LVV%+H,nE7o,A72q=Hk=h6+gk*8K/Kpg)aT@F'T$hAIbR<"`@3MBANpZVVmK-A!hJ56]!j,/?>>^1pp9/s(J$'ZCUl49GQ$J%h!97*^0nA#V)ddfhK5pK+qbeJd`rKaBU3>MelB:fR)U,BA41*8]hK9F'4J$(C9G%)+bd6e.#`/:j\&8E-?2!!G>.q!'uPPa2$k4L%!nS&0ltOBl[:m0RYN39%#C'SJ"sS>clT0-a7D(I5en0g^-Z83QM^JBfb9:sR)\7:Mj)0spi_5e;_Zp7I_a!ZWPlLESKX=c(j-d'p%iu5R#:[?^oPR7AGSlR0DmHX"1&hk,C'RIcmTVZLCW1<I,^e3n#]<'T.l>UsJ;"`[6/<g=LB;bfOqe)WVSb1HFI`V"SmdDd%p!M9(%H*6JpVk="aqsT"5rHI/so63Fu_r#q?qg\OAhnDW`Vl*o%p=8qc%fVb"^]*lK?i6e0hg?aYrg_Acn+%aAA*o^/H;iFY%I,$eLKSE\%2B<732Hsg[N/P\%m02G+?F/!Ol!X:,Q-uus+J[N8j"!/.8eCO+<U$n0bG?5$*sJYqK#p^&>i;N[7^jofJA<$n[pI<)cb<\jOt:kM%E3*BS_[+DI9`U0KpeQ?ukRHA'Rpa5nf:cbqETfYbMI7'$PAZ7?)f\GM"Yb\fV*:[8L<9tB"d]OF>oOq=QGWRYeb'%!]-9KT6^'Q)%=+:S4?BH`eDHO=jn7YSddt?'/cd$@WC!L>-WuNJRRl'4nKDqsGq1W%j`c%3a)IalATbp)6H-cuA[Ft=96ef>>(GdDl>\6eM+auph%baUJMPO]NC*a>>M%]cIrfj^1qn9TTmIshJ[e[8L(ZiLPNOGKc6?q5d%A1QFidg,cD>#,I:7QNB*ZjlJ&mPXfqDM,D84UdO5R*H\7%E6LMP6Nt-M19*E\@G;OH252jSDX)/?Rr'u[Fq*s8-=sM0o:h0_O;dEDS&J`:7lDa<[V["YT&\W:.-PiW#0[EbWG9[QFJg&#Xl_%g%m=Nd+gm:sqPfoJX2M./"&tDD8<q;ZaE#Rtq`rp(k$l5Vg'Im!i-?fOt;f,2`=YsW>]2>W3/s`\ZZF$QG+Fs%`ID"8t+Ap-s<sa2(%e<\C?jIGGt;i]+kF2Zl7A')VkY<_)f<MWM<n-#92F2DU`9]4:B.8`Dq8k]C=c>6MONf+ILkYW'B?\<FYH>*Qr9=%aJ1:#-]"[^-A%b#8C>Gqgb&?I:Rr;:]TmQJU`#X/i*%l96M6ii3AW2.hea<AMJO_:0BZ]7"Oq;_k=5M#KrQ'p+/F.Y9H?2KNsMq5Vh.!2OHUCa]`1%RX7M&,9bf][5JCe)t7jRZ&d=blkb6+-i3^e)F;5%RipBD'%L6DRG?/hnkk'R'rc+!XtVefjolp9`A;LrY"a2[WRkG8Hu7@$&s6-2%P'_(TTpk8MSf,K9@>(+h4(8PV+X"NjUeeramI2i3_2>*Pr$0FQfQ_%pS<=YKA^MhZG\F`<0.o3iN#?\]f$Z:&]`pUCAW<pb$sUa[%*N$h^dVI9l->=DhbCu2%0I7m)pjRpdK=PJFA"Muu)A\l6ZR-o2pZp+9.Pi3s"0Xu6-JL[(jHdcY-%Zr@BeofL;D#E0AU6!]1uI5.%[nq'U)_U!Di7CQt&A(N"K79/(OZNb-)%;n4auJFq1]\V:q5]1b=D0a9[:]*:Ctc7[8@qGn%`9hm<G+)T_cGa?&0[<$-=i>K"K(g`%1aDFVISDgFi*'=ZXOROS#h5;h>@\@_FkHLd=,"sm&!>H@rh"HR%>q(XI$VPIPfJ'o=Ljr)"Sg%!]U#>rA&?8k:3AtcpUir*%kNeQ%^QW^8IX0GN[T&uP*e%b!?BTX1`21?J`6Yffddo2Ds!3NmeRs?V)YNUp4aWfM/J<)u\)N0uTm9'2cNqrlOR;D;:"t?iiOG.(^7.Q$%-$]3N?n\3-qh1CR^m7^B!G(i#b+\U_gRu2q.JJ@T/(pmHF-b/k1eY`!oDBnBONM"rCt9,\-m2du+><m?12ejqR1g3-Z61_1e@!s9%7?T5NFR]\-gINr%;/A.p\qpOngR\WU3U:Zm[l.FK\^`a(eLH&.IP');!i&;*dK2M<q/!Qj;DA,gSI<GA^WW3ECX6S@qTAcaP[aAE%Mns>'(Qe^]OBgIAS=amN%bjBV^AVLGM#i'-d(=;m,s]ghQ'B3ib683-Q2"M!\JZ@=r64(5B3FE=8/`e`eC4%B,/rls_)sN%gNmk0%9L[1Toh0T*l6EJ42uCRoUIQc8/h0WVm*kU[j%)Y<CHt6296@YTLZ-rQPj3ingDp]E0,jOQip7R&K%dQ6-tbq;3="Z4,ghm2Z\g<@%aJ-2r:K%;D\>=]u2Roh^Vd;>[TgqkHLT(]#N)f5PA!Lmo"Sg!dc&XGL#TR0Ves)[kfY_OI<2[(7bH^br2+tH5N8jMd_.ojP.U,ip%)n%8900VIOAdm6BqS#@MQK`I0P4>5nS@(;#C!"\l[^:6q'S3kim]GEDFlhJa9b21i%%L9XR4R&!foWk2*%*qS*Zt@m)3`7pU-24L%CKclDYus5eCBE\cUo]FJk71=4@^B69!.`as=]P(a$3Gt'plh5Oe%B`j)[+<?5$QI3RLB#J3RLFhUg#Gp4)MWNFMOj(=16Q$N!*Qm%Y!*fYJJu^D&L'2SDeB%(ik3YRC!p)[^IVe6T3H0pqJB5RJE/&b(2/#gC/pPQ<fYCk_rffKc3CGbba(X=_.X<Q].\CG7$>@5QApH)%V_=[t_InXGXs@Z,JW:ZP8UbL:F2@-8$VmfG>=E+3D3IA,<>?Wk1Q<Ci(VOj3\Ymp4K<-5/%sG2rD)c:;]PN,S8&-m"HnQ.qO!q'3%2>gXBI."4Lmha&.Xl;s*<0N6Voqp-67U\fGh\\1`lYJ'>On,1i^`Z^2K.,hp6)4KM+Q/g/="I\+&l#Ub[+*W#]9eLX-+a=iI)V<i%57'NePII]j>_rU&85jV1h@PAYLYJi-1IJ^'H(&T-29(hjPJ'%:PA+<"1BY,+i9@V3.i2%E)%tBNjD5H_m5/N+,.MI+0W`otPt2I9%V$RN4?CF*EcmpuD&()LGdHPJ>HEGUX$!W,;6mUL;At2M&d+%bWV^t"<ceiS9lq!8+?k93VI@qk[g4d.S57#&NKk"+3N+'lN-.:Xd%>;l#2]:b[?!O(K39FXP360=PFJ!RYfGh\mm,rh`l1p'9-1;tRmVdR(7Gr_8Z.Jbf)\XX]\IQ)ADE8T(eXCj=hVb]oT0#mZog80sC%-]Urch2F`2FQi,MdoY'1,u:l-].?!"p/]Yf3GL=dYdN9He:C@:VDJfp]#`*;VAqHSF$6'Q/,p*Rb(W73[Z"Pa@?\u39\Xk(N_5&O%,e'Qm#YY.S'$1*S25>f*if[6N:+"WNMQqt![Mk+;+Q?2a-Wt2FRA<lW]q.6oW-dqJH(nTW,(YieL(3sS1<"j3,igXio(Zf[JLjNn%;Mt,%)Xa?R;o%f\DEoF=J\Gb=[D60+QFEOVDI2,LA`&$5[>i<3TC')6gQ'g`acF<k@p(+SGE"LS8S#<3D,=(oJJ3!(4f6l&88KSl%F%`)750>ICh1l<b:Qf!fWWo-OcUXi0.QK#<1mU=B1W!^mRK*dcjC=>tX+!n;pt?-$r<`RcGZ]34^^TX?T[Ri$mD<NP/iodDMGdY$%Ol\d,"YU_u-':N(d`:HCb!YImP2]g-2aO9rC5nGZSBnu1Y%\GpDJcANHV5$rO,4BrXlt@r1hjAg'BlQ,'$-W0'JU<9(35([K,Y$1%Er[k]'&;kXUoI9@h&UL'Q"g$;69]S)l&0Jb.?C:r"VSM<A.@_-:*lABk=MMgJs=sQE_P$=J[h(@h^pE5FcEWo%8Uk=''6G;&if)7%,nUu0P>tm8"Z'FH)WDbAHaC.EMeF0Jg)pos:+*3A9?TUfKdBOV"u+Vk@o)O6-j'+Ig40;]Bl;Vfn$TK'DL+dUqh<4@*N_@@1k64H%11R%9ZGeR&!@;l-]d"_t*Y*h`-[-<al$:Q)m]^E)P6E82b<=:AKnbd(7Q@8q3*H8c-E<YApqD,NFh!!"H3dkKHBXAM%C/?jO/+6K%8-(u`k<.!7ZoD?h!b8UY,BJ_o*:/qWKJ0oMa0(>:O<a0(b0!PC[FlIV.u%qnTE^UNM3?)FLda\e;hI[G5Dij!HCb^"&dh:jQL:(N%%J6Gi:&QnJ/uSUYda(LlIi'sr/#JgH-"`pa=\3AI*&Q:VRN4C'%Q5o(76KkeF0YCA.^GS*b.I1ChG3-NVIU^bf]dn=0G^R,9Nh*?%E[u;/&2?rI0F;QMH<2EQ_QK3S>eFkk^"JXP>$Al`TLX^+VW^lkk,%L-e31!Bi.J8(atM<A6.VIU`L/N^!Z3f$J7SjRCE_b?Jq!GJ%jXml+)mqS*nW^t3f!_H!"8pB?&Z1i,WrX&Vq^XHfc_RpZp+rtsWMcdeO#1m=3Y.m:<\^T41$UF@[*iSeC;c3';,13uZXdP_nO2I5%=qoqP!lNNbCjA)ToFM42)n./,-X;Hue)K.:WFV$A6?iYckN^NnmOiqpD(;0/0e4CJ;<J(W\k(OmnI*7=6GG(KV#D[[e[/Ph5`BTA%^E,fDRDa8P7,sC_'32"Q4Lt*Z?#L&0c9#X#KFKZ(Le`B_?uG5$.rlN3OCmNH.6^GO/"/H$j5BoAZ+jNUm<(-@i6L!*Z=]PAA&NO:%eeP2BbC[?"6SPOu>%:2*%Og3?LhuU)R(LO'^hBd%<]Fu[^0+)TOYH1ihor7UlV(=W0Wj\9+!nW)"SZqTLR&f-Jf]GmH$Aok;lno-%.BaARPAXVRi#t;9S6]4V<#ic]VDc+!-'N->7K_Oa9kgp-a#^B^!8c-Z[fY*ZJ48=r`)\^F,7DD:G.Ns(1m#u*^%<q[M5@6'p8.qF%X9_;/*>hg"ja'GT<2JhnOgin`fQEg+,%X75fY*RVO/n/j<63S6\&IU(<ALU@r43/i!-VGQh<k#_4/,e^iT<e:%7L!!L3J""Q&pBm%iH9kgNZL9[b&(!b<5r\j?:4T.EmDC2[C`TEP/BjWFAY.tV3@ZI\1rNQ//"u.]lBd$#,F&;hrV,.-,nND<@LfpI(<!nJOsUa.rLXM%H?%MRj$n#8]^OUs=b'oX-q#)`8%>u5dK%\,Su"Eh)oQJF8$('&)b#:)\Q77XbhJkfR)WiNhc[peKjIg'OWV7\,jLM.GDDhu@,btk%HH1o19Wmdr-Y8,kO"aCt9SuL>$*)l/R`ZW'S5H[E/X2'n.(W:>c5['+qo!#dl[J@]G'rEU&XlLd<j/iUd*i%(RbU!YOni3:-0H%0%0,1fa;_)/&+p3'kC647YJb)%[-Dm<RM:7EpeZ#8fa4OB.Q*dJFG-&H[&=@2^EOEN9Ihem/V_56hdn[/qbTsa8hlHD][MY5cN7^+R%"3ng'SuUc;83)4(gY?WAd[U=F!]>"liL*Hg#TL@NhO5Z>Po3:h/N>hh0[,CO@TeKUT.,,()/;OD-_2HA>&pP'8TATe5g[8$m-TVP%n9Pa:Pj[!am/RKe1X2qk1^&co$;\'l?s3mr<if4+kBP+B>HnYF.)i.o,d0IpQncR;pn*l(<Cn2_D*hEj5eT0*^Jo0;YEl6^%lg_j%3%&n`Di=qI8NSE[kMlGrA5#)^KuiG%L,r*Q_c4S&>ij,o0\Bh+hP8pLVE_gE&-I:6VFuanFWAC235'UsSVeasIOa#^h3qATBbD]+%lRpV0WDeb'DRMRt&4HWe9-@D;QBVr(5/3MM81`dU2u.W?nqmM@k1^WS)4jA:3ji'Di<u\PO+)O8#7LHA>@+=RfPpn_a=Q9rLia)i%8<s+1>'Q@mqtI.]-@;(+YqQPW4\ljH(?^Q=W5TJoOsIlVe4-9J6mCf9$k[l!3RCbUehb)O=k[Cl+k#kZ=nMkI_"4OE5"';B:Z!hC%BY&sna(^[GQ4l%0iCL!?*0W4FFR#m#O2dPL!pR[5\"dZ=</jlFNem-"4=mVnb7EYT3L(esaASfr^h/Y2YuZMY)CtHU/LPVtA11>!%!Q>Y?2GA@Cl,C#n.%EINaeo<O8m7!OBIW2P`*;I3MElqs5b]4g^km;40jZ[TLhotaVC8sl=L(j.Ykq[@3aADQ!)QAd,Xu8e^T`An%nar9]ith]@8pd_5&WJkcp>UH0RRTDU"dJ!,K!YZ)St&3r<k$Tk(l<PBEVU_ZMF2Vs6l3nki-9o^#5L'3f3.?).[G*7V`6)?S4Sg&%V)YV&@t&iDX6Adm(Qgsgn&Mf;q:MR9#omRcdmQ,6*0%2,NbU#'?)L#!PI(mO%Uh65[!%,S_Iq,9LuMRkXSN.Cn$._c^'?-#po%t"%V=!il!*L3fqE_cAH`k^V$fFBp64#b#M\d_'!]r.<0lCiMAtbT7%[387ZsIB%X_A#G,)hYnS.$oGMqe^W>*)-G5rG?u%]m`F23FdR%6ek!F;t#h[9K66k;dE.c#YhR79&^e%ccJUKTT(P303'%VJXrO._pg*/=Y%;EnT:Yd3YbPdICsL/;c5s'k8/)-3Cp+TD.$pnT8C0W%,0_R])ph8G&l!ZT*,A6eH!(,.<>63iW#-RoF-,D?3-[W'')`!2ko\!-quEY+L9'f55?^e,(n^;d3V3dDmC92G+Q,0bQZFi>d6*7s%MsZ/\X<WtNM8OoUCkkqH.#sMLQXhC]Q%dW>.oM3:E4dB!hK%[e,c,[T8UHF5H]gC284g#3MApN<>p"lTE\B/X,Ip5nFC/H,+Q=`!%5cPD?GMIFHW0`2,=R!bC_jS@louEqQ4Xf;I?E]:<:f(c/BO5#Q^'H.;Y0FD4`AQt_''TI/)MTp+$knU?p8UE5:T%n=]HMaA["TC9%"C[PQj$G;2UDfm!Q>u[9WnDrbA(8pSd`($R89Vm9V_@k)6DlcE0PH6g*f=Zf7#dg<49_h"p2_%F.GVaAC-6.\E5s`ZMbP<nVKc*]%R$qe4)#MI\P"Lg,C+ap)T"1&Y6kT!YW5GK'.SQ[V7q<MNeLC,9=.eG^<=m1j[I[NFopO\%e?!a#:)n%3\A&=3aiY?I'<qInJIKLD%^BoEZMXMP*VIh-E'^MX'pSN#B.i)C]s.Ql2'g@QoLB&!lL,bIBYgb1%b@dq82A2n_k0*hpN:,^G(oVla0cOZSYpU\ijH*2Q8M`jT%4KE6"?feLNFt+CC_Gn'>8`cLk^GuS]];3!+RjV5fS!o8`\ah8&(2#.JSW4hEUodP<[N:`?Fh0el/KXNE'T1&tP"<H`Z]VU-VIUc9%`F<+hL4HF#&73+P2i)3p$9lfAS+9E$)'QgbN_q&C0p,l6l7?Wr-PG:G$alDA4)CVfg!mtrC.(uQbGlLn+2o.4>L2j[WKNb[PJ4G7%1FJ$0D-E92/`33?Q$X-uAug=_CaZPs7A`JQ4g,%MCf.<HbJ;.@K4JtGIY$)ue[8O(PSE.?^dpr_ObccB,u^?03?l(/EE#J((UlZ5%F5>G7EmF"WOKp\Q*0nI`3(YGCb@FUs^:R8fYLUPO`10ecUPUE_b5YPULaeb7fu'QkehM;?"r'nmjYuFZ<^Mjs,?k`eJ+6ske1:@3%'bA(7=k.^(j@0@*+o_)uED'-*HB^f$e)'8o?[JXA#dsT0k/oB/:0i-[$Pde!(bmB5eP5Fj5V[HnfiBJkY'19;Zl,/4dU2e'+XfVd%qTqp$"jC[p:-Gh_>sAk^1j:)C5e(?ATE_.e7u?W:[14&=#S`XE.CNZ`r;^o);K0MT@SrLG!0&_p*6%pZ_`M8V'QD0CHoSOKWAarB%5R0=QeU(IW+F"(h7,_A[aH.a%@Ll3KG!Y>f!doZU]5)I0@:Go8l$E/GJSc&;n?j2+ZLJdm;F0X[j]PSe(K,__IV!"il:Bh^71aS:%XV;a[M=cc'rX?G;WYgOCbENPI;^a$,,>tO2;ptKXJgkQ,lJ$i3N,JmZ/T?d3-ai(H6/tjnf9E!HlKT<S!',#pL:g1@EFqBVB%E_!%1aBW2_j]LaWabEJ;m,s&1]Zn1+"^!CBI7N(MSi=cE0puFLn7r1$LlEY&X-oW5t&7T-k6-d"pceGnAgHihCpe6<@X%2Z[K:CLG$4J%2[0LHFJHsMXDN50r]AAdDSSr;=2^X*Mor/+;IocRObZor?eGT]r'XTu\3(>I0Gmih=8Y"-!Q=X0S'Wi=een?:p'SJUrha;K*k*ii%(p:oaC(!XRV*RE[$!%!7glY1uj6q5ZkB7)%>7/Oa`:_lG+Kh-YPMu9X[.oi@lVRXee(8Tqe,`f]d4C=A`rO_)HC5\:l$RoQ#7,Wg%&'9I7Q4D[u+!*I79rbhK_!?LKP$e0'QP@uDKY?7J=7]i>X5sjN_^Im&ib"0,0ip<]04-LRP(m\?\IPq[[8IuWJ1J@h4GO6e,:p.D%%/e$R/bKN8U4RX>'I<L,.8?#a:??AI:TeQaLWP'LHtb%rg'X&U>99YOKLf-Ll;[-%3]:%A05DarH)r40(WtCE%Z,RIn^<%RSTCP3%0]SjH7j[Dm2i&t0Y\nSKa@k=*/MkF^M21=eCoKbF?D"dIfhu)$8\]]K7ZHYEbEfB/So@ns3=rM_.1U-/TOW\N6JO9\74';eBQNJ<%fd'<>s"#6Z&4Wu"fg<5K63O85.H?XHY9n]6]W6Pk]"pQ5dp1>Ld+N5%bUfGiMoUg?9l<NjeAr2i#.t.(9e`I\d'4^sBJ,UhWZRjZ%7ml<!Bk>!G,iC$b(*s3SABTk(Roe6DiY)G6-[ZAKchQ#<?P-%S9-G:7h]ZJ#A=ENGd<ha"g"/V/?52'jGp7PH]0m^_rZXt*">L\\%98X,&&1mos=b?F<,Y8Rg`q<4=EpAl6T1#*0VS4)TY7dH8GY@QAO*!mD+O%Q.#7E"0+VbPU#'r)\8"H#f]!AI'A5FYN\dp@rgBC`_%65mksnjNV.RCA>**IV>X&_nS`8ZY\K92FrlD@kWa](U\0:.nNCqS.s:ELDEoC<?HlTl]7uhQ1o%E_pL<ZDrCf.h/I\,VAUOeAiGc%W5sr:<P:s1g9[Vs'jl;@WLDo#ZN/>!*p&Ud#?@Cq7%<'!:olj6W,!a87?h)n.Y6SQ\m>oM(h4"bG#L&k^&7!#+\b5q2"S9YK5k3R%:9\LYk5)$_C%rm>!=Vi0G!.-S>nuC1oBP%$(`Q([(pY&[XrlM2cA")2Zp#6ML.&E!ia\s)'k#lV$TYjn^iR#BiPfME5R>amKt!V%%E]FtA/Jk6W%MEZ;5$'6WBdqP;NToaXa%NK"*bofaer#/56m0G+Ottj219PArpF48f#8:pd5jXX7E'oo(l\7KG$K2g%?WRE"!K2k7%#>6U2Z=TK+S\bsMP:i2OSf^dK(7(k45gs,o!J%0WX3#l@<g[E4LZn([Z.a>4<<=Y[Kr*r9^ahK?itoL7D[#jr:rtAc$&]^nQ]2/"%q'K$![,@+Y7$&2J;KBUrNSQo7P*/Wh+g5c$^dI`UiYuWKCbb0XJ@Yt'==\h#P&_iVqbet$X9REnPB/o5.''$1K#kl8+U92"%bm25%#.V9aQBo@peOOKA.n7DbmjphJi^IOJXQ:2Y,uD>!3cCTO;`t":Bn77urZ+2FYI]+\dZp'+<nu9YY-1_sn2k_1Es)`;Wahtg0tbHd%Q=`h:.pCN'&qs1?Ur2.Bj:6<d''#J?NQ!K"ROlq<-7TFI)0eH?Kdb1"cP^[h21]\o\WRX6%)0ha4P03+hQoU>^O;hE<d`C/5n4%B%7'\@M`ieU3B'SG:O+F^)TRQ&r)R+a8p8ZMhf4h,!<;Z:=22k&<MR&JBXrjl'f:!JI[g[9Kji="rgE07X10<7Hb)-NkTX<c%c'F)g%DL@6t3T3@X8Ht`NBeJdf?q[)fSh%J=9:bND(6)j9+4).,H;gQj.='$XKRi_U2ip9)*)<B+57Q,A[?F8DLTEcK2PGE+_n(IZ,XTNr%JA#02@s;p$SMRVKoN+m9+cM8C<2F_3MB8e;WjlZA\C4:4mm8pQS235G/B,Q5GJ"HC_l3L"<c!]+9*U3p?<Sl9DIYn4O_o@T&]'V<%(#qRi1A[-g67dZ0MEs&fdGY"GJq3As6.&6rf_?_o/T)`'8AcHRn'T6;%N)qY@A%%*Z%?9r5D-nZFMgdG^N>`fME+e]m]l<lV7W2%%I^\Spmn0!`<IM5&P@?=WB%o.AaD4+2`6p6jC?Lk7T:\9'$FqG:m;"d9-Ztn-9nZ(iV^-$I^_A^=XL!5:WKj32ekNerjZZt?'RBVu%Hp3e@44l%SmQ;o[7B4g'NYtJ1IS;KiGc`rJ'PdWT`C`G1@L<2liZ$J^4m^YE(;!IdOj[Zem9O]OF;E"bW_$0j:A3KjiO!oYGCDe>%-,Q)!&(m/N>GaJZ#,&NcBW,3'MqF9:9Q<ZYX0/U6EfE;[qP<'M2h.0SPgY566TQb[RAbSZ0@6(i:o4\q/@Db/Am%PtD:\>8eN^a=%R"gNiibqe/3m5"i=u-oHCJdHqEQJ/-PpB*V&tRAt,-?j(>JOO4*t]F4BLe#I6l^IMC7FC8f90\Q_T)Po:D08^GXYF85*;5V70/mj%43mFe+[bje,T<_Wl4#+m0,g#;oe/WVGS6YB[$;N_IREHi.uY-[/TNcM*61YIW3PEG4Si%;qBKeFk#6Ph>5qcO&LU6f4=fHe#nu*=%q_%VLE243;e5!:P&Vura*&LeW##kY!PC3?r?[_c;?OT6MY%`.D4aNFV9[rCElVRCW:Egbf"l1!g-,s,OJAK6eL-uA^'^";EIf7MA%phc3%\PgZUkP^$lXXgGs&Dp,1\\dlf`(FHQmb`VA/BQee\1F>><8tMJLFLdKT[ls(%T?=![0[m8Zm1^L'Q:ih:N&,dXr.g:L]Xq(%Equ#X.E57AhpTBmRZ0-J@o4nk(ihN@JInfsH]cR:qpm%/C.j1f#$Ad+m&#RVQ38A:pA`<;/1.RA-Cn9e&i7dn2gYVpB6Fr]R7*6*%e;3*UBdISI-&Ys$kc"ih9j&SbT8'9O\C>6<#^jLDIKoe)1=tMD=MUKBQh)o4ofA;u;nb1=;K4WX8IE'4D3Q4U4@pDtqBph+Q-YR`%Bqq2T"&ZZf8m1er_(&aQ*i:]*i!Pgt%N+@?9TBh!\;E>jLld<=f'5`#\?uKkUgOtQ$=^L`aX'V6Q:4`noa1\t8Pg(+e=HiAPO`rQ%#?mD@'gEj:4qXV+`5B*IdS6W/(SX`<i53H';q9^(E1mQk:i-p=^jn\TToebT='8FqR^PTn(XuJd1*0rE(WTLNBF)_*U2l$m</#k$%P!9<Z8ks)^^GTbS!cf%U"?B4p"83ViR6Yc3[[dkj-RFXPi#VJeC1t:e)^qlR@7VPgaY<e$Q'<r(9f_Vf#H\>5J:-JpP%fD[p*j7k%h-,?,Y"4oJ!r\4c;TSNqjl88F,_gGq2ji)hN5m9T9cQ)[/&PU()H`jc6?gMSC7M::mT\Y&Jli2O38:D:.:n/]$228?TZPrW"*J+$%M?5$j=$ZqcCbhJ<4Jd$2kLRhqFUNj?#lETD&nK&NUq8N&J;nDiWqkBpI!YI3<44BD8o'd"b>5>WCE\6WQ5]<.k>3i"R=?`7cd#_'%L_GYb2:Q\8kgUm`\:o:7ClJQf<\cjk1nA@((k#2q=jf>>C1c,_;;?r[XRlLG#VeHS<[7g(^kd(_N<4hIjK*!(o1X:-ZQ34AW-YdB%%LLe(@^*KLN[\4'BR>ZfV^JIL@I+&R<`L)aMbR@0l/N!H5PW**R/3s)!R@[KH1*_1D.,0Kj]J-A))Y0ki[021W&LP$1!Zp&UY7/a%S0e^6-h/?ST&lLQX6rXcWXS5&&:6%GO[d=l7Rs+q`Of<I=]"9QRScEBV"!:+G,NN=1hfd3_mCah(.C!Y"hG\[f*\RoGIE#Sc,=Gj%RBUf'g5<hO>#rtVjs+<nZ;I8q^[l0\HIh6EJ7Mlj&qFB]Ua!n(!g#df$pcm#,pT4Y2@+k&KTu]X^u+VS\@Z:PAaC0TB@mnQR92/c%"I<B[&<kFO*s@b3aJd2sTb<W6[IC5QVtB,_\@Z=J9gM;rA-V^3'N9g%IhMOVWhZrOBeP$9X,1]g8iXr]"LkC?"DZkKKRN2@+'I,c%]dUI^8Y"1R)D(F-ZGG=7$i4$J^.Z)L_1,*VP$d?F<d>l:0tQ?hnPG%UKJkDP9VMiD*5Ys21/:cI"JYt%Q7*$?71/l*a@]L;78^["%-sZCSQH,ia9h`PG<+&6g^H`bC*2pAYAuY[CB?KHUa2i!K5=Dn?V%,CYLP"HYf>]21^l.]EN(3n0f#;__<].!D(b9H\_BEe[Idcu5%_)W!R(kp?e[`DM81#crie/lX2T=;qB]hJ")!tVr2V@o;?&p3tIafV9.29G7!dnf%BIM[aYp!;O=\FP[>H)IHM@r!BZDDKaTae*B.%+VdM_5O#Q]WpYTML+L)EdfC1TF53rfR:TAY(]3?ZT'nX5ZiGU5l+$0>'V_uV:GMusT*u,"ou9&f_aaC/Ioilfbraj%rCUAm+PE@4%hD1U53^>nb*QI>_=hd/rI)GL9.*L7?W!lJeU>o#NCe_q;&AgVD:m<T#U7#i\<!2>5J3dEcP?^7MOSb98%'W$Oq/$%/]f6jegXBSC%'0#HCJtS.)0$=P]lXDCCHW*Ki%7\eN+C,"Z&Y%pIgX8N+eVsW922=b_d,%9ZEuMokBORt(GnF/O;H!X^GqI4pLs"FS]:/Y=A]fT%%A>(rY_`Ec-W":CO0n-Cj%.-&]'H%Rq4&k<6Q<R4\`E>NV?'A.)%NLfY!fUn^rn`5cHtrifX17VKhsadrUK\9QU77oMGo/'EfjrVg%)sA(d$>pmi;p2m8r!oL[eDJ8nf0`BF`\aSS*k"oBdr9ItcjAR<-pfU_=!BJFfSR$hr+'M3_Y5K+?_uGB'Emf8(=K/Oof(oXMLnX'%2ke3K[L'PBS=6#`YD81N?HRB$5[Z`#IrMYkA1.LL?\:%')7_nY]m9GiB_nK3O(k!!JP%F)kta?X\3)"C$#\jZm<_>FY;e#7L]pm`%DLl#0#Ye`rYlG39#tPBM'0$)8?^W"C:aGl1c!2DpfB]6-]m-W]:5aB)8m-HNQ4usMb6(=2FI*YO%-MW3P?cq*;GW)@[GmM9Gu829%1/9?)WccHIb=q*'%&[)3,%kGJ8R;bk$5/Y#j\?s^/"Y*cV\%7^<YLXe&N]3'?GrLP$l,T+VDQj]C6f!8fnf)DTr&QMlfA7t7sCNP%&AF'R\>luO-fZS5_8b:2>,\=*.+h+N<sgm\ff;KsWErKqHB"*sh*!OR-FO,BT1g;!lo90aI0E#F(8Qb6ROF_nRPD27:/U6:Gj4?t%Af*H.^Eio]ZP$hW.7BnYSFoZ+>JIa!mTfChS*D[Wj!i6mEU'j(X59?nF=T$?iCf?k!d*EcOOf^Adpp3p[R7>pWaX=64M%M)WQGJT%JK>2EHd:E$'PJ$>&`aS&;cRTcW8NE"Y\L+^+KKX,bRoOApe@(<*/u[Tp8^0:V,PM&4rfW(Z!n<r:?%Cj:%$U:+M>&G;P)5A4-0nE%$:ogd[0>2oK$2*^rMrZ@8^EHt[D#N;jm+F[BHGYt=eZ*Y9;u:F7,<9^`!smDI@<ORe17V>@-1J:jJeqnjS&W8VJZ)?Xllb)rXuDF%c=g$VPE4ES6;L[FV,$iCjN\@W,PBY7*;tbT+dLDr,<\PT`@1>ji0fY;]UEaAmg;6#VVJC))n#g?:ZUf>0W,Xfm&^[>DdpoUd`P+L%Y6l\&\<kcO;6lW6pI_Q$HRRDZ`,rUZO0H<:,5'rU5kk(L43h-^5?`+sRt.EgfbegVTthS,CGu2IaHV"(@l&C.%4*=F00^4eaQ<<O%!c(\5SL'o%jDJ68j(OsTDGti+i21V2DTcWll?Pm0E`77S^`g,Jp>Wa([th!g48-;-eHl^YLmEp2Qe;'c'D5X&JETMY?#FJD)ku)M%2baFmEUWO*[gBm$-&U6A+d$i5&rXP$l4Hf-a`[Agioq-U+NhS#AI$!Ge895=GJdW,*'opn2L5ri._86p#1A(+eIW>_CMb/k9'U%8%R\2PK#fNju`-Li?8Hd>pl]m`2m9AB#'L8UZGpEPY97&C()E\'r-r8P:jlYg1"](:Yo\+"R;Uq8e`NASH>ZUND+IR'jqDt20;_s6.%]YGp,C?aKoo7q]R;pEa'.#R1fp@NC[^t&mr/&&97>/X>qdrN@8<$V3kNI'!=l]KYeKpEGCo_mKD="[bT\X5Hmbq@a8Lo[HD!=sfb%^4f*6SMYRMILqm7U05kF`iZPqLqcj#03[@g$A]V9Wk'%9jCYH)5*a#_d'=<$3:h8^M>IinDgZ(NgsoZ03J]saLa3!Q@o^u+?J+o%%,@^'^==0YTU>*a>7aZC74JIic7s)H!i>^J"+P)Y<Dm_#48JcrP]F$e*"CWLY&:t#5[B)5#)M4"MEh)Ri.g=h=,Nj\@W-Uil@qL7+%r('9<cd\Wf/,K"D5rJ]=l#2SskZ;-ir9`6'r:$b:qY`?Xn0UCT7IEtsBjSifD>nJl=m@<e"bd#gV!jR[?!@Wb8gC!T0Eh`o%"($+%cXG%lh5Wg%.CUa(pheJjCaaS_7-"ikmP$FX[+(DDAEo0fom,XXMnHNlG'D*51t/8Wc_N9m<FsfWZ`)]DYgpHH`0@'N5[uOZ3[0Dq%[XOZnJ6\2fT#u>qAQQggKc?TEQ;e/$;Hb2S=0*q'^#WTO5#j[YG35Fi_AZ0ATdtK)P4Xq`o^/X]]op5dJUL9%^*RYbZ.N!,@%EWD%RcsFjbB7TDZ%U&@^"dMO9%N%6P@]&aIg2`JMf9M)PcA9/a,l$*7Vt0H]$k1JMY^(/BMK6S$%4dL^;#CS'=(+(P'Nhn+I+-L$*1[@%$at:07O/8=*W@=d"*_hL,Fk]UW$%rYZpm9*M6`O,7Te6lk/0l&mF8ki>+^H+7G!,2K<_eBOQoREM?/Ba@7GsHaZ%l'&!d/]-En$$%C%QAU/OanmEOUb`+a\DbHWlCCaH@=YT)=#D$C7Fi^Cq:i.QK!s.b(?S5jV5$4pMNVgT08&V?o^JJ/sRRFZ'fHEJgZLs#idYcD'J'%>+aX+18EQMQ7bV6,=SALSB@?kfiOc/\j-C\EitE\QT:!RX2Uug/.m[Vm$@-"VYt+NJa+Wi'%DZp/8u(:<^C24JFn+;k+G8,<c^<:%q(1fs,)F78H)JQW?RE/`2Q\::A:Fi,m<,D$&g)d&,<j2f%8Dfol!?+i3(Qe31TB\ESX3;OBnGTU<tguN^1ecQlX\mTTkDa\W?S*V%V0R;%USl`79.E.6;p>#:>9@4lK`"QhrjnP/:<n.r>lB#/hqF-+_kQ=YEB(Ej#uE&);hWdp>r+#hFL-HVj5,3!qtR3F#X6TCqP/4g%4)j-8ro$k+qSas%2bWb8#?\QN[K'Q;c-1WqDsg*aE*Z(NH`=kA5%Q!D,iNJ-KWalCPPQ]2\+)qfSUDKTReL[n;h:,#nd4(L<^an#%$/=k+katLrI+"stoB"()e*Rm!bkAR's*MG&2(E-410%45]<g!!;orZ<m6Qc7N=lKZRV&;1##2VE_^W2$=Z9Ir,;/KF<\uJ*I.T]m%`;&bcXOEjOl+SKFkM+[kB%oA499%Bn)H/luhhE\%a]_,;/68cc;b0R/FYQo\e[$Pr,Tb['!KU%+_4ZK59bN</dfUd"9N)RG#<Vdf%Hb<dP*hc3&Ss_&0V%T4tF?jLi'dCD\e9t+m]f0?]>\mWEKNsG[Q`XI)!+RcD"C;imB-ldcfMo-Z(R&k\gTZjgq`$gqL$Pdk5cHJ.%H!R&EHqO'K:W7&k:rI(@B,3"EPV\fI+-=;qK0LIm#mTTV\0IV<W8R+6`[&#@Fd,JJ;Dr%Z!LSfk!C9kT@0*UV]B)BEKJOmgFqR[H%bso<Cr6EOoV0C*(3[;8Rc.6%_9,eR<o.`Xo2-E4M>r/0$e!cUtft-9ln5;tV,3q+*[]pE]86S]`JJhjU_Heq4LKH!Z[LiH_cNBhB%*`5d8`6+ii[ns3;A2g-;TtDrRTjfDa(O<?-Od3maFPRMfQel&=XgG<e#!H+$10<LtDFYVMEAe:s[Xt2P8;F$V]9Uf8#NJGG3).!F%:D18R9Nn<*pkq-.B!nWjF%Cb,&g25*)(/Y3[ojqL=%jC=YR^!M^k-hsI47V-ijs1c1.fttOJh<4!MH;n#1ASW1_d4(fKlX\ao$O!%Z/b6BITD<!q++Fgi6tWUq8p;-[J4=K#-^I8fL7f7MLt/DB5-@&XPI*>kPsC'<6C0GRp$./nPkPp@nX`"T7WRE)NY+s.G$=p]7U\T%U\Zf)pr[oS9$40PP7n_sH,t`&(8:,.#mSV)"6@g0hJ7j%+(1]m&ts`h51b+5W,u%N>0%cC0Jj3g@U'G3I$'8C*_<'m9Et4-iYA8G%+/RjhF@\j$a3?"m>R8%/&O%,LfHAEuFfPcUK'V`/UYZ'/<cB=n1l*uGa_=QI7MIi-V^#ND*YIW^.0`tudoi$lSCZ5Y5*LVSC>i2H%L/%n*>$GN!1;TI6Lr@KSrh($=l.#A.2dFml^CmK5OTo4gd&U)&S:Nj4@M1_JQ;^^+-C&q<YpdrA7[tUtV7C9.p0P]9lEarp'NUo`%UJbG'Tk*OI%Sh,\pu6H[8Q\<Z93c6n5ktT_<>bS1o6"L>rdC]]2V$'*,l+CDMdUnS#S2S07"'.<V2\4aTSP6q.p3D^AgC;'?N"W+%`q+2=cjqW]$uMr3IH9_ZIbuVqo16=X#M9",>,JAP+r"\`WusiUZ.'SY`7U_$5>f$Mcrk3"X@U7]1NFM#!s@*.As0NW@O[!n_fC^:%S!$$=]6..0-[PS07C!oZcU%gZCR9<1)5-VX(-qXT8go9>X/TI/jm]'4j2/,cR5dP]J``GWirh2oq@JPkq,fub/]f>g(At21e#YN1%n>37iI95o(<F12;B"<h1+P`u%]MZ_kAo3=_Alu;=REF_c:=>2K[VYi"8$8OU]BH-Q+AI[!"VhTAT__-del5XdL3IE)D!,JWku7F1%cZb>?@0c;tA>p#UJ!d<4ZgR,-DUPg=8c_)j#Lao\ih.'*MHN'B`ZF2Uo:Q?l&!B,2EE"PM/&ns#^$en@R<,"6l>1U>[/T'qO_%;H%[DCW-^P+04>sg^^?DVC"FYG?&Z]CDggNII%%lA'EeQnDrfBgPckIE%QQ`9j/q3)7A&BB"%c2n=")\PHDZu@KhX+Kl:1GW`j$H9Al%`%fNS8aXc;`)s#Q7t5GU,+O6oFd$qMii+]AoJ;Qk_K8i7DIp//glIt)_/$BL0e=4ACmAl(kZ_^N7.-bJ2/g4)'BBNEY-=ZQX-7.C%@=tgAn+/AE-.=+?GuXrHcNI(q-)5Ofd?kJ#Zo;bT5H8PU0UF,PN+UhO-pXW#YhOF<acq\P@nDRd-SC0$Jpd7jdKZ<7h"\3UL#)08%3.coXROe6;@f$IDVj?U.3<]HK1pf_"0159=BKP7+,#K)`WRpDSY6*eqkE470F8Hh0UAutUmrR)*2,fFHgbT#-<0roK'(FY@,9.fK%YO-X@X*2=qPC!#F?.+hoM&rpnJjFJp<t\8-7k/!fK]#;BV*(=je;gLeImpY`AtXZ"4j.Ph^*%:T>B:)S+VVQX0-B@hF/(rQRZ]9Q%Q<YVQB1_2b:rm[4A1*O[6[^F9g<C!X#VQ8SJa%/E1-MkqnY[6/%A\>kQt"'Y>,t7djH0",d:7MDb9qBfF`bc$ef3:oJ;JUKLa2s@%4h[E3.Bg>Tjp4f7<T(Mo^c&@J8Y;!,Ie<1"B&"&rP+sk$i*FhfaLE_;lcDa"Wk1t-jQ4UXs85H]@l..O4<VgSSh`Wg1JG*#q8M#d%oTE7.Rgftel)irWPln`?5c3HI/hW;iXimMYJ90_<q7%c-IdH$SlU_e(C?\P\,R6M0hPZs6pM"oKL\pRg2F4f/'=$ZmODq8\gic:*%^8p*XA=H0D7s-&Rco2o8W$Al.:F,=tPXs.ALDMa6i"Te8!tWjp/:IE\DHnMa\P,LNLK&'@ZE_n]dVk0/CFd7N[A:1@P</2%WJH)J%48M)3)MZ&UG&b/HZjm90#OpIf=[OcYrC6?cGgf>CYue=u'osZ5keiA4:MPU[Ka"XV3%d,$r=;L'Ao2oR%O_4.\i<9mTciKMPJ=i7%]9R"`9"J02jp1_(JqPQb%)M:"+\_-f!':i+JeZj7aLG9D_tl&T6qRMAo=6S-QUe*fI<;aLI1S9oAgOD!Z$951('uQd`<)\Fb.Mo1%Y?sR>+\jb?RL8MA<1^[RLL`la^OLsbeBSLMEN2g[B23+9d-mWHrPAg^1L+21_bN!o'ej^^8)hfC.1@^J3PH;!4>.$e02BjY21<'l%O$m83+TY'Y,3*.!3&41'UU%$IdcV\pD^lqG1pQVub^`SlqH(95T/!$I@9cBFX5=>(okf?&rl%`L&$\]@mEB[5=.(<g6G&X?"JFPk%J7@f8hG@qHl@*83;%S3%`rFf.qfAdT9'uY01uu+"^u,c8d`k$9PR2i^oQ5ke5:lV4<[:S<-,pUnKJ7%!7pR4umsS/^S6:UC09`,7%ftagpPk-F[OKW$O'kM=Wiio9A1Vp+Tc>9?tWqBJ/2W<#/=H:%,V&_*6]<kKO?R_\.Z;R4%<B4sfPL"Mp5WhE(m8`rpJ$qCh45DB*%EkFD]H%k0h[mksY.reHaDt_W^o6B>N77Q=MJ2sEg\5f$]S/"<`Gp?>@=(W6d0HUH/]JI@Jq@/\Aff-'RgAOL:k,su<OPXmYqK#.q%f_cIdJE+icpBhtZ)<,)M;V@;?gQ-lrJo%kA`Y@VPHa@8"dUOPEB;!l:-sN.XJ9*$-=!./jj#rL@5L4-MW9dQ45E23D!6Sb\;,1`7%R#hK1@tm]Y7;Zm_4^]+C!k-@Cm<e;Z0t(rJc5S!hYW`C<O)G4f-N'QY'_tB$ArCG%Dn+*R2edO)[NW(fgFt^ZCo."JXgg;IZ$*nJ%@7URZ_=o+!'E9ONOSD<EhND&ulG5MmSd=QSA*0hiaeMF=8!<>m9DmN!?*;cA\1)EKq(sSr4dH.VS8CLnLIEI8+m;?h%oME.JFe'\%e`labp!7n!GH_\]i#Yc1,C(KrZE37>;s<#d:/h@QXj$l;Ng6;oF/heH?C)nC&g8^,7h&^Z31LtuA:m.s"QukNR),#ZV+a@SlG.&2%N55;<<+fY%)g`dCV1$5'10U4',<U_b]#Dc#XSt:/9&-dINGY5VLu:mm<'L0#a!F`dX!l-VN2016hE)+T*a7SZ8%#![;(P9u<j`Sg%a*;>YrS:JE?qF7(LF@p]CL3T,aWq&PAp:?s++C870>?QjZn3bXd?Y6OqZlG+[V5*#e;pu3-5D'(.c<1&M,3MNdj1XL"Su@b$?;7"%gfc^uWD]3!]9XC@kq@"i"/!A&h,N1Z/[4u#,?Ib7V^rX!>OtQH\4J8J:0Mg%H^I7b-f%BhDG^P-L@giIJlEm+_p$h4k>W6LIIF%:%_db.`T13,?8t8GACo?J55Su9?(*4]c?et:,;0[Pdr'_hrqRK.XL'HN^DC[KtOu*toCM58:&^MuZ%[f'i2RFKK(D_h&)K-?6a/KeS%AZm6u9j"I?5=dYI!=7MWNge\Q-*Ye!QRJfNZcV3_G1W@I@h"gj`$D`VF3E1=DFV$5FubsM.W`O]'WW4N4^;A=Ut\QM'GAHb!U6W&%OO@"e%2X8>.0+1--l!-t6]J%9gIn5A>UVkA3:I<B$[Oa[X^A"Fk%1N#=42k&''KM/97gda<dXN,($Z@LeI:TMqFh7g'sQ+ODe34a%,/OdigFX:RhIg9H1CGoTg<VRVcA-h8GgJ8NX1K<:$1J?KNg8Y#\<\Q5>sFHISq6__Wu$O_>*3_J[J6@>-()Y%$-'*!!eu/>%(0d_%EoF*p$8_lW@j@?FA8_d:"i;jT-!X,@f=`I3;_8A9eZbaACbfarn4Dp^#TQ-naANp@.(%J>]p(P:e_<:C3C7h#OIjg(-iut^Jnqo@%e$,\2[?,sP`<?]+Wf)bDMS2Ra<['D)Y%j:P19>,P=IXa(Z]Q$ijWClgAeeK`]s&p*iA2QFL(SB*Ori0(q%8if':2Fg?6.8l;Cq(M%gE/]8#&l,F[P!uSSQ>g\b5:P@!FM&("WV:^9U2Oar4gm>'dQ*U$;L6MZq4!g=!,F+9Ol\X)HXfm?':p,a6:U:eS4kMko-(i.+Y5;%f<i(H8IY[IV3/sRO=GFFpaecM2Z`Uth8IaoKMI0V.Z='pC=mN*TAnqB):_Vi=[E7A'E?V'NT?k.Dgru<_rYb#j$k3<[u>Q]Z3b+A%dRGQH$!IK#fW[p%7u]@%_%-*,r,$"Lh4)j?2<jNuBtJ.Le3pR9c,XW3$^1V235;hba2`!%)hHOdUZH2LF8]o[;SQ6JT<PI[i_KhD%O7`f(I,8>EI3Z>;Z!&EfR[1r=DY/H?Xt;RNj,f;5n;h?eTi>KgZoKM$:*ja\c-m\OqlQ)\Qa-1D?RR.d9%>a->io5\ML'Vk>\)4o%RC+ZIjQqD`>^%AH>#>=I.ENb\S_RJE!4_RcUl)2nPdL9Dn]-r_;[`0oZ)!s!oqlk,]%OO!PF96@0DAY`eY]YD6OshjZn2jrCGTi%%&?nUR[6r&GO_+7#[G9o>0!=:6D-MaoMetW#e5So3r#rEN^\[^3^o$`LZ?))8K+r,HFs0d=rL(`)oqQ%:UGu2gXR$_DBU+*'\W9J'%ljc(HU,7lunl@#+he1ofjXjTKR/dDE=KZ6kGH,=:(I.-i;%^r\"'*MRk,>/UQs"!j2Jl`:#l1S4&Sh?4f+NM>U>Mcse+ro9-.C)2%ai]i@P4(85V%o%[Hiq22DkW5*;H@Q0q)>of7`>:^+SQXI4/FR\W]*iR2F$SrTtC=%X3bp(+iNp);Q6Q;)om!Fe"fW.9<7I9"G<\e%XIHK,F\]^W(CPc<10I#ul<[?!Qs)P4M3cIY8j2rDrSAs3e1<cULIlX5pYN*<;0&<b>-cQu+DedCc.&lHCs9gP;X,Ns8Mt_&5UFM[%AMYJLM$XSLKs!ohCBgKKlLnBsDW\I4^KV`;Q87Z)'\OutSV7=\q3@N@es5)saTr_=St7l+%&=>U1Pt2L7&W$h8bm7kLRE;K&*oGh%^/b_ioE3UQ!i;`8B:]>@Wh)k]4.EWJq.B,?MZHrP:h$CH5Z0XeSW*7\dN%3pekX&-+Wr\J863!iK%<T7'q#Po4h*mb^lD?aNmCI0%',;gG+%eJEgtfo3+/_;]=f^()'Ph0=/5I?WIt))-M\;O2Z/21Q;$rQXK/CuN_9CfDBIR90h1^*qal.gccDJcOKk*2[\<^rNor)(j%?!W8ffV:O/XOOk?=ZiY6ocE2U.M-3[QC0@&H<'g%Q(H-%/Au@X>\^2@LNu"oK\.A:NGS:j0A#Ik:sj3sK#joG[AOj,80CGLI[cJh%&11Iu/X0AD=<E"'hhnCV]!f2u]OXeoL9]8\[AL0).LG:?Y.M7ph)bn0l/Y\fPUtSsEVAg+iZ&)2Yis/Rj(,jeA)5!VWrX"Y$d'Ku%qW[rTGs5(E@;H18O[2LAq+jXrJa8GZ0J%/&D('\i:qrVPXY\[6n##Fib4Xc@L!Dj.-ju"d8Z[sg7*$LPIZhn%/b:N^9GHIM()ZS8%o2OMaF,FeIWR]6h5^0h_`g;)k"^0uY2dK/o%<=6d00hDl(*ltY8#<^-j<.aR>]el'%/<S4lFA3>"[_2M2]SFBG$.BfGf'PnE[.MR%&uM5(F0`/^O937J.n.^#VF+\a;^#4cY;+$C%R&HFZ5`pDrisa?;bloPeR^TMk\3__(.,-En.Fs1p#<8'Kb=`&qPq85H`Yd`Ct2$B%9!$e#H>b*SR=KV_e!mOIrL9GZZN'(Es7k>-hn8j[G@,aV^OPqD5CE4#/?eW.s"j%PH\+nWs'9DVHKnVir:a9Boo!bgq7D.On_;qb%IJ*$mJ,A'2hu9hJro[WQ^%q3YX4lJ/qJY9hh(O9JoWtI9H,'1?h/=@trAuZW^U_Y&%_Ji_l07B_s*jo"YPt3pdaN\k7<m@PfGp%K%15dCE]=ML"Meg5i&$)t3Whl(Tl`\'KFiZ,;/&&XpnfP&"r/]%n02L2'qmTB$otR?$hstQt\n64#&+gY?PVT)G+64LO2gQ?5m]q9b%-OTO%9NQ<pjB?Kd9b"O`,b\A"]g<cp0a%<!,@aYu7OKEWKII9d1:5mndE=A-Rn[*i#)jR1YDcC'64p'$Ij'AZO[U9mR+/h31TQm/%0Fms70TD@XNhq<7`L'N^IRWo(<qe,]F4l(ck]S9B-^2u?k%G*[l0g3K`l3fR]1P25Q*5dZW)a<EQAXk#W)I+"C20`g[+%C%D:o_k%&opmJ9+gpmMTZ=]af6n'>^ZnQ'`"ardS[Zc/%X_\++3<3TA#`PKD>;l07WM]/%k]&B?%*_f^/^g:"fDrN3.?GKMf(B'grfPGcT9M%a#$a:OAU?S``1dR6`J5s)o0klDI5hRJS?55(X#15C2Bm*>\+#a+cPOLJ.f!(1:-],-8d_dbX,)n.'?`i/*Cjj`+[?EZUR5\_nRdO%,l\uu]Wd51=P"1LM]N._Q$-U/04N)T\&'PQ3,DJLH)%DLae3$Hc<3c3(^iJ0$=>5EltY!,:lDJGRVftZB0c?/4_E"Gi&WiNlMHk/%TYJtOSmeo`AGY`KEKmb4%hgs:r#r>@b9Y?lf?W`_j&"'@XlR&.5m"q`'@RAVY!#7l))CXiX\X8-*uVNcZbohsl5#9hdRal%-Cp@)%8LVD#-IqR)8aQLV(=s4&?n2G"F_pDRA#A:/S!u+gg#dX"Q+^gXJ\?JDr_c-"qG@#[Yn4pO$N(SrBlP;gS&Ep;0h]>LPFCFfNNr^T%@L9V+(e??GI-qDd1c_!KCu[ES#\(U<Zd*'g)&I)f81R#):gr%\"$VWO&ILn%LU,!,_lj@l1L`5;`q;g@ZHlE#f$H!07$1i]TS&lV%1ubdm:F&Z8(RODH[k_Q#0*sGq:Up>J05i@7K(a]hSc=p/eGckP0<)Wm^eKK_oRl;r&377Z0\^?V/!DI3;?0OG<W$:rio,=Zq(P_=%m2Vu4"=@<+1mhkj*!0VJ,;-tZPRWk.io%`(HabHUF)*?\0=]*?H;gLA_sU94PrD";FD9Pb'hp3%9Q-\*;X43?;715rYUBMMNLOAo%FOa8(rN;0E;AI3KH5,$^^CdJo0ht[@I=P=R^heaAURmD)&5.c]0)\D^NkOQ9Vtj7THi;`4597,?eVSJIZLmej?giG"Z:1D]]]0qp%RfKdajlE8CfC6G!pLb60:Qrmo'YL;(k)A]@HCn-B5]R'-%2M'U+g8a21qbW@A;NI_9lZD;k,-:tojZPJ1`>8ED(ZMR`RuLi5JrL%%W-7:X=t!.hUkUXmeBX+HNUL3EMH:%12X/"V0oWL:Hi*=2r[FJDI-qXT6\o!%H>80Yr&Ng72>`'IW*";0G_CdOE&Rgt&jZJ7U_Vdn%[lk^)$+Sc>oU+u_[!kJ8*(M5TanL]V>Ah4OCjb$mj'p>1nA1=f.;ptkILQusb)0U-eG"`"0!)c@.\EH0s,^R]XtNJMBqhoD)\[h^%q<<@9A;8b6YD+Khm,c2`gC(su>0j)#Da#*^pNE_4\Gm)2o1sXel*Cc?-X_HH?Dm5;?0@9`bkh7u\>$mu^)@6Pph'i-]9AHD0trjU%\l<KEMHueXL>B7Y7$K\8WU01\@Q0Vb3fD$:6&ahqX\K"J4+*2phm6!L9g%0f>%&/<l,Mk`Cp9$;V=gJ,rKo/>iisq*>X)r8SW39e%I/diNNR.??48iYY#sll2D!3,'8s/QolaWEppM$*fIG@MH5):%O'G/;^j=0$sAl<dA'k;"m^$t=u5OBiY9"9iPs8FmqMN81tq>\q1%q.q1#NH63sdaRnk)</RWN@Wj!fg&=8P1f+0Q,t[L]uB#DZJ+'=GPcbm$O$M^f^,5S;`+m<lW8;jo10L\egF/#!DG5NN)(@u3HK$O%o/HtM`"9@+\&-YQ+4*(]*Q#_d<\J#TIJ@t*EFs#h"6)a#24p+h(A69$H,Y8q&bF].mnXcTTCr4%0r.MiM'^PW>b`Ct1H%WAAEkWA%/9Us5o^LP,Oll%-Ni_ncj>2Y]4a]8PNa\B*r=fOifS6^&j^t6uRGD"f4,b)dU+91tjI]Yn/M98$'R?fN(cAJ)X-*;^+SUgL3DatZ%Emn1!Z7Jb^eV;T>c1G&_<P>W-_iPPr*bcc1E&T4R3[=#/.7*4JAUOGnn;S,BSD+mGG2/"LXH,&FOsVI#5P"b:\ZPllj70GVKqaDV%k0P"&s-+IV3h9s_NpVfil$E-WK/OK=A_1$r1?fdlO3u+poN("nnm]qc0slu<39]f+n311Y-/Q[T^%4HsIX]j,Q07]G'sC,6mH#=9%@ItP1;AsKJ3D/+3\>B'J*C=V&Q]lLs9f_[+'\#B.Z#ECO'm-6)AgtYs!^f'l[f^=:4A@:&p\Jor,#>drI5t#a=IS*N*n+)Ad4])\%=H_3AcI2"r;Y\(hj![@jEM'*ee+5E0):(,C+0f.t;DRLu]rf4.aEODo9tjEP%mT#[A=@tu:"M3:gMD3s9D;$Vh.Gm]FkPM#>sVkJ%S#*n(B7Dp7`A9Yac=ToBB/Y+*^4.5SM-4"G)f>NCZa>*<gj%&k/+ajC00DboObJdrZ_/P-PP0EX$:@tYbE4>IjRcp"UWY#n#u-=)%KjrE[T(!B?;(gt`#eTtWl?j@%\:!(TF0dhd54V4'J<T+MMJ0rROT6M&S[:$s!k>YphO?3[=7A39nX;k&4eFocR=C(X;EjE5Rq3'f%KpgiqWmA\&i!tg>C5ZZ#'Ks>.nuR['nDr'ac2B%>,K6rj"\cIp*Y3`Z66Do_rqU;N<G?QGh[G--d^c^);:"u4,7'^@&"iGHo"mU5%_#3^9o(2;>+!*SR-8e[I33,;bZ]U_g&ugk*7LHmhJZ@qVao,gt.rrF1qg*6%OhrOQ`7:GRr_[l+*#n9S5W`m#,OFVIIl'hbC(rW$%3:?SS*`m^g8cKtVn+3pikVc]?4OMsqAkJ;Pk<7n<)5#NJgZ]e;5#2+c4P8i'ja[3,r4Gu'#D)#8/MZcf(+66<KPPuhgt`#:jnE*%%N:oOP,+>eP3`8(N04+1C"P_ch56#pbea,rhmE"EJO\Zh9W6G4s2*Yh<O80UfCnLHms7jq6=f:MF^.eO-ZgiX^F@haq`;?)Z"T@i,%#bdH4!t^GFfB>lsTh@uKHn`Wki8unla0@lV%&.t'O(ppeq@#l]Y3roY7DG4jrn3[@JY7p\(*cc^j83bl;aV>^n2r.a30'TJ*<(U:%$LZ6.Bk8%rqm2F?+4'[N'XO\9s1%U3]/LgYTo:sSnG>G,WN3`,Y*&GA,;,."A2FsO>hj`K1QkKRYTD+menR.-ht@t0^,V.#F6q.]%l8(RScS,1Ket$3[?V:0[j2FfKaUIh)efMjpm[nMDioV=H4)XaL2.DIX)*RkNDlUml\JpYG5aS5R#P;I.&>A:_h?]30rHlQc5^A"l%q`PTeOM+6npMT?I\_i4H>;X@gg%'O/WR.7>3#=bWDQp'qaX5QKD^I!l[e=[,I@N8Sk&&OT=sZW&-o^ZBE-F1d;8[4GDtLE3[CBNJ%;Su9=_ctF!,Fqg2D'iFW\$a`SF85R%6SGb"dmq-sgG>^PpSjb$'6I:;2IF)PNI"UljGTl@^RsCs'h._0b6l`t17VOMA]lI70:#[5%.CX<3reL7<p>u&N#99uk$=@XBURBtq's;Okri5T&['Mfq+X,nHcge8jP!NO4P9]HK=kTJ:ZQ@&)Zqehk?g;MUUnj;PI5]NC#7Wh4%7=.LD5!p'72_hno(4.tQ'(%5!L+*<!gXp/`Y4'[KaeG"9a2'9L<`<]K+t9)ZLh^Y%2"fS0hQ<B^I>Uh>k[1Ui9KI7jM:tQ%o#+@O%^QgLd'`iOuZbAC/SCWK$>C2>G-G34K2W'L%c.!.->MFrF-)kbLAr6c;C>$WU&5fl*pHCCTdg!\E;_3`=K-k%GjaL/6o,NCYK2hci%OF(=*BG,,;8p$69pu/&D"[Xb5]`JDsd)@q:B`("emT-t?s7Y;h]:\@p>jZDiH5nl=:nR^NI^O%[`;?`mac2>DmN0D3*oV+DpE,WV%W?00$-ID9EDFU>1h>/LfZVT8G2r5(Kpu_:Yl&N6RZ=,H<mP:X$&t+_>KG29`Mnd"f3_e5`MJ!c3l&8@#PcGU\0Y)OOA1uPqj1pn*%7S)20KnY!8%*%UN*3T(LOYQ;:bB8O8=_\,F&-L'N^69K!PVBf$6We*iFrVKSB;dcR=kua\d+<!"4\#(YBZfFO;2.'R`9gWuQP25u%c1U'U;.oR6drg#gB;b'-I/_9S@47a)`_Q9V#Yd_\%sq.bL6l3+q3rB<pP^5Wk32DV4aPF/23t\3%%l-a"2*GMIDWl8q:YQ0eBtF%%jpS@f?!.E8Ci>:sPeGuGl:@er(Tng'=X,/o?I+t8g\6(RU5>D4mM?h>4h:T+R/Atjbrq)6IKUPtisWWrr9lXhlYmj"BDTkT9a^LS%L%-_h1if_)Xo#q3o;MJu(UQR^]3cN_ibH,Nh;\DU`t^M^rbd*i9[FBNT=!EDj7CA72*uL`gcZ+#og,:hPJMm9P[@*78D\ZBDjQ2M%m,_J>A]2j:6GANRdR:*E\@MLiG^GG]50.T7>XJ)WS#c;$$fc6El)3G1`Qc:7-;Mh_c#3TGmi;Z3gH5YIrLW9,%=_eK/iPpgaHaMY%bk%YU%\$<Z^9/Jm]'S^nqrZ[@KAlOcEDUAVHh=qg/s5%4`5QB`Qq-+kDfNSBg[`9YN*Ynd_?Q6Lo??+W&R*A%\)[21O!"A[a*II=%U1nD`cO)lVrfu<oc)=^oeq%>Q&&5g+LEjOPH'"Y8I^BuHUZ7/'[("X'5OcLK]QD*VSZi"2C@H%cA/hsVVFkZgau4(W)>^pu.N<qs%;-jG`es=%*4^1&0&^]/8^R:Z<i1'84)tnH!s7>Hfs5mgUldg*W09-_1oPp\[q48]"Z0shLcWLGJaBDf?1d97=&)QA=1d(fU,L,^o%HL+/eFmGq>V?Kj+-)o^e;')j(HeuU-fLd73X"@"\]q6<@=b`F1p6)&--dQbD>3$335Pdo,h!aWMf^fbET&G;lJ,S6^gKt/2r&4D3%mIn7M[AhY?ANX>hNVX@T@m'NJ6V<sA4oD$moBa$6UIIs/FhKb0RSr0(#4JG0CV1Tr9]*#he)U.sB6pM312uC=W,1Yf2UcOS)DgsW%Ml4<!_=ujM@gqMH#Cl_X5H#Up\;fYjd^HLY4YF@9DGU1HMue+:g)7$%?[W>aN2cOHi])+?;cNJC^HGrJOd?S!"3R86S:$(Im3`qc%p;%,]D]r*'Mruq5Zn`72a4_,@N9p8mh.mugBKtC]?^+i6-D",jfCci;G5*$kdFHGK,=7BimtPYCVqeYA`L=>HH,q2%I2R:/(O2dC%0):7GZ_!.QW]1j=s&[sCm)Y;.@JC/k*H]\K#0EDuO6r,2qd;X=+>dU2m[8W:fWXb&58H_!Q)Z.'qptP3`T3K0-,'Xh1:reC0e$1D%s*SgrN"7>bKJtVhKP1,qO`[ZOlggXpm)0ZFQLnjp>b-V8L1`0&Yg=\qZn.V&o&]K/]cN<$d6Fe"]\ZZC.r_?lL=ToA=sO)^_R<Y*%63'P"je=+(+@m/heq30(641-kJ`:94'Bdl15UD4#>"Vdi%mZ7(0Ns5E6%Y4Gk*_*q&JIYA/PFKF,\:g@Q,"Xo`.AP$L6=mhb]#%)%R^`Ni'O5$D'_4ddfakqk=W:N.;+-6*HZBs#$B^nK3M_no,+Ht8m?78-JLT]Y<8DOJ<!j3<>(1WoC#[<;:R,rB(2XFeV<I<$(l"M1%]f-(CJ1Q+niKq@SA>(7P/;720=\a[:AeduPCah2Dj__LaiT@9iiDP@^jki_s$XX5mo-&VcVQ:f<0k&3hmR`440W'*=4IW0ATiJpZ%PV\$79/Yg)'@s=6oWFi9CJmGc9qfk..UZ1g#\j4CdAD.Z64>)oRjL&Mb0jr)SDs:&pBO<\-LB"2&s*^L.C=J5Tg&]A9mjaeKK`r3%'Ns!n`8hoj.5qJ.s&#B;GIMRi#tNd,Q/WI?qoL#V,03\?<B'3-"F>K<W<d"3M4q:'._&E+`3>A5,:X2:++QKqhQ)h&,VnR^Wfk1s%W3o@='G::u[(_E"._l=U[DnT<_5FBWoq0U/cq;`P"+GQ2Zp$RqqHn]A,YY3NW/rL@;c3a`2)Ym!$nBbZ^Xa>j:&'P7Bp;Mocr+_P%6V[@>B*L4%7"q)9f!,_0Z*^4l1GKA3Oq=&dUI#nu%BtLTjjkGuiZU92e?&+IHpYApm)0`'.^UO&1a&&^np/>(;H_OO,`#D^jj<%'%\eht;!e+O!4Z60U$P&k=*KlldfHJAE%%("cs+alt:@p9S;6jA($'gq^qTCVT=fZ6Q6MqQBf.WCJSjoU:$aEl5o5a[o5c^qW9!G;m%,oKlUJQ%\D;@Fc@_?#F1M&1ep:,-$iG7'p7VECu7FC`(OZ^`Cq:??JD/A6mK4B58h\S_VDMK-2fPX#LS4CpB1W"_QUn\.?YV*UF+%/YcC__Pl>WXR@5:0,S=WUZu2s`i(4J&2UhoB3CtnP[E.<>MGP170TU3g.HAj$;_Jkq*pR#+!FY3bup$]6)sLbKUiK!X3+-]UJ"E`%2![8if^F>j76bABOp+nJ(YY#5N'M>^T#OEa<l(iB2K_O/&J1WnK>!XSKpqcGU<"h\^):]>c$7^o5L?/Y:jIQMDe\IkI)`7^!=Q(o%<Q2mjWThe[_%AshKJ]WdRedF-8G/&#j=:#*9H?$[;B5E*%(G;i][^:WbL"f$VUduYWfN-=4.NKF&HlI[81VrCR(oCG"UmjWBEjY)%<N&igTs1Nq_+(Xq4?)Ue-=#h%a5scfs5^<M1@?-+?*8>LJ`_>#'@b&<W8F/h6^,Yok?(ZdM(e@`G'mmRQ_J]C'Z$MFHtHp$$^;AE%>CUIRomEekUF-4WKiS\;_1Aq!1]^dn\r@]?N9,;W)K-O7\?D@sii++YIJ^J<Er\b:^9+u0\K(%;#.Ol"$.i+E'U(s%ZrJ#[Q0G8L%C?i/(iKW5t,k'0o$rP)G]3)e,6Fkrrr#6J`^60B$McR2qMF`<AUiQOH69A@N8=:Tk;kpa0Oh6f$bsU6_3h;#FV>]g30dU,gb.n#@%l6QO<^$(1ca(i0q6)XRQ?.B_g)l`qB:tsLSGp';h;BF)88na77H3>mo[W0NYP(FQN/^o7S9r0fjH>k+elYWuC`>EnAS)214]bj+I%R(B.8G9=KD#V)K.en1T?=Q;3$NRaR/7"J0\F6X!2f*l'CWR:\Co!%GJkFqT6)m)2%g*<If8mHbc\Td%=!!Or-l7GNq3g?uD(,8pe%*I:?d^(+9U3Iqk##R+t`"gLF;MV-Zc8iRLoOBp4lZ4![?G/t7m'`=o*W/'V(g2SE/5jbAj%[k[omI#,b)ZUJ2%DI,^66ef,rY;p&%mV>Sp^tP0,\)XX;!OtM/PVoJid&IJ)aaCrdh*!!E]/uj7"6_ANNj"*-P,e]A:3>4UUje`N6'YU.&OrUP=\N!s+&4_P)]>6LH'uWj%(sl?O`T/,6lY]tj-96%ij#W+-D=1.j@4>iV`8p#b(jIur$'.if>p_:BDjC4H=\S#X1X8_#!UaZ,AheR]k^fZq22^o^B:-Y5F0jMu%2N'$)Zn?E@;FHT3=/_<!YG6i:e.pN:`H`6VG4&SYieIneT#EN1pl</9ih]/2IMrlt>Xt=(\1q`<)O'LS@pGmNK7DY!KI>5:Sa\Cq%Dp%YeoD#TRM!pqU06nb*Gt_:7C3:ehAP`Q&4gfS7Q/`E'1ZmKDAVg)X2fUGr7:aR+!J2.lBZ4dh"JYSS->"\JhYI#ee*j>d!S>F,%n@J#qS8'T,Q`KC!&25]&^XP6:W2;!tl)<iaPFZa'SM7JG>59`seDoismVXeU$A@_d<!B=V[efL3//mJ$h]@C#;BWkajMs@@TU;m&%EXT<6B\!AR'tVt/.,8W`Z2qD-N'$.(M]fJ&CAe@]s#S6upAjZ([7@'XP62#*K.'F[WDT01ostHOQ@bP)177jhN%NOH*FENt6gXMO%IO6N3l8>8EI:g@AL8Pr#)p5WgmX"4.Y8)M=%Xd6F%hXtf-Yf9ao(,u2R9*5@)p%,[?[Y#cp3"[;?@or<b0]FNam9\dp/EL5>/0L3%B9G7@YrRPiCkgYag,?*\IEGW=#^LQZ_._SrqQt?a;f6V0FgJJ>L\p@@,.Fb^3Id$Pe&OWm4`!cHV0!U5_3O2^RK;cSP"ENTrdeA3%WGR8X[baX_9%.CVJNZF)0eY^27Cj&c:+QU%AqkIp'cTPOGcZF=KI<6`,8\`;j#(DAE-IlT$'dDi=KcVSb=&U[C9?lml8Ci=f>MEe%)#e06YsC8-=Hlt%N/<621l;mfAVM?OlC2jP#-qpGGoS?1Ur1]JF<<WT=177<@&m`M)0-F4_XM@t0aso6.<fXIAFWuA6t=n<d95W*%kf#5@:k]*E'JHTL'upP"&@?O"+*;HWY:0kLMRkHD=3ZhWM^mlhGl"u7bdV=ZHIiWVi7&Nf%@:u@DQ$FXAknqN$V1u&U_mU=.1n4I%\VUZ1Zm'-oJd.m<=mXCl%7&Vo^?,P.^iR(H-I\qd-Vf*$g&$VA;aqX5lL0`E6Ju1:IBqg-*E'K*Yq[JRN+X2<jT_9%Op+H#1pUQl%W"B9FgmeA&9s6)J$D<igNZ"F/>FnWW!I4&#>LfRW5eDlIFeto-[mKIKD,Z3LEP%(E#)Ta^!kF0I#1]^`-%t&:<=0%LgpX"(P!H.B%jc/L]K6MqtoIc"b`*o=s]0S6%2lHfIU,%.s9-]uRFN-+SjqC2[%$p!'cWOM\8]N$<Zo+1T)[jX..>Ra]&r[Xld1e58a,B-A@4Y"0%3pmUuaigf8W0t;qCin8UFTgD51kU(+.Pu(<OF(^*D$P%:TGc&p;uq;BS"+WPaUB+(9OuI'Ei7$q8Tm-3;9/_=e9c+-mal'F(fZc-%3h,HKW&S(72CeUQ&S1Xc1'MQ/:.(jkYiL7-3MuqnR\SI;[10,Y\KOHDGJgbHn-u5L.<fWPN]6XNH\_62r`a3Xj&E>e7g]%?F1Ze!%qoms[qn`".Kq2sf$ST#.U(C;Ed.9cdIA-A3F>&1%7.CFRk:%i*DaI8NZ2-E?QXVk95u`gmafdg&+,55sACPNo%JtjJnrhThcjW#`%GJ,C*d#.teXsC96^SjoPk1Wj6So:I$ZNBK3cjU[!WmJMNU\R9?2iN*lHPaL3@YtK<=38hd4'DEjC:g=7;dJij<7uRR;OhJ5E);r(%k/[)J6t$)QOW,3(QR@H.odLit7*5Pf)d'l/kLESJ8Dp/PeKoJYkk^.#eKpcWV#[ruXKCRLlB9;Y_O;-Lc#Nn/4E/Yp+)dF$i/jY*%^>[JZ"G]>3Pe/\;"lF*Slf+'=o%O'5rAgk^"p`[B++oke\pBH-+F(ZQCNE@okMo)fjnWm6.s:oE:eLlt7'SWDmMWBj9@l+c;uK8;%hqunA%Rt_'2Rqb_W(\Zuc9#LE,pnG;G8)&XcGi92qeB,#%u>2ON"HQ"YKfl:p_PL#,OWSFl-@)D[PO9b:]-$VTHL#Gm0H^$_Ip\2%@AfcPHH3OuRbJY^e[>I"8g8uk;*C7]G(GC-_5)$:]&o=?5)$uta_qqkc:\)&0.A?Kf'kbGBVX,D`de?`BerIB"r&#).,HBl!t'OH%HWZ;%1B1^!qu;Lg;aq5>)qPV/0t?VU]eQ2Z.)U,Cc^Z_FMfqa:C/Ap0CE!B-aEqEI0U_3W75kDr2YHDh)Zq;YKl#R@\LGjI@mEo,%BCSpi3NDKiA^M!iagY=];F!^LYa\f$_:"ZU(WDQ@/*tOea0/cl?*Z&$RbPhDeIGJ*6h/!'UYJ#cbm,_m7D[H;j9mEPVP2H+CV!Mq%A?r3=o=M("(Vjl$mt2>K5Bi4K<;3@Z5Z>?SPW(1J^u\[4qi+9[3hnG/h*#IP2+pJ3;1%KU:F[H^36h35<p_$Kj_2[Zmb."N`KbJA%gpOD>PhXd!Id7cc)=;%GRd,4Z>R$d,KegBADY?%eK^NY$LW9LNnkM'Pa@h?a/`6:c_YR-OLO2]c&WUueb!X`q]4nsYe%fNCPJoc=%-5B.?=psR-75V)pNqt4EKcF&V=Do,1"tMiS(>n#q>^'JhC>\`;c5!56;?kBII]GL2I?$?dh4s_+VRioo=%l.[2YFMM-],%+!QdVb%,!#R-LS]LGY2Zi@/hbe)OL)!`a=p!':qHkL@O`8DS6Za/2a0)SZH1R1W%W"M>.^Z%ZJ6$Iq:+UBAI+8>BJS'qomBHcA;n6o07I!4%9W;8T$U)n*J:;MB:F=<4<q8F+0o#Wrh)Q=GN04YD*j(5RZm1J37%#!*?+1b$.RR=Hh*B_u6[fJ<)&e!W2l:u+P@!C9n&=gFs0n&]%TDniOj1kTlo]<!s?U+Pal.sD;I\WC!Va&K,]_hWgl0EhJs75gMlT]n!+"?AK2#7%CJ,\b@Iel:gMik.~>%AI9_PrivateDataEnd